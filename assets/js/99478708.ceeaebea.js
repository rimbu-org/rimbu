"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[62236],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>N});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),u=p(n),s=l,N=u["".concat(o,".").concat(s)]||u[s]||k[s]||i;return n?a.createElement(N,r(r({ref:t},m),{},{components:n})):a.createElement(N,r({ref:t},m))}));function N(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=s;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[u]="string"==typeof e?e:l,r[1]=d;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},51995:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>v,contentTitle:()=>c,default:()=>g,frontMatter:()=>N,metadata:()=>h,toc:()=>y});var a=n(3905),l=Object.defineProperty,i=Object.defineProperties,r=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))o.call(t,n)&&m(e,n,t[n]);if(d)for(var n of d(t))p.call(t,n)&&m(e,n,t[n]);return e},k=(e,t)=>i(e,r(t)),s=(e,t)=>{var n={};for(var a in e)o.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&d)for(var a of d(e))t.indexOf(a)<0&&p.call(e,a)&&(n[a]=e[a]);return n};const N={title:"SortedMapBuilder<K,V>",slug:"/rimbu/sorted/map-custom/SortedMapBuilder/class"},c="class SortedMapBuilder<K,V>",h={unversionedId:"rimbu_sorted/map-custom/SortedMapBuilder.class",id:"rimbu_sorted/map-custom/SortedMapBuilder.class",title:"SortedMapBuilder<K,V>",description:"undocumented",source:"@site/api/rimbu_sorted/map-custom/SortedMapBuilder.class.mdx",sourceDirName:"rimbu_sorted/map-custom",slug:"/rimbu/sorted/map-custom/SortedMapBuilder/class",permalink:"/api/rimbu/sorted/map-custom/SortedMapBuilder/class",draft:!1,tags:[],version:"current",frontMatter:{title:"SortedMapBuilder<K,V>",slug:"/rimbu/sorted/map-custom/SortedMapBuilder/class"},sidebar:"defaultSidebar",previous:{title:"@rimbu/sorted/map-custom",permalink:"/api/rimbu/sorted/map-custom"},next:{title:"SortedMapContext<UK>",permalink:"/api/rimbu/sorted/map-custom/SortedMapContext/class"}},v={},y=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>_children</code>",id:"_children",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>_entries</code>",id:"_entries",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>addEntries</code>",id:"addentries",level:3},{value:"Definition",id:"definition-2",level:4},{value:"<code>addEntry</code>",id:"addentry",level:3},{value:"Definition",id:"definition-3",level:4},{value:"<code>build</code>",id:"build",level:3},{value:"Definition",id:"definition-4",level:4},{value:"<code>buildMapValues</code>",id:"buildmapvalues",level:3},{value:"Definition",id:"definition-5",level:4},{value:"<code>children</code>",id:"children",level:3},{value:"Definition",id:"definition-6",level:4},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition-7",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>get</code>",id:"get",level:3},{value:"Definition",id:"definition-8",level:4},{value:"<code>hasKey</code>",id:"haskey",level:3},{value:"Definition",id:"definition-9",level:4},{value:"<code>isEmpty</code>",id:"isempty",level:3},{value:"Definition",id:"definition-10",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>modifyAt</code>",id:"modifyat",level:3},{value:"Definition",id:"definition-11",level:4},{value:"<code>removeKey</code>",id:"removekey",level:3},{value:"Definition",id:"definition-12",level:4},{value:"<code>removeKeys</code>",id:"removekeys",level:3},{value:"Definition",id:"definition-13",level:4},{value:"<code>set</code>",id:"set",level:3},{value:"Definition",id:"definition-14",level:4},{value:"<code>size</code>",id:"size",level:3},{value:"Definition",id:"definition-15",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>source</code>",id:"source",level:3},{value:"Definition",id:"definition-16",level:4},{value:"<code>updateAt</code>",id:"updateat",level:3},{value:"Definition",id:"definition-17",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>addEntries</code>",id:"addentries-1",level:3},{value:"Definition",id:"definition-18",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>addEntry</code>",id:"addentry-1",level:3},{value:"Definition",id:"definition-19",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"<code>addEntryInternal</code>",id:"addentryinternal",level:3},{value:"Definition",id:"definition-20",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"<code>build</code>",id:"build-1",level:3},{value:"Definition",id:"definition-21",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"<code>buildMapValues</code>",id:"buildmapvalues-1",level:3},{value:"Definition",id:"definition-22",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"<code>createNew</code>",id:"createnew",level:3},{value:"Definition",id:"definition-23",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"<code>forEach</code>",id:"foreach",level:3},{value:"Definition",id:"definition-24",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"<code>get</code>",id:"get-1",level:3},{value:"Definitions",id:"definitions",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"<code>getAtIndex</code>",id:"getatindex",level:3},{value:"Definitions",id:"definitions-1",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Overrides",id:"overrides-9",level:4},{value:"<code>hasKey</code>",id:"haskey-1",level:3},{value:"Definition",id:"definition-25",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Overrides",id:"overrides-10",level:4},{value:"<code>max</code>",id:"max",level:3},{value:"Definitions",id:"definitions-2",level:4},{value:"Overrides",id:"overrides-11",level:4},{value:"<code>min</code>",id:"min",level:3},{value:"Definitions",id:"definitions-3",level:4},{value:"Overrides",id:"overrides-12",level:4},{value:"<code>modifyAt</code>",id:"modifyat-1",level:3},{value:"Definition",id:"definition-26",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Overrides",id:"overrides-13",level:4},{value:"<code>modifyAtInternal</code>",id:"modifyatinternal",level:3},{value:"Definition",id:"definition-27",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"<code>prepareMutate</code>",id:"preparemutate",level:3},{value:"Definition",id:"definition-28",level:4},{value:"<code>removeInternal</code>",id:"removeinternal",level:3},{value:"Definition",id:"definition-29",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"<code>removeKey</code>",id:"removekey-1",level:3},{value:"Definitions",id:"definitions-4",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Overrides",id:"overrides-14",level:4},{value:"<code>removeKeys</code>",id:"removekeys-1",level:3},{value:"Definition",id:"definition-30",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Overrides",id:"overrides-15",level:4},{value:"<code>set</code>",id:"set-1",level:3},{value:"Definition",id:"definition-31",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Overrides",id:"overrides-16",level:4},{value:"<code>updateAt</code>",id:"updateat-1",level:3},{value:"Definitions",id:"definitions-5",level:4},{value:"Parameters",id:"parameters-15",level:4},{value:"Overrides",id:"overrides-17",level:4}],f={toc:y},b="wrapper";function g(e){var t=e,{components:n}=t,l=s(t,["components"]);return(0,a.kt)(b,k(u(u({},f),l),{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",u({},{id:"class-sortedmapbuilderkv"}),(0,a.kt)("inlineCode",{parentName:"h1"},"class SortedMapBuilder<K,V>")),(0,a.kt)("p",null,"undocumented"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Implements:")," ",(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map/SortedMap/Builder/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMap.Builder<K,V>"))),(0,a.kt)("h2",u({},{id:"type-parameters"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),"K"),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"undocumented")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),"V"),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"undocumented")))),(0,a.kt)("h2",u({},{id:"properties"}),"Properties"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"_children"}),(0,a.kt)("inlineCode",{parentName:"h3"},"_children")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"_children?: "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map-custom/SortedMapBuilder/class"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMapBuilder")),(0,a.kt)("inlineCode",{parentName:"p"},"<K, V>[] "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"_entries"}),(0,a.kt)("inlineCode",{parentName:"h3"},"_entries")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-1"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"_entries?: (readonly [K, V])[] "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"addentries"}),(0,a.kt)("inlineCode",{parentName:"h3"},"addEntries")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-2"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"addEntries: (source: "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,a.kt)("inlineCode",{parentName:"p"},"<readonly [K, V]>) => boolean;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"addentry"}),(0,a.kt)("inlineCode",{parentName:"h3"},"addEntry")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-3"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"addEntry: (entry: readonly [K, V]) => boolean;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"build"}),(0,a.kt)("inlineCode",{parentName:"h3"},"build")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-4"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"build: () => "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map/SortedMap/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMap")),(0,a.kt)("inlineCode",{parentName:"p"},"<K, V>;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"buildmapvalues"}),(0,a.kt)("inlineCode",{parentName:"h3"},"buildMapValues")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-5"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"buildMapValues: <V2>(f: (value: V, key: K) => V2) => "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map/SortedMap/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMap")),(0,a.kt)("inlineCode",{parentName:"p"},"<K, V2>;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"children"}),(0,a.kt)("inlineCode",{parentName:"h3"},"children")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-6"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"get children(): "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map-custom/SortedMapBuilder/class"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMapBuilder")),(0,a.kt)("inlineCode",{parentName:"p"},"<K, V>[];"),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("inlineCode",{parentName:"p"},"set children(value: "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map-custom/SortedMapBuilder/class"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMapBuilder")),(0,a.kt)("inlineCode",{parentName:"p"},"<K, V>[]);")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"context"}),(0,a.kt)("inlineCode",{parentName:"h3"},"context")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-7"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly context: "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map-custom/SortedMapContext/class"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMapContext")),(0,a.kt)("inlineCode",{parentName:"p"},"<K>;"))),(0,a.kt)("h4",u({},{id:"overrides"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#context"}),"Builder.context"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"get"}),(0,a.kt)("inlineCode",{parentName:"h3"},"get")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-8"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"get: <UK, O>(key: RelatedTo<K, UK>, otherwise?: OptLazy<O> "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"},"undefined) => V"),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"haskey"}),(0,a.kt)("inlineCode",{parentName:"h3"},"hasKey")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-9"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"hasKey: <UK>(key: RelatedTo<K, UK>) => boolean;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"isempty"}),(0,a.kt)("inlineCode",{parentName:"h3"},"isEmpty")),(0,a.kt)("p",null,"Returns true if there are no entries in the builder.")),(0,a.kt)("h4",u({},{id:"definition-10"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly isEmpty: boolean;"))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"HashMap.of([[1, 'a'], [2, 'b']]).toBuilder().isEmpty\n// => false\n"))),(0,a.kt)("h4",u({},{id:"overrides-1"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#isEmpty"}),"Builder.isEmpty"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"modifyat"}),(0,a.kt)("inlineCode",{parentName:"h3"},"modifyAt")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-11"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"modifyAt: (key: K, options: {"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"ifNew?: OptLazyOr<V, Token>;"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"ifExists?: V "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"},"((currentValue: V, remove: Token) => V"),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," Token);"),(0,a.kt)("br",null),"\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"}) => boolean;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"removekey"}),(0,a.kt)("inlineCode",{parentName:"h3"},"removeKey")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-12"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"removeKey: <UK, O>(key: RelatedTo<K, UK>, otherwise?: OptLazy<O> "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"},"undefined) => V"),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"removekeys"}),(0,a.kt)("inlineCode",{parentName:"h3"},"removeKeys")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-13"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"removeKeys: <UK>(keys: "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,a.kt)("inlineCode",{parentName:"p"},"<RelatedTo<K, UK>>) => boolean;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"set"}),(0,a.kt)("inlineCode",{parentName:"h3"},"set")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-14"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"set: (key: K, value: V) => boolean;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"size"}),(0,a.kt)("inlineCode",{parentName:"h3"},"size")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-15"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"size: number;"))),(0,a.kt)("h4",u({},{id:"overrides-2"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#size"}),"Builder.size"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"source"}),(0,a.kt)("inlineCode",{parentName:"h3"},"source")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-16"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"source?: "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map/SortedMap/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMap")),(0,a.kt)("inlineCode",{parentName:"p"},"<K, V> "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"updateat"}),(0,a.kt)("inlineCode",{parentName:"h3"},"updateAt")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-17"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"updateAt: <O>(key: K, update: Update<V>, otherwise?: OptLazy<O> "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"},"undefined) => V"),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;")))),(0,a.kt)("h2",u({},{id:"methods"}),"Methods"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"addentries-1"}),(0,a.kt)("inlineCode",{parentName:"h3"},"addEntries")),(0,a.kt)("p",null,"Adds given ",(0,a.kt)("inlineCode",{parentName:"p"},"entries")," to the builder.")),(0,a.kt)("h4",u({},{id:"definition-18"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"addEntries(entries: "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,a.kt)("inlineCode",{parentName:"p"},"<readonly [K, V]>): boolean;"))),(0,a.kt)("h4",u({},{id:"parameters"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"entries")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("a",u({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,a.kt)("inlineCode",{parentName:"td"},"<readonly [K, V]>")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.addEntries([1, 'a'], [3, 'c']])   // => true\nm.addEntries([])                    // => false\n"))),(0,a.kt)("h4",u({},{id:"overrides-3"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#addEntries"}),"Builder.addEntries"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"addentry-1"}),(0,a.kt)("inlineCode",{parentName:"h3"},"addEntry")),(0,a.kt)("p",null,"Adds given ",(0,a.kt)("inlineCode",{parentName:"p"},"entry")," to the builder.")),(0,a.kt)("h4",u({},{id:"definition-19"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"addEntry(entry: readonly [K, V]): boolean;"))),(0,a.kt)("h4",u({},{id:"parameters-1"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"entry")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"readonly [K, V]")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.addEntry([3, 'c'])   // => true\nm.addEntry([1, 'a'])   // => false\n"))),(0,a.kt)("h4",u({},{id:"overrides-4"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#addEntry"}),"Builder.addEntry"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"addentryinternal"}),(0,a.kt)("inlineCode",{parentName:"h3"},"addEntryInternal")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-20"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"addEntryInternal(entry: readonly [K, V]): boolean;"))),(0,a.kt)("h4",u({},{id:"parameters-2"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"entry")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"readonly [K, V]")),(0,a.kt)("td",u({parentName:"tr"},{align:null})))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"build-1"}),(0,a.kt)("inlineCode",{parentName:"h3"},"build")),(0,a.kt)("p",null,"Returns an immutable collection instance containing the entries in this builder.")),(0,a.kt)("h4",u({},{id:"definition-21"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"build(): "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/WithKeyValue/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,a.kt)("inlineCode",{parentName:"p"},"<Tp, K, V>['normal'];"))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nconst m2: HashMap<number, string> = m.build()\n"))),(0,a.kt)("h4",u({},{id:"overrides-5"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#build"}),"Builder.build"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"buildmapvalues-1"}),(0,a.kt)("inlineCode",{parentName:"h3"},"buildMapValues")),(0,a.kt)("p",null,"Returns an immutable instance of the entries in this builder, with given ",(0,a.kt)("inlineCode",{parentName:"p"},"mapValues")," function applied to all the values in the entries.")),(0,a.kt)("h4",u({},{id:"definition-22"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"buildMapValues<V2>(mapFun: (value: V, key: K) => V2): (Tp & "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/KeyValue/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"KeyValue")),(0,a.kt)("inlineCode",{parentName:"p"},"<K, V2>)['normal'];"))),(0,a.kt)("h4",u({},{id:"type-parameters-1"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),"V2"),(0,a.kt)("td",u({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",u({},{id:"parameters-3"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"mapFun")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(value: V, key: K) => V2")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"a function that takes an entry value and its key, and returns a new value")))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nconst m2: HashMap<number, number> = m.buildMapValues(value => value.length)\n"))),(0,a.kt)("h4",u({},{id:"overrides-6"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#buildMapValues"}),"Builder.buildMapValues"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"createnew"}),(0,a.kt)("inlineCode",{parentName:"h3"},"createNew")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-23"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"createNew(source?: undefined "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map/SortedMap/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMap")),(0,a.kt)("inlineCode",{parentName:"p"},"<K, V>, _entries?: undefined "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"},"(readonly [K, V])[], _children?: undefined"),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map-custom/SortedMapBuilder/class"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMapBuilder")),(0,a.kt)("inlineCode",{parentName:"p"},"<K, V>[], size?: undefined "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"},"number):"),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map-custom/SortedMapBuilder/class"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMapBuilder")),(0,a.kt)("inlineCode",{parentName:"p"},"<K, V>;"))),(0,a.kt)("h4",u({},{id:"parameters-4"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"source")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"undefined "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"td"}," "),(0,a.kt)("a",u({parentName:"td"},{href:"/api/rimbu/sorted/map/SortedMap/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMap")),(0,a.kt)("inlineCode",{parentName:"td"},"<K, V>")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"_entries")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"undefined "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"td"}," (readonly [K, V])[]")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"_children")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"undefined "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"td"}," "),(0,a.kt)("a",u({parentName:"td"},{href:"/api/rimbu/sorted/map-custom/SortedMapBuilder/class"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedMapBuilder")),(0,a.kt)("inlineCode",{parentName:"td"},"<K, V>[]")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"size")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"undefined "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"td"}," number")),(0,a.kt)("td",u({parentName:"tr"},{align:null})))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"foreach"}),(0,a.kt)("inlineCode",{parentName:"h3"},"forEach")),(0,a.kt)("p",null,"Performs given function ",(0,a.kt)("inlineCode",{parentName:"p"},"f")," for each entry of the builder.")),(0,a.kt)("h4",u({},{id:"definition-24"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"forEach(f: (entry: readonly [K, V], index: number, halt: () => void) => void, options?: {"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"state?: TraverseState;"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"}): void;"))),(0,a.kt)("h4",u({},{id:"parameters-5"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"f")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(entry: readonly [K, V], index: number, halt: () => void) => void")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"the function to perform for each element, receiving:",(0,a.kt)("br",null)," - ",(0,a.kt)("inlineCode",{parentName:"td"},"entry"),": the next key-value entry",(0,a.kt)("br",null)," - ",(0,a.kt)("inlineCode",{parentName:"td"},"index"),": the index of the element",(0,a.kt)("br",null)," - ",(0,a.kt)("inlineCode",{parentName:"td"},"halt"),": a function that, if called, ensures that no new elements are passed")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"options")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"td"},"state?: TraverseState;"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"td"},"}")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))))),(0,a.kt)("admonition",u({},{title:"throws",type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"RibuError.ModifiedBuilderWhileLoopingOverItError if the builder is modified while looping over it")),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"HashMap.of([1, 'a'], [2, 'b'], [3, 'c']).toBuilder().forEach((entry, i, halt) => {\nconsole.log([entry[1], entry[0]]);\nif (i >= 1) halt();\n})\n// => logs ['a', 1]  ['b', 2]\n"))),(0,a.kt)("admonition",u({},{title:"note",type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"O(N)")),(0,a.kt)("h4",u({},{id:"overrides-7"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#forEach"}),"Builder.forEach"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"get-1"}),(0,a.kt)("inlineCode",{parentName:"h3"},"get")),(0,a.kt)("p",null,"Returns the value associated with the given ",(0,a.kt)("inlineCode",{parentName:"p"},"key"),", or given ",(0,a.kt)("inlineCode",{parentName:"p"},"otherwise")," value if the key is not in the collection.")),(0,a.kt)("h4",u({},{id:"definitions"}),"Definitions"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"get<UK = K>(key: RelatedTo<K, UK>): V "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined;"))),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"get<UK, O>(key: RelatedTo<K, UK>, otherwise: OptLazy<O>): V "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;"))),(0,a.kt)("h4",u({},{id:"type-parameters-2"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Default"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),"UK"),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"K")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",u({},{id:"parameters-6"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"key")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"RelatedTo<K, UK>")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"the key to look for")))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.get(2)          // => 'b'\nm.get(3)          // => undefined\nm.get(2, 'none')  // => 'b'\nm.get(3, 'none')  // => 'none'\n"))),(0,a.kt)("h4",u({},{id:"overrides-8"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#get"}),"Builder.get"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"getatindex"}),(0,a.kt)("inlineCode",{parentName:"h3"},"getAtIndex")),(0,a.kt)("p",null,"Returns the entry with its key at the given index of the key sort order of the SortedMap builder, or a fallback value (default: undefined) if the index is out of bounds.")),(0,a.kt)("h4",u({},{id:"definitions-1"}),"Definitions"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"getAtIndex(index: number): readonly [K, V] "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined;"))),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"getAtIndex<O>(index: number, otherwise: OptLazy<O>): readonly [K, V] "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;"))),(0,a.kt)("h4",u({},{id:"parameters-7"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"index")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"the index in the key sort order")))),(0,a.kt)("admonition",u({},{title:"note",type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"negative index values will retrieve the values from the end of the sort order, e.g. -1 is the last value")),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const b = SortedMap.of(['b', 2], ['d', 4], ['a', 1], ['c', 3]).toBuilder();\nconsole.log(b.getAtIndex(1))\n// => ['b', 2]\nconsole.log(b.getAtIndex(-1))\n// => ['d', 4]\nconsole.log(b.getAtIndex(10))\n// => undefined\nconsole.log(b.getAtIndex(10, 'q'))\n// => 'q'\n"))),(0,a.kt)("h4",u({},{id:"overrides-9"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map/SortedMap/Builder/interface#getAtIndex"}),"Builder.getAtIndex"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"haskey-1"}),(0,a.kt)("inlineCode",{parentName:"h3"},"hasKey")),(0,a.kt)("p",null,"Returns true if the given ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," is present in the builder.")),(0,a.kt)("h4",u({},{id:"definition-25"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"hasKey<UK = K>(key: RelatedTo<K, UK>): boolean;"))),(0,a.kt)("h4",u({},{id:"type-parameters-3"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Default"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),"UK"),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"K")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",u({},{id:"parameters-8"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"key")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"RelatedTo<K, UK>")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"the key to look for")))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.hasKey(2)    // => true\nm.hasKey(3)    // => false\n"))),(0,a.kt)("h4",u({},{id:"overrides-10"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#hasKey"}),"Builder.hasKey"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"max"}),(0,a.kt)("inlineCode",{parentName:"h3"},"max")),(0,a.kt)("p",null,"Returns the entry with the maximum key of the SortedMap Builder, or a fallback value (default: undefined) if the builder is empty.")),(0,a.kt)("h4",u({},{id:"definitions-2"}),"Definitions"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"max(): readonly [K, V] "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined;"))),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"max<O>(otherwise: OptLazy<O>): readonly [K, V] "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;"))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const b = SortedMap.of(['b', 2], ['d', 4], ['a', 1], ['c', 3]).toBuilder();\nconsole.log(b.max())\n// => ['a', 1]\nconsole.log(b.max('q'))\n// => ['a', 1]\nconsole.log(SortedMap.builder().max())\n// => undefined\nconsole.log(SortedMap.builder().max('q'))\n// => 'q'\n"))),(0,a.kt)("h4",u({},{id:"overrides-11"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map/SortedMap/Builder/interface#max"}),"Builder.max"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"min"}),(0,a.kt)("inlineCode",{parentName:"h3"},"min")),(0,a.kt)("p",null,"Returns the entry with the minimum key of the SortedMap Builder, or a fallback value (default: undefined) if the builder is empty.")),(0,a.kt)("h4",u({},{id:"definitions-3"}),"Definitions"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"min(): readonly [K, V] "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined;"))),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"min<O>(otherwise: OptLazy<O>): readonly [K, V] "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;"))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const b = SortedMap.of(['b', 2], ['d', 4], ['a', 1], ['c', 3]).toBuilder();\nconsole.log(b.min())\n// => ['a', 1]\nconsole.log(b.min('q'))\n// => ['a', 1]\nconsole.log(SortedMap.builder().min())\n// => undefined\nconsole.log(SortedMap.builder().min('q'))\n// => 'q'\n"))),(0,a.kt)("h4",u({},{id:"overrides-12"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/sorted/map/SortedMap/Builder/interface#min"}),"Builder.min"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"modifyat-1"}),(0,a.kt)("inlineCode",{parentName:"h3"},"modifyAt")),(0,a.kt)("p",null,"Modifies or creates the builder entry with given ",(0,a.kt)("inlineCode",{parentName:"p"},"atKey")," as its key according to given ",(0,a.kt)("inlineCode",{parentName:"p"},"options"),".")),(0,a.kt)("h4",u({},{id:"definition-26"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"modifyAt(key: K, options: {"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"ifNew?: OptLazyOr<V, Token>;"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"ifExists?: (<V2 extends V = V>(currentValue: V & V2, remove: Token) => V "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"},"Token)"),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," V;"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"}): boolean;"))),(0,a.kt)("h4",u({},{id:"parameters-9"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"key")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"K")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"options")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"td"},"ifNew?: OptLazyOr<V, Token>;"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"td"},"ifExists?: (<V2 extends V = V>(currentValue: V & V2, remove: Token) => V "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"td"},"Token)"),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"td"}," V;"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"td"},"}")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.modifyAt(1, { ifNew: 'd' })\n// => false\nm.modifyAt(3, { ifNew: 'c' })\n// => true\nm.modifyAt(3, { ifNew: (none) => 1 < 2 ? none : 'c' })\n// => false\nm.modifyAt(2, { ifExists: () => 'c' })\n// => true\nm.modifyAt(1, { ifExists: (v) => v + 'z' })\n// => true\nm.modifyAt(2, { ifExists: (v, remove) => v === 'a' ? v : remove })\n// => true\n"))),(0,a.kt)("h4",u({},{id:"overrides-13"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#modifyAt"}),"Builder.modifyAt"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"modifyatinternal"}),(0,a.kt)("inlineCode",{parentName:"h3"},"modifyAtInternal")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-27"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"modifyAtInternal(key: K, options: {"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"ifNew?: OptLazyOr<V, Token>;"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"ifExists?: ((currentValue: V, remove: Token) => V "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"},"Token)"),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," V;"),(0,a.kt)("br",null),"\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"}): boolean;"))),(0,a.kt)("h4",u({},{id:"parameters-10"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"key")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"K")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"options")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"td"},"ifNew?: OptLazyOr<V, Token>;"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"td"},"ifExists?: ((currentValue: V, remove: Token) => V "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"td"},"Token)"),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"td"}," V;"),(0,a.kt)("br",null),"\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"td"},"}")),(0,a.kt)("td",u({parentName:"tr"},{align:null})))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"preparemutate"}),(0,a.kt)("inlineCode",{parentName:"h3"},"prepareMutate")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-28"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"prepareMutate(): void;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"removeinternal"}),(0,a.kt)("inlineCode",{parentName:"h3"},"removeInternal")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",u({},{id:"definition-29"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"removeInternal<O>(key: K, otherwise?: OptLazy<O>): V "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;"))),(0,a.kt)("h4",u({},{id:"type-parameters-4"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),"O"),(0,a.kt)("td",u({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",u({},{id:"parameters-11"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"key")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"K")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"OptLazy<O>")),(0,a.kt)("td",u({parentName:"tr"},{align:null})))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"removekey-1"}),(0,a.kt)("inlineCode",{parentName:"h3"},"removeKey")),(0,a.kt)("p",null,"Removes the entry with given ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," from the builder.")),(0,a.kt)("h4",u({},{id:"definitions-4"}),"Definitions"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"removeKey<UK = K>(key: RelatedTo<K, UK>): V "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined;"))),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"removeKey<UK, O>(key: RelatedTo<K, UK>, otherwise: OptLazy<O>): V "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;"))),(0,a.kt)("h4",u({},{id:"type-parameters-5"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Default"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),"UK"),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"K")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",u({},{id:"parameters-12"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"key")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"RelatedTo<K, UK>")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"the key of the entry to remove")))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeKey(2)        // => 'b'\nm.removeKey(3)        // => undefined\nm.removeKey(3, 'c')   // => 'c'\n"))),(0,a.kt)("h4",u({},{id:"overrides-14"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#removeKey"}),"Builder.removeKey"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"removekeys-1"}),(0,a.kt)("inlineCode",{parentName:"h3"},"removeKeys")),(0,a.kt)("p",null,"Removes the entries in the given ",(0,a.kt)("inlineCode",{parentName:"p"},"keys")," ",(0,a.kt)("inlineCode",{parentName:"p"},"StreamSource")," from the builder.")),(0,a.kt)("h4",u({},{id:"definition-30"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"removeKeys<UK = K>(keys: "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,a.kt)("inlineCode",{parentName:"p"},"<RelatedTo<K, UK>>): boolean;"))),(0,a.kt)("h4",u({},{id:"type-parameters-6"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Default"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),"UK"),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"K")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",u({},{id:"parameters-13"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"keys")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("a",u({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,a.kt)("inlineCode",{parentName:"td"},"<RelatedTo<K, UK>>")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeKeys([3, 4, 5])  // => false\nm.removeKeys([1, 10])    // => true\n"))),(0,a.kt)("h4",u({},{id:"overrides-15"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#removeKeys"}),"Builder.removeKeys"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"set-1"}),(0,a.kt)("inlineCode",{parentName:"h3"},"set")),(0,a.kt)("p",null,"Associates given ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," with given ",(0,a.kt)("inlineCode",{parentName:"p"},"value")," in the builder.")),(0,a.kt)("h4",u({},{id:"definition-31"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"set(key: K, value: V): boolean;"))),(0,a.kt)("h4",u({},{id:"parameters-14"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"key")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"K")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"the entry key")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"value")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"V")),(0,a.kt)("td",u({parentName:"tr"},{align:null}))))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.set(3, 'c')   // => true\nm.set(1, 'a')   // => false\n"))),(0,a.kt)("h4",u({},{id:"overrides-16"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#set"}),"Builder.set"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"updateat-1"}),(0,a.kt)("inlineCode",{parentName:"h3"},"updateAt")),(0,a.kt)("p",null,"Updates the value in the builder associated with given ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," according to given ",(0,a.kt)("inlineCode",{parentName:"p"},"update")," value or function.")),(0,a.kt)("h4",u({},{id:"definitions-5"}),"Definitions"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"updateAt(key: K, update: "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Update/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"RMapBase.Update")),(0,a.kt)("inlineCode",{parentName:"p"},"<V>): V "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined;"))),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"updateAt<O>(key: K, update: "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Update/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"RMapBase.Update")),(0,a.kt)("inlineCode",{parentName:"p"},"<V>, otherwise: OptLazy<O>): V "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;"))),(0,a.kt)("h4",u({},{id:"parameters-15"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"key")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"K")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"the key of the entry to update")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"update")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Update/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"RMapBase.Update")),(0,a.kt)("inlineCode",{parentName:"td"},"<V>")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"a new value or function taking the previous value and returning a new value")))),(0,a.kt)("admonition",u({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.updateAt(1, 'a')           // => 'a'\nm.updateAt(1, 'b')           // => 'b'\nm.updateAt(2, v => v + 'z')  // => 'b'\n"))),(0,a.kt)("h4",u({},{id:"overrides-17"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#updateAt"}),"Builder.updateAt"))))}g.isMDXComponent=!0}}]);