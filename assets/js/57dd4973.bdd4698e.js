"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[30056],{15680:(e,n,i)=>{i.d(n,{xA:()=>p,yg:()=>c});var t=i(96540);function a(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function l(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function r(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?l(Object(i),!0).forEach((function(n){a(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function o(e,n){if(null==e)return{};var i,t,a=function(e,n){if(null==e)return{};var i,t,a={},l=Object.keys(e);for(t=0;t<l.length;t++)i=l[t],n.indexOf(i)>=0||(a[i]=e[i]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)i=l[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var d=t.createContext({}),y=function(e){var n=t.useContext(d),i=n;return e&&(i="function"==typeof e?e(n):r(r({},n),e)),i},p=function(e){var n=y(e.components);return t.createElement(d.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var i=e.components,a=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=y(i),g=a,c=u["".concat(d,".").concat(g)]||u[g]||m[g]||l;return i?t.createElement(c,r(r({ref:n},p),{},{components:i})):t.createElement(c,r({ref:n},p))}));function c(e,n){var i=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=i.length,r=new Array(l);r[0]=g;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o[u]="string"==typeof e?e:a,r[1]=o;for(var y=2;y<l;y++)r[y]=i[y];return t.createElement.apply(null,r)}return t.createElement.apply(null,i)}g.displayName="MDXCreateElement"},90814:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>v,contentTitle:()=>s,default:()=>C,frontMatter:()=>c,metadata:()=>f,toc:()=>h});var t=i(15680),a=Object.defineProperty,l=Object.defineProperties,r=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable,p=(e,n,i)=>n in e?a(e,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[n]=i,u=(e,n)=>{for(var i in n||(n={}))d.call(n,i)&&p(e,i,n[i]);if(o)for(var i of o(n))y.call(n,i)&&p(e,i,n[i]);return e},m=(e,n)=>l(e,r(n)),g=(e,n)=>{var i={};for(var t in e)d.call(e,t)&&n.indexOf(t)<0&&(i[t]=e[t]);if(null!=e&&o)for(var t of o(e))n.indexOf(t)<0&&y.call(e,t)&&(i[t]=e[t]);return i};const c={title:"ProximityMapBuilder<K,V>",slug:"/rimbu/proximity/map-custom/ProximityMapBuilder/class"},s="class ProximityMapBuilder<K,V>",f={unversionedId:"rimbu_proximity/map-custom/ProximityMapBuilder.class",id:"rimbu_proximity/map-custom/ProximityMapBuilder.class",title:"ProximityMapBuilder<K,V>",description:"undocumented",source:"@site/api/rimbu_proximity/map-custom/ProximityMapBuilder.class.mdx",sourceDirName:"rimbu_proximity/map-custom",slug:"/rimbu/proximity/map-custom/ProximityMapBuilder/class",permalink:"/api/rimbu/proximity/map-custom/ProximityMapBuilder/class",draft:!1,tags:[],version:"current",frontMatter:{title:"ProximityMapBuilder<K,V>",slug:"/rimbu/proximity/map-custom/ProximityMapBuilder/class"},sidebar:"defaultSidebar",previous:{title:"@rimbu/proximity/map-custom",permalink:"/api/rimbu/proximity/map-custom"},next:{title:"ProximityMapContext<UK>",permalink:"/api/rimbu/proximity/map-custom/ProximityMapContext/class"}},v={},h=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>addEntries</code>",id:"addentries",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>addEntry</code>",id:"addentry",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>build</code>",id:"build",level:3},{value:"Definition",id:"definition-2",level:4},{value:"<code>buildMapValues</code>",id:"buildmapvalues",level:3},{value:"Definition",id:"definition-3",level:4},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition-4",level:4},{value:"<code>forEach</code>",id:"foreach",level:3},{value:"Definition",id:"definition-5",level:4},{value:"<code>get</code>",id:"get",level:3},{value:"Definition",id:"definition-6",level:4},{value:"<code>hasKey</code>",id:"haskey",level:3},{value:"Definition",id:"definition-7",level:4},{value:"<code>isEmpty</code>",id:"isempty",level:3},{value:"Definition",id:"definition-8",level:4},{value:"<code>modifyAt</code>",id:"modifyat",level:3},{value:"Definition",id:"definition-9",level:4},{value:"<code>removeKey</code>",id:"removekey",level:3},{value:"Definition",id:"definition-10",level:4},{value:"<code>removeKeys</code>",id:"removekeys",level:3},{value:"Definition",id:"definition-11",level:4},{value:"<code>set</code>",id:"set",level:3},{value:"Definition",id:"definition-12",level:4},{value:"<code>size</code>",id:"size",level:3},{value:"Definition",id:"definition-13",level:4},{value:"<code>updateAt</code>",id:"updateat",level:3},{value:"Definition",id:"definition-14",level:4}],b={toc:h},N="wrapper";function C(e){var n=e,{components:i}=n,a=g(n,["components"]);return(0,t.yg)(N,m(u(u({},b),a),{components:i,mdxType:"MDXLayout"}),(0,t.yg)("h1",u({},{id:"class-proximitymapbuilderkv"}),(0,t.yg)("inlineCode",{parentName:"h1"},"class ProximityMapBuilder<K,V>")),(0,t.yg)("p",null,"undocumented"),(0,t.yg)("h2",u({},{id:"type-parameters"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",u({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",u({parentName:"tr"},{align:null}),"K"),(0,t.yg)("td",u({parentName:"tr"},{align:null}),"undocumented")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",u({parentName:"tr"},{align:null}),"V"),(0,t.yg)("td",u({parentName:"tr"},{align:null}),"undocumented")))),(0,t.yg)("h2",u({},{id:"properties"}),"Properties"),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"addentries"}),(0,t.yg)("inlineCode",{parentName:"h3"},"addEntries")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"addEntries: (entries: "),(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<readonly [K, V]>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"addentry"}),(0,t.yg)("inlineCode",{parentName:"h3"},"addEntry")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-1"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"addEntry: (entry: readonly [K, V]) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"build"}),(0,t.yg)("inlineCode",{parentName:"h3"},"build")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-2"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"build: () => ProximityMap<K, V>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"buildmapvalues"}),(0,t.yg)("inlineCode",{parentName:"h3"},"buildMapValues")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-3"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"buildMapValues: <V2>(mapFun: (value: V, key: K) => V2) => ProximityMap<K, V2>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"context"}),(0,t.yg)("inlineCode",{parentName:"h3"},"context")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-4"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly context: ProximityMap.Context<K>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"foreach"}),(0,t.yg)("inlineCode",{parentName:"h3"},"forEach")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-5"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"forEach: (f: (entry: readonly [K, V], index: number, halt: () => void) => void, options?: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"state?: "),(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"TraverseState")),(0,t.yg)("inlineCode",{parentName:"p"},";"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}) => void;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"get"}),(0,t.yg)("inlineCode",{parentName:"h3"},"get")),(0,t.yg)("p",null,"Applying ",(0,t.yg)("inlineCode",{parentName:"p"},"get()")," to the Builder does NOT apply the proximity algorithm - which would be pointless at this construction stage; the internal, hash-based builder is queried instead")),(0,t.yg)("h4",u({},{id:"definition-6"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get: <UK, O>(key: "),(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>, otherwise?: "),(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,t.yg)("inlineCode",{parentName:"p"},"<O>) => V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"haskey"}),(0,t.yg)("inlineCode",{parentName:"h3"},"hasKey")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-7"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"hasKey: <UK = K>(key: "),(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"isempty"}),(0,t.yg)("inlineCode",{parentName:"h3"},"isEmpty")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-8"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get isEmpty(): boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"modifyat"}),(0,t.yg)("inlineCode",{parentName:"h3"},"modifyAt")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-9"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"modifyAt: (key: K, options: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"ifNew?: "),(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/common/OptLazyOr/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazyOr")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, typeof Token>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"ifExists?: (<V2 extends V = V>(currentValue: V & V2, remove: typeof Token) => V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"},"typeof Token)"),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," V;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"removekey"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeKey")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-10"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeKey: <UK, O>(key: "),(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>, otherwise?: "),(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,t.yg)("inlineCode",{parentName:"p"},"<O>) => V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"removekeys"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeKeys")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-11"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeKeys: <UK = K>(keys: "),(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<"),(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"set"}),(0,t.yg)("inlineCode",{parentName:"h3"},"set")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-12"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"set: (key: K, value: V) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"size"}),(0,t.yg)("inlineCode",{parentName:"h3"},"size")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-13"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get size(): number;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",u({},{id:"updateat"}),(0,t.yg)("inlineCode",{parentName:"h3"},"updateAt")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",u({},{id:"definition-14"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"updateAt: <O>(key: K, update: "),(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Update/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RMapBase.Update")),(0,t.yg)("inlineCode",{parentName:"p"},"<V>, otherwise?: "),(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,t.yg)("inlineCode",{parentName:"p"},"<O>) => V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;")))))}C.isMDXComponent=!0}}]);