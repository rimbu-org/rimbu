"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[84543],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),o=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=o(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),s=o(a),u=r,c=s["".concat(p,".").concat(u)]||s[u]||k[u]||i;return a?n.createElement(c,l(l({ref:t},d),{},{components:a})):n.createElement(c,l({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var m={};for(var p in t)hasOwnProperty.call(t,p)&&(m[p]=t[p]);m.originalType=e,m[s]="string"==typeof e?e:r,l[1]=m;for(var o=2;o<i;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9168:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>N,default:()=>g,frontMatter:()=>c,metadata:()=>y,toc:()=>b});var n=a(3905),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,d=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,s=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&d(e,a,t[a]);if(m)for(var a of m(t))o.call(t,a)&&d(e,a,t[a]);return e},k=(e,t)=>i(e,l(t)),u=(e,t)=>{var a={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&m)for(var n of m(e))t.indexOf(n)<0&&o.call(e,n)&&(a[n]=e[n]);return a};const c={title:"FromSource<T>",slug:"/rimbu/stream/async-custom/FromSource/class"},N="class FromSource<T>",y={unversionedId:"rimbu_stream/async-custom/FromSource.class",id:"rimbu_stream/async-custom/FromSource.class",title:"FromSource<T>",description:"undocumented",source:"@site/api/rimbu_stream/async-custom/FromSource.class.mdx",sourceDirName:"rimbu_stream/async-custom",slug:"/rimbu/stream/async-custom/FromSource/class",permalink:"/api/rimbu/stream/async-custom/FromSource/class",draft:!1,tags:[],version:"current",frontMatter:{title:"FromSource<T>",slug:"/rimbu/stream/async-custom/FromSource/class"},sidebar:"defaultSidebar",previous:{title:"FromResourceIterator<T,R>",permalink:"/api/rimbu/stream/async-custom/FromResourceIterator/class"},next:{title:"emptyAsyncFastIterator",permalink:"/api/rimbu/stream/emptyAsyncFastIterator/var"}},h={},b=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>close</code>",id:"close",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>source</code>",id:"source",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>[Symbol.asyncIterator]</code>",id:"symbolasynciterator",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>append</code>",id:"append",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>asNormal</code>",id:"asnormal",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>assumeNonEmpty</code>",id:"assumenonempty",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>asyncStream</code>",id:"asyncstream",level:3},{value:"Definition",id:"definition-6",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"<code>collect</code>",id:"collect",level:3},{value:"Definition",id:"definition-7",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"<code>concat</code>",id:"concat",level:3},{value:"Definition",id:"definition-8",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"<code>contains</code>",id:"contains",level:3},{value:"Definition",id:"definition-9",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"<code>containsSlice</code>",id:"containsslice",level:3},{value:"Definition",id:"definition-10",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"<code>count</code>",id:"count",level:3},{value:"Definition",id:"definition-11",level:4},{value:"Overrides",id:"overrides-9",level:4},{value:"<code>countElement</code>",id:"countelement",level:3},{value:"Definition",id:"definition-12",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Overrides",id:"overrides-10",level:4},{value:"<code>distinctPrevious</code>",id:"distinctprevious",level:3},{value:"Definition",id:"definition-13",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Overrides",id:"overrides-11",level:4},{value:"<code>drop</code>",id:"drop",level:3},{value:"Definition",id:"definition-14",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Overrides",id:"overrides-12",level:4},{value:"<code>dropWhile</code>",id:"dropwhile",level:3},{value:"Definition",id:"definition-15",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Overrides",id:"overrides-13",level:4},{value:"<code>elementAt</code>",id:"elementat",level:3},{value:"Definition",id:"definition-16",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Overrides",id:"overrides-14",level:4},{value:"<code>equals</code>",id:"equals",level:3},{value:"Definition",id:"definition-17",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Overrides",id:"overrides-15",level:4},{value:"<code>every</code>",id:"every",level:3},{value:"Definition",id:"definition-18",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Overrides",id:"overrides-16",level:4},{value:"<code>filter</code>",id:"filter",level:3},{value:"Definition",id:"definition-19",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Overrides",id:"overrides-17",level:4},{value:"<code>filterPure</code>",id:"filterpure",level:3},{value:"Definition",id:"definition-20",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Overrides",id:"overrides-18",level:4},{value:"<code>find</code>",id:"find",level:3},{value:"Definition",id:"definition-21",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Overrides",id:"overrides-19",level:4},{value:"<code>first</code>",id:"first",level:3},{value:"Definition",id:"definition-22",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-15",level:4},{value:"Overrides",id:"overrides-20",level:4},{value:"<code>flatMap</code>",id:"flatmap",level:3},{value:"Definition",id:"definition-23",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-16",level:4},{value:"Overrides",id:"overrides-21",level:4},{value:"<code>flatZip</code>",id:"flatzip",level:3},{value:"Definition",id:"definition-24",level:4},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Parameters",id:"parameters-17",level:4},{value:"Overrides",id:"overrides-22",level:4},{value:"<code>fold</code>",id:"fold",level:3},{value:"Definition",id:"definition-25",level:4},{value:"Type parameters",id:"type-parameters-8",level:4},{value:"Parameters",id:"parameters-18",level:4},{value:"Overrides",id:"overrides-23",level:4},{value:"<code>foldStream</code>",id:"foldstream",level:3},{value:"Definition",id:"definition-26",level:4},{value:"Type parameters",id:"type-parameters-9",level:4},{value:"Parameters",id:"parameters-19",level:4},{value:"Overrides",id:"overrides-24",level:4},{value:"<code>forEach</code>",id:"foreach",level:3},{value:"Definition",id:"definition-27",level:4},{value:"Parameters",id:"parameters-20",level:4},{value:"Overrides",id:"overrides-25",level:4},{value:"<code>forEachPure</code>",id:"foreachpure",level:3},{value:"Definition",id:"definition-28",level:4},{value:"Type parameters",id:"type-parameters-10",level:4},{value:"Parameters",id:"parameters-21",level:4},{value:"Overrides",id:"overrides-26",level:4},{value:"<code>groupBy</code>",id:"groupby",level:3},{value:"Definition",id:"definition-29",level:4},{value:"Type parameters",id:"type-parameters-11",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Overrides",id:"overrides-27",level:4},{value:"<code>indexed</code>",id:"indexed",level:3},{value:"Definition",id:"definition-30",level:4},{value:"Parameters",id:"parameters-23",level:4},{value:"Overrides",id:"overrides-28",level:4},{value:"<code>indexOf</code>",id:"indexof",level:3},{value:"Definition",id:"definition-31",level:4},{value:"Parameters",id:"parameters-24",level:4},{value:"Overrides",id:"overrides-29",level:4},{value:"<code>indexWhere</code>",id:"indexwhere",level:3},{value:"Definition",id:"definition-32",level:4},{value:"Parameters",id:"parameters-25",level:4},{value:"Overrides",id:"overrides-30",level:4},{value:"<code>indicesOf</code>",id:"indicesof",level:3},{value:"Definition",id:"definition-33",level:4},{value:"Parameters",id:"parameters-26",level:4},{value:"Overrides",id:"overrides-31",level:4},{value:"<code>indicesWhere</code>",id:"indiceswhere",level:3},{value:"Definition",id:"definition-34",level:4},{value:"Parameters",id:"parameters-27",level:4},{value:"Overrides",id:"overrides-32",level:4},{value:"<code>intersperse</code>",id:"intersperse",level:3},{value:"Definition",id:"definition-35",level:4},{value:"Parameters",id:"parameters-28",level:4},{value:"Overrides",id:"overrides-33",level:4},{value:"<code>join</code>",id:"join",level:3},{value:"Definition",id:"definition-36",level:4},{value:"Parameters",id:"parameters-29",level:4},{value:"Overrides",id:"overrides-34",level:4},{value:"<code>last</code>",id:"last",level:3},{value:"Definition",id:"definition-37",level:4},{value:"Type parameters",id:"type-parameters-12",level:4},{value:"Parameters",id:"parameters-30",level:4},{value:"Overrides",id:"overrides-35",level:4},{value:"<code>map</code>",id:"map",level:3},{value:"Definition",id:"definition-38",level:4},{value:"Type parameters",id:"type-parameters-13",level:4},{value:"Parameters",id:"parameters-31",level:4},{value:"Overrides",id:"overrides-36",level:4},{value:"<code>mapPure</code>",id:"mappure",level:3},{value:"Definition",id:"definition-39",level:4},{value:"Type parameters",id:"type-parameters-14",level:4},{value:"Parameters",id:"parameters-32",level:4},{value:"Overrides",id:"overrides-37",level:4},{value:"<code>max</code>",id:"max",level:3},{value:"Definition",id:"definition-40",level:4},{value:"Type parameters",id:"type-parameters-15",level:4},{value:"Parameters",id:"parameters-33",level:4},{value:"Overrides",id:"overrides-38",level:4},{value:"<code>maxBy</code>",id:"maxby",level:3},{value:"Definition",id:"definition-41",level:4},{value:"Type parameters",id:"type-parameters-16",level:4},{value:"Parameters",id:"parameters-34",level:4},{value:"Overrides",id:"overrides-39",level:4},{value:"<code>min</code>",id:"min",level:3},{value:"Definition",id:"definition-42",level:4},{value:"Type parameters",id:"type-parameters-17",level:4},{value:"Parameters",id:"parameters-35",level:4},{value:"Overrides",id:"overrides-40",level:4},{value:"<code>minBy</code>",id:"minby",level:3},{value:"Definition",id:"definition-43",level:4},{value:"Type parameters",id:"type-parameters-18",level:4},{value:"Parameters",id:"parameters-36",level:4},{value:"Overrides",id:"overrides-41",level:4},{value:"<code>mkGroup</code>",id:"mkgroup",level:3},{value:"Definition",id:"definition-44",level:4},{value:"Parameters",id:"parameters-37",level:4},{value:"Overrides",id:"overrides-42",level:4},{value:"<code>partition</code>",id:"partition",level:3},{value:"Definition",id:"definition-45",level:4},{value:"Parameters",id:"parameters-38",level:4},{value:"Overrides",id:"overrides-43",level:4},{value:"<code>prepend</code>",id:"prepend",level:3},{value:"Definition",id:"definition-46",level:4},{value:"Parameters",id:"parameters-39",level:4},{value:"Overrides",id:"overrides-44",level:4},{value:"<code>reduce</code>",id:"reduce",level:3},{value:"Definition",id:"definition-47",level:4},{value:"Type parameters",id:"type-parameters-19",level:4},{value:"Parameters",id:"parameters-40",level:4},{value:"Overrides",id:"overrides-45",level:4},{value:"<code>reduceStream</code>",id:"reducestream",level:3},{value:"Definition",id:"definition-48",level:4},{value:"Type parameters",id:"type-parameters-20",level:4},{value:"Parameters",id:"parameters-41",level:4},{value:"Overrides",id:"overrides-46",level:4},{value:"<code>repeat</code>",id:"repeat",level:3},{value:"Definition",id:"definition-49",level:4},{value:"Parameters",id:"parameters-42",level:4},{value:"Overrides",id:"overrides-47",level:4},{value:"<code>single</code>",id:"single",level:3},{value:"Definition",id:"definition-50",level:4},{value:"Type parameters",id:"type-parameters-21",level:4},{value:"Parameters",id:"parameters-43",level:4},{value:"Overrides",id:"overrides-48",level:4},{value:"<code>some</code>",id:"some",level:3},{value:"Definition",id:"definition-51",level:4},{value:"Parameters",id:"parameters-44",level:4},{value:"Overrides",id:"overrides-49",level:4},{value:"<code>splitOn</code>",id:"spliton",level:3},{value:"Definition",id:"definition-52",level:4},{value:"Type parameters",id:"type-parameters-22",level:4},{value:"Parameters",id:"parameters-45",level:4},{value:"Overrides",id:"overrides-50",level:4},{value:"<code>splitOnSlice</code>",id:"splitonslice",level:3},{value:"Definition",id:"definition-53",level:4},{value:"Type parameters",id:"type-parameters-23",level:4},{value:"Parameters",id:"parameters-46",level:4},{value:"Overrides",id:"overrides-51",level:4},{value:"<code>splitWhere</code>",id:"splitwhere",level:3},{value:"Definition",id:"definition-54",level:4},{value:"Type parameters",id:"type-parameters-24",level:4},{value:"Parameters",id:"parameters-47",level:4},{value:"Overrides",id:"overrides-52",level:4},{value:"<code>take</code>",id:"take",level:3},{value:"Definition",id:"definition-55",level:4},{value:"Parameters",id:"parameters-48",level:4},{value:"Overrides",id:"overrides-53",level:4},{value:"<code>takeWhile</code>",id:"takewhile",level:3},{value:"Definition",id:"definition-56",level:4},{value:"Parameters",id:"parameters-49",level:4},{value:"Overrides",id:"overrides-54",level:4},{value:"<code>toArray</code>",id:"toarray",level:3},{value:"Definition",id:"definition-57",level:4},{value:"Overrides",id:"overrides-55",level:4},{value:"<code>toJSON</code>",id:"tojson",level:3},{value:"Definition",id:"definition-58",level:4},{value:"Overrides",id:"overrides-56",level:4},{value:"<code>toString</code>",id:"tostring",level:3},{value:"Definition",id:"definition-59",level:4},{value:"Overrides",id:"overrides-57",level:4},{value:"<code>transform</code>",id:"transform",level:3},{value:"Definition",id:"definition-60",level:4},{value:"Type parameters",id:"type-parameters-25",level:4},{value:"Parameters",id:"parameters-50",level:4},{value:"Overrides",id:"overrides-58",level:4},{value:"<code>window</code>",id:"window",level:3},{value:"Definition",id:"definition-61",level:4},{value:"Type parameters",id:"type-parameters-26",level:4},{value:"Parameters",id:"parameters-51",level:4},{value:"Overrides",id:"overrides-59",level:4},{value:"<code>withOnly</code>",id:"withonly",level:3},{value:"Definition",id:"definition-62",level:4},{value:"Type parameters",id:"type-parameters-27",level:4},{value:"Parameters",id:"parameters-52",level:4},{value:"Overrides",id:"overrides-60",level:4},{value:"<code>without</code>",id:"without",level:3},{value:"Definition",id:"definition-63",level:4},{value:"Type parameters",id:"type-parameters-28",level:4},{value:"Parameters",id:"parameters-53",level:4},{value:"Overrides",id:"overrides-61",level:4}],f={toc:b},v="wrapper";function g(e){var t=e,{components:a}=t,r=u(t,["components"]);return(0,n.kt)(v,k(s(s({},f),r),{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",s({},{id:"class-fromsourcet"}),(0,n.kt)("inlineCode",{parentName:"h1"},"class FromSource<T>")),(0,n.kt)("p",null,"undocumented"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Extends:")," ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamBase<T>"))),(0,n.kt)("h2",s({},{id:"type-parameters"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"T"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"undocumented")))),(0,n.kt)("h2",s({},{id:"properties"}),"Properties"),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"close"}),(0,n.kt)("inlineCode",{parentName:"h3"},"close")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",s({},{id:"definition"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly close?: (() => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<void>) "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"source"}),(0,n.kt)("inlineCode",{parentName:"h3"},"source")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",s({},{id:"definition-1"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly source: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;")))),(0,n.kt)("h2",s({},{id:"methods"}),"Methods"),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"symbolasynciterator"}),(0,n.kt)("inlineCode",{parentName:"h3"},"[Symbol.asyncIterator]")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",s({},{id:"definition-2"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"[Symbol.asyncIterator](): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncFastIterator/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncFastIterator")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",s({},{id:"overrides"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#%5BSymbol.asyncIterator%5D"}),"AsyncStreamBase.[Symbol.asyncIterator]"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"append"}),(0,n.kt)("inlineCode",{parentName:"h3"},"append")),(0,n.kt)("p",null,"Returns the current stream succeeded by the given ",(0,n.kt)("inlineCode",{parentName:"p"},"value"))),(0,n.kt)("h4",s({},{id:"definition-3"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"append(value: AsyncOptLazy<T>): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/NonEmpty/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",s({},{id:"parameters"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"AsyncOptLazy<T>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).append(4).toArray()\n// => [1, 2, 3, 4]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",s({},{id:"overrides-1"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#append"}),"AsyncStream.append"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#append"}),"AsyncStreamBase.append"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"asnormal"}),(0,n.kt)("inlineCode",{parentName:"h3"},"asNormal")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",s({},{id:"definition-4"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"asNormal(): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",s({},{id:"overrides-2"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#asNormal"}),"AsyncStreamBase.asNormal"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"assumenonempty"}),(0,n.kt)("inlineCode",{parentName:"h3"},"assumeNonEmpty")),(0,n.kt)("p",null,"Returns the stream as a non-empty instance.")),(0,n.kt)("h4",s({},{id:"definition-5"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"assumeNonEmpty(): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/NonEmpty/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("admonition",s({},{title:"throws",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"RimbuError.EmptyCollectionAssumedNonEmptyError if the stream is known to be empty.")),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"AsyncStream.from(Stream.range({ amount: 100 })).assumeNonEmpty()\n// => type: AsyncStream.NonEmpty<number>\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"the function does not actually check if the stream is empty, so treat with extra care  @note O(1)")),(0,n.kt)("h4",s({},{id:"overrides-3"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#assumeNonEmpty"}),"AsyncStream.assumeNonEmpty"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#assumeNonEmpty"}),"AsyncStreamBase.assumeNonEmpty"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"asyncstream"}),(0,n.kt)("inlineCode",{parentName:"h3"},"asyncStream")),(0,n.kt)("p",null,"Returns an async stream of elements of type T.")),(0,n.kt)("h4",s({},{id:"definition-6"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"asyncStream(): this;"))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"AsyncStream.of(1, 2, 3).asyncStream()\n// => returns itself\n"))),(0,n.kt)("h4",s({},{id:"overrides-4"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#asyncStream"}),"AsyncStream.asyncStream"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#asyncStream"}),"AsyncStreamBase.asyncStream"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"collect"}),(0,n.kt)("inlineCode",{parentName:"h3"},"collect")),(0,n.kt)("p",null,"Returns an AsyncStream containing the resulting elements from applying the given ",(0,n.kt)("inlineCode",{parentName:"p"},"collectFun")," to each element in this Stream.")),(0,n.kt)("h4",s({},{id:"definition-7"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"collect<R>(collectFun: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/AsyncCollectFun/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncCollectFun")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, R>): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-1"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-1"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"collectFun")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/AsyncCollectFun/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncCollectFun")),(0,n.kt)("inlineCode",{parentName:"td"},"<T, R>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).collect(async (v, i, skip, halt) => {\nif (i === 0) return skip;\nif (i === 1) halt();\nreturn String(v)\n}).toArray();\n// => ['1']\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",s({},{id:"overrides-5"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#collect"}),"AsyncStream.collect"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#collect"}),"AsyncStreamBase.collect"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"concat"}),(0,n.kt)("inlineCode",{parentName:"h3"},"concat")),(0,n.kt)("p",null,"Returns an AsyncStream containing the elements of this stream followed by all elements produced by the ",(0,n.kt)("inlineCode",{parentName:"p"},"others")," array of AsyncStreamSources.")),(0,n.kt)("h4",s({},{id:"definition-8"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"concat(...others: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.kt)("inlineCode",{parentName:"p"},"<"),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>>): any;"))),(0,n.kt)("h4",s({},{id:"parameters-2"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"others")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.kt)("inlineCode",{parentName:"td"},"<"),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).concat([4, 5], () => [6, 7]).toArray()\n// [1, 2, 3, 4, 5, 6, 7]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",s({},{id:"overrides-6"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#concat"}),"AsyncStream.concat"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#concat"}),"AsyncStreamBase.concat"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"contains"}),(0,n.kt)("inlineCode",{parentName:"h3"},"contains")),(0,n.kt)("p",null,"Returns true if the AsyncStream contains given ",(0,n.kt)("inlineCode",{parentName:"p"},"amount")," instances of given ",(0,n.kt)("inlineCode",{parentName:"p"},"value"),", using given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," function.")),(0,n.kt)("h4",s({},{id:"definition-9"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"contains(searchValue: T, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"amount?: number;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"eq?: Eq<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<boolean>;"))),(0,n.kt)("h4",s({},{id:"parameters-3"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"searchValue")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"amount?: number;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"eq?: Eq<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"const source = Stream.from('marmot')\nawait source.contains('m')    // => true\nawait source.contains('m', 2) // => true\nawait source.contains('m', 3) // => false\nawait source.contains('q')    // => false\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-7"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#contains"}),"AsyncStream.contains"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#contains"}),"AsyncStreamBase.contains"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"containsslice"}),(0,n.kt)("inlineCode",{parentName:"h3"},"containsSlice")),(0,n.kt)("p",null,"Returns true if this stream contains the same sequence of elements as the given ",(0,n.kt)("inlineCode",{parentName:"p"},"source"),", false otherwise.")),(0,n.kt)("h4",s({},{id:"definition-10"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"containsSlice(source: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStreamSource/NonEmpty/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"eq?: Eq<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"amount?: number;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<boolean>;"))),(0,n.kt)("h4",s({},{id:"parameters-4"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"source")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncStreamSource/NonEmpty/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"eq?: Eq<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"amount?: number;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3, 4, 5).containsSlice([2, 3, 4])\n// => true\nawait AsyncStream.of(1, 2, 3, 4, 5).containsSlice([4, 3, 2])\n// => false\n"))),(0,n.kt)("h4",s({},{id:"overrides-8"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#containsSlice"}),"AsyncStream.containsSlice"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#containsSlice"}),"AsyncStreamBase.containsSlice"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"count"}),(0,n.kt)("inlineCode",{parentName:"h3"},"count")),(0,n.kt)("p",null,"Returns the amount of elements in the AsyncStream.")),(0,n.kt)("h4",s({},{id:"definition-11"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"count(): Promise<number>;"))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).count() // => 3\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N) for most types of Stream  @note be careful not to use on infinite streams")),(0,n.kt)("h4",s({},{id:"overrides-9"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#count"}),"AsyncStream.count"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#count"}),"AsyncStreamBase.count"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"countelement"}),(0,n.kt)("inlineCode",{parentName:"h3"},"countElement")),(0,n.kt)("p",null,"Returns the amount of elements that are equal according to the given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," to the given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," in the AsyncStream.")),(0,n.kt)("h4",s({},{id:"definition-12"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"countElement(value: T, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"eq?: Eq<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<number>;"))),(0,n.kt)("h4",s({},{id:"parameters-5"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"eq?: Eq<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).countElement(2) // => 1\nawait AsyncStream.of(1, 2, 3).countElement(2, { negate: true }) // => 2\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)  @note be careful not to use on infinite streams")),(0,n.kt)("h4",s({},{id:"overrides-10"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#countElement"}),"AsyncStream.countElement"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#countElement"}),"AsyncStreamBase.countElement"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"distinctprevious"}),(0,n.kt)("inlineCode",{parentName:"h3"},"distinctPrevious")),(0,n.kt)("p",null,"Returns an AsyncStream containing non-repetitive elements of the source stream, where repetitive elements are compared using the optionally given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," equality function.")),(0,n.kt)("h4",s({},{id:"definition-13"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"distinctPrevious(options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"eq?: Eq<T> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",s({},{id:"parameters-6"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"eq?: Eq<T> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 1, 2, 2, 3, 1).distinctPrevious().toArray()\n// => [1, 2, 3, 1]\n"))),(0,n.kt)("h4",s({},{id:"overrides-11"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#distinctPrevious"}),"AsyncStream.distinctPrevious"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#distinctPrevious"}),"AsyncStreamBase.distinctPrevious"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"drop"}),(0,n.kt)("inlineCode",{parentName:"h3"},"drop")),(0,n.kt)("p",null,"Returns an AsyncStream that skips the first ",(0,n.kt)("inlineCode",{parentName:"p"},"amount")," elements of this stream and returns the rest.")),(0,n.kt)("h4",s({},{id:"definition-14"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"drop(amount: number): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",s({},{id:"parameters-7"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"amount")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).drop(1).toArray()   // => [2, 3]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-12"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#drop"}),"AsyncStream.drop"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#drop"}),"AsyncStreamBase.drop"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"dropwhile"}),(0,n.kt)("inlineCode",{parentName:"h3"},"dropWhile")),(0,n.kt)("p",null,"Returns an AsyncStream that contains the elements of this stream starting from the first element that does not satisfy given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function.")),(0,n.kt)("h4",s({},{id:"definition-15"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"dropWhile(pred: (value: T, index: number) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<boolean>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",s({},{id:"parameters-8"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<boolean>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).dropWhile(async v => v < 2).toArray()\n// => [2, 3]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-13"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#dropWhile"}),"AsyncStream.dropWhile"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#dropWhile"}),"AsyncStreamBase.dropWhile"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"elementat"}),(0,n.kt)("inlineCode",{parentName:"h3"},"elementAt")),(0,n.kt)("p",null,"Returns the element in the AsyncStream at the given index, or a fallback value (default undefined) otherwise.")),(0,n.kt)("h4",s({},{id:"definition-16"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"elementAt<O>(index: number, otherwise?: AsyncOptLazy<O>): Promise<T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-2"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-9"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"index")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"AsyncOptLazy<O>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).elementAt(1)        // => 2\nawait AsyncStream.of(1, 2, 3).elementAt(5)        // => undefined\nawait AsyncStream.of(1, 2, 3).elementAt(5, 'a')   // => 'a'\nawait AsyncStream.of(1, 2, 3).elementAt(5, async () => 'a')   // => 'a'\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N) for most types of Stream")),(0,n.kt)("h4",s({},{id:"overrides-14"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#elementAt"}),"AsyncStream.elementAt"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#elementAt"}),"AsyncStreamBase.elementAt"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"equals"}),(0,n.kt)("inlineCode",{parentName:"h3"},"equals")),(0,n.kt)("p",null,"Returns true if the sequence of elements in this stream are equal to the sequence in the ",(0,n.kt)("inlineCode",{parentName:"p"},"other")," stream according to the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," function.")),(0,n.kt)("h4",s({},{id:"definition-17"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"equals(other: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"eq?: Eq<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<boolean>;"))),(0,n.kt)("h4",s({},{id:"parameters-10"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"other")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"eq?: Eq<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).equals([1, 2, 3])     // => true\nawait AsyncStream.of(1, 2, 3, 4).equals([1, 2, 3])  // => false\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"don't use on potentially infinite streams  @note O(N)")),(0,n.kt)("h4",s({},{id:"overrides-15"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#equals"}),"AsyncStream.equals"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#equals"}),"AsyncStreamBase.equals"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"every"}),(0,n.kt)("inlineCode",{parentName:"h3"},"every")),(0,n.kt)("p",null,"Returns true if every element of the AsyncStream satifies given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function.")),(0,n.kt)("h4",s({},{id:"definition-18"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"every(pred: (value: T, index: number) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<boolean>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<boolean>;"))),(0,n.kt)("h4",s({},{id:"parameters-11"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<boolean>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).every((v, i) => v + i > 10)  // => false\nawait AsyncStream.of(1, 2, 3).every(async (v, i) => v + i < 10)  // => true\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-16"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#every"}),"AsyncStream.every"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#every"}),"AsyncStreamBase.every"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"filter"}),(0,n.kt)("inlineCode",{parentName:"h3"},"filter")),(0,n.kt)("p",null,"Returns an AsyncStream containing only those elements from this stream for which the given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function returns true.")),(0,n.kt)("h4",s({},{id:"definition-19"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"filter(pred: (value: T, index: number, halt: () => void) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<boolean>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): any;"))),(0,n.kt)("h4",s({},{id:"parameters-12"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number, halt: () => void) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<boolean>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"if the predicate is a type guard, the return type is automatically inferred  @note O(1)")),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).filter(async (v, i) => v + i !== 3).toArray()\n// => [1, 3]\nawait AsyncStream.of(1, 2, 3).filter(async (v, i) => v + i !== 3, { negate: true }).toArray()\n// => [2]\n"))),(0,n.kt)("h4",s({},{id:"overrides-17"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#filter"}),"AsyncStream.filter"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#filter"}),"AsyncStreamBase.filter"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"filterpure"}),(0,n.kt)("inlineCode",{parentName:"h3"},"filterPure")),(0,n.kt)("p",null,"Returns an AsyncStream containing only those elements from this stream for which the given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function returns true.")),(0,n.kt)("h4",s({},{id:"definition-20"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"filterPure<A extends readonly unknown[]>(options: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"pred: (value: T, ...args: A) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<boolean>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}, ...args: A): any;"))),(0,n.kt)("h4",s({},{id:"type-parameters-3"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"A"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"readonly unknown[]")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-13"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"pred: (value: T, ...args: A) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<boolean>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"args")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"A")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"if the predicate is a type guard, the return type is automatically inferred  @note O(1)")),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).filterPure({ pred: Object.is }, 2).toArray()\n// => [2]\nawait AsyncStream.of(1, 2, 3).filterPure({ pred: Object.is, negate: true }, 2).toArray()\n// => [1, 3]\n"))),(0,n.kt)("h4",s({},{id:"overrides-18"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#filterPure"}),"AsyncStream.filterPure"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#filterPure"}),"AsyncStreamBase.filterPure"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"find"}),(0,n.kt)("inlineCode",{parentName:"h3"},"find")),(0,n.kt)("p",null,"Returns the first element for which the given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function returns true, or a fallback value otherwise.")),(0,n.kt)("h4",s({},{id:"definition-21"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"find<O>(pred: (value: T, index: number) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<boolean>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"occurrance?: number "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"otherwise?: AsyncOptLazy<O>;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-4"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-14"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<boolean>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"occurrance?: number "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"otherwise?: AsyncOptLazy<O>;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"if the predicate is a type guard, the return type is automatically inferred")),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"const isEven = async (v: number) => v % 2 === 0\nawait AsyncStream.of(1, 2, 3, 4).find(isEven)           // => 2\nawait AsyncStream.of(1, 2, 3, 4).find(isEven, { occurrance: 2 })        // => 4\nawait AsyncStream.of(1, 2, 3, 4).find(isEven, { occurrance: 3 })        // => undefined\nawait AsyncStream.of(1, 2, 3, 4).find(isEven, { occurrance: 3, otherwise: 'a' })\n// => 'a'\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-19"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#find"}),"AsyncStream.find"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#find"}),"AsyncStreamBase.find"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"first"}),(0,n.kt)("inlineCode",{parentName:"h3"},"first")),(0,n.kt)("p",null,"Returns the first element of the AsyncStream, or a fallback value (default undefined) if the stream is empty.")),(0,n.kt)("h4",s({},{id:"definition-22"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"first<O>(otherwise?: AsyncOptLazy<O>): Promise<T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-5"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-15"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"AsyncOptLazy<O>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).first()      // => 1\nawait AsyncStream.empty<number>().first()  // => undefined\nawait AsyncStream.empty<number>().first(0) // => 0\nawait AsyncStream.empty<number>().first(async () => 0) // => 0\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",s({},{id:"overrides-20"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#first"}),"AsyncStream.first"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#first"}),"AsyncStreamBase.first"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"flatmap"}),(0,n.kt)("inlineCode",{parentName:"h3"},"flatMap")),(0,n.kt)("p",null,"Returns an AsyncStream consisting of the concatenation of ",(0,n.kt)("inlineCode",{parentName:"p"},"flatMapFun")," applied to each element.")),(0,n.kt)("h4",s({},{id:"definition-23"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"flatMap<T2>(flatMapFun: (value: T, index: number, halt: () => void) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T2>): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T2>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-6"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"T2"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-16"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"flatMapFun")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number, halt: () => void) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T2>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).flatMap(async (v, i, halt) => {\nif (i >= 1) halt();\nreturn [v, i, v + i]\n}).toArray()\n// => [1, 0, 1, 2, 1, 3]\n"))),(0,n.kt)("h4",s({},{id:"overrides-21"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#flatMap"}),"AsyncStream.flatMap"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#flatMap"}),"AsyncStreamBase.flatMap"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"flatzip"}),(0,n.kt)("inlineCode",{parentName:"h3"},"flatZip")),(0,n.kt)("p",null,"Returns an AsyncStream consisting of the concatenation of ",(0,n.kt)("inlineCode",{parentName:"p"},"flatMapFun")," applied to each element, zipped with the element that was provided to the function.")),(0,n.kt)("h4",s({},{id:"definition-24"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"flatZip<T2>(flatMapFun: (value: T, index: number, halt: () => void) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T2>): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<[T, T2]>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-7"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"T2"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-17"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"flatMapFun")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number, halt: () => void) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T2>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).flatZip((v, i, halt) => {\nif (i >= 1) halt();\nreturn [v, i, v + i]\n}).toArray()\n// => [[1, 1], [1, 0], [1, 1], [2, 2], [2, 1], [2, 3]]\n"))),(0,n.kt)("h4",s({},{id:"overrides-22"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#flatZip"}),"AsyncStream.flatZip"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#flatZip"}),"AsyncStreamBase.flatZip"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"fold"}),(0,n.kt)("inlineCode",{parentName:"h3"},"fold")),(0,n.kt)("p",null,"Returns the value resulting from applying the given the given ",(0,n.kt)("inlineCode",{parentName:"p"},"next")," function to a current state (initially the given ",(0,n.kt)("inlineCode",{parentName:"p"},"init")," value), and the next stream value, and returning the new state. When all elements are processed, the resulting state is returned.")),(0,n.kt)("h4",s({},{id:"definition-25"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"fold<R>(init: AsyncOptLazy<R>, next: (current: R, value: T, index: number, halt: () => void) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>): Promise<R>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-8"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-18"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"init")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"AsyncOptLazy<R>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"next")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(current: R, value: T, index: number, halt: () => void) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<R>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"console.log(await AsyncStream.empty<number>().fold(5, async (current, value) => current + value))\n// => 5\nconsole.log(await AsyncStream.of(1, 2, 3).fold(() => 5, (current, value) => current + value))\n// => 11  (= 5 + 1 + 2 + 3)\n"))),(0,n.kt)("h4",s({},{id:"overrides-23"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#fold"}),"AsyncStream.fold"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#fold"}),"AsyncStreamBase.fold"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"foldstream"}),(0,n.kt)("inlineCode",{parentName:"h3"},"foldStream")),(0,n.kt)("p",null,"Returns an AsyncStream containing the values resulting from applying the given the given ",(0,n.kt)("inlineCode",{parentName:"p"},"next")," function to a current state (initially the given ",(0,n.kt)("inlineCode",{parentName:"p"},"init")," value), and the next stream value, and returning the new state.")),(0,n.kt)("h4",s({},{id:"definition-26"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"foldStream<R>(init: AsyncOptLazy<R>, next: (current: R, value: T, index: number, halt: () => void) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-9"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-19"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"init")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"AsyncOptLazy<R>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"next")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(current: R, value: T, index: number, halt: () => void) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<R>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"console.log(\nawait AsyncStream.empty<number>()\n.foldStream(5, async (current, value) => current + value)\n.toArray()\n)\n// => []\nconsole.log(\nawait AsyncStream.of(1, 2, 3)\n.foldStream(() => 5, (current, value) => current + value)\n.toArray()\n)\n// => [6, 8, 11]\n"))),(0,n.kt)("h4",s({},{id:"overrides-24"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#foldStream"}),"AsyncStream.foldStream"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#foldStream"}),"AsyncStreamBase.foldStream"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"foreach"}),(0,n.kt)("inlineCode",{parentName:"h3"},"forEach")),(0,n.kt)("p",null,"Performs given function ",(0,n.kt)("inlineCode",{parentName:"p"},"f")," for each element of the Stream, using given ",(0,n.kt)("inlineCode",{parentName:"p"},"state")," as initial traversal state.")),(0,n.kt)("h4",s({},{id:"definition-27"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"forEach(f: (value: T, index: number, halt: () => void) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<void>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"state?: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"TraverseState")),(0,n.kt)("inlineCode",{parentName:"p"},";"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<void>;"))),(0,n.kt)("h4",s({},{id:"parameters-20"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"f")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number, halt: () => void) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<void>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"state?: "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"TraverseState")),(0,n.kt)("inlineCode",{parentName:"td"},";"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"if f is an async function, each call will be awaited consecutively")),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).forEach(async (v, i, halt) => {\nconsole.log(v);\nif (i >= 1) halt();\n})\n// => 1, 2\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-25"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#forEach"}),"AsyncStream.forEach"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#forEach"}),"AsyncStreamBase.forEach"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"foreachpure"}),(0,n.kt)("inlineCode",{parentName:"h3"},"forEachPure")),(0,n.kt)("p",null,"Performs given function ",(0,n.kt)("inlineCode",{parentName:"p"},"f")," for each element of the Stream, with the optionally given ",(0,n.kt)("inlineCode",{parentName:"p"},"args")," as extra arguments.")),(0,n.kt)("h4",s({},{id:"definition-28"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"forEachPure<A extends readonly unknown[]>(f: (value: T, ...args: A) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<void>, ...args: A): Promise<void>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-10"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"A"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"readonly unknown[]")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-21"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"f")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, ...args: A) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<void>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"args")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"A")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"if f is an async function, each call will be awaited consecutively")),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).forEachPure(console.log, 'sheep')\n// => logs:\n// 1 sheep\n// 2 sheep\n// 3 sheep\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-26"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#forEachPure"}),"AsyncStream.forEachPure"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#forEachPure"}),"AsyncStreamBase.forEachPure"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"groupby"}),(0,n.kt)("inlineCode",{parentName:"h3"},"groupBy")),(0,n.kt)("p",null,"Returns a promise resolving to the result of applying the ",(0,n.kt)("inlineCode",{parentName:"p"},"valueToKey")," function to calculate a key for each value, and feeding the tuple of the key and the value to the ",(0,n.kt)("inlineCode",{parentName:"p"},"collector")," reducer, and finally returning its result. If no collector is given, the default collector will return a JS multimap of the type ",(0,n.kt)("inlineCode",{parentName:"p"},"Map<K, V[]>"),".")),(0,n.kt)("h4",s({},{id:"definition-29"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"groupBy<K, R>(valueToKey: (value: T, index: number) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<K>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"collector?: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,n.kt)("inlineCode",{parentName:"p"},"<readonly [K, T], R> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<R>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-11"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"K"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-22"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"valueToKey")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<K>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"collector?: "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,n.kt)("inlineCode",{parentName:"td"},"<readonly [K, T], R> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).groupBy((v) => v % 2)\n// => Map {0 => [2], 1 => [1, 3]}\n"))),(0,n.kt)("h4",s({},{id:"overrides-27"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#groupBy"}),"AsyncStream.groupBy"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#groupBy"}),"AsyncStreamBase.groupBy"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"indexed"}),(0,n.kt)("inlineCode",{parentName:"h3"},"indexed")),(0,n.kt)("p",null,"Returns an AsyncStream where each element in this stream is paired with its index")),(0,n.kt)("h4",s({},{id:"definition-30"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"indexed(options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"startIndex?: number;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<[number, T]>;"))),(0,n.kt)("h4",s({},{id:"parameters-23"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"startIndex?: number;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).indexed().toArray()\n// => [[0, 1], [1, 2], [2, 3]]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",s({},{id:"overrides-28"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#indexed"}),"AsyncStream.indexed"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#indexed"}),"AsyncStreamBase.indexed"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"indexof"}),(0,n.kt)("inlineCode",{parentName:"h3"},"indexOf")),(0,n.kt)("p",null,"Returns the index of the ",(0,n.kt)("inlineCode",{parentName:"p"},"occurrance")," instance of given ",(0,n.kt)("inlineCode",{parentName:"p"},"searchValue")," in the AsyncStream, using given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," function, or undefined if no such value is found.")),(0,n.kt)("h4",s({},{id:"definition-31"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"indexOf(searchValue: T, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"occurrance?: number "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"eq?: Eq<T> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<number "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined>;"))),(0,n.kt)("h4",s({},{id:"parameters-24"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"searchValue")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"occurrance?: number "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"eq?: Eq<T> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"const source = AsyncStream.from('marmot')\nawait source.indexOf('m')     // => 0\nawait source.indexOf('m', { occurrance: 2 })  // => 3\nawait source.indexOf('m', { occurrance: 3 })  // => undefined\nawait source.indexOf('q')     // => undefined\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-29"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#indexOf"}),"AsyncStream.indexOf"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#indexOf"}),"AsyncStreamBase.indexOf"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"indexwhere"}),(0,n.kt)("inlineCode",{parentName:"h3"},"indexWhere")),(0,n.kt)("p",null,"Returns the index of the given ",(0,n.kt)("inlineCode",{parentName:"p"},"occurrance")," instance of the element in the AsyncStream that satisfies given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function, or undefined if no such instance is found.")),(0,n.kt)("h4",s({},{id:"definition-32"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"indexWhere(pred: (value: T, index: number) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<boolean>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"occurrance?: number;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<number "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined>;"))),(0,n.kt)("h4",s({},{id:"parameters-25"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<boolean>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"occurrance?: number;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).indexWhere((v, i) => v + i > 2)      // => 1\nawait AsyncStream.of(1, 2, 3).indexWhere(async (v, i) => v + i > 2, { occurrance: 2 })   // => 2\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-30"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#indexWhere"}),"AsyncStream.indexWhere"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#indexWhere"}),"AsyncStreamBase.indexWhere"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"indicesof"}),(0,n.kt)("inlineCode",{parentName:"h3"},"indicesOf")),(0,n.kt)("p",null,"Returns an AsyncStream containing the indicies of the occurrance of the given ",(0,n.kt)("inlineCode",{parentName:"p"},"searchValue"),", according to given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," function.")),(0,n.kt)("h4",s({},{id:"definition-33"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"indicesOf(searchValue: T, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"eq?: Eq<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<number>;"))),(0,n.kt)("h4",s({},{id:"parameters-26"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"searchValue")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"eq?: Eq<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.from('marmot').indicesOf('m').toArray()\n// => [0, 3]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-31"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#indicesOf"}),"AsyncStream.indicesOf"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#indicesOf"}),"AsyncStreamBase.indicesOf"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"indiceswhere"}),(0,n.kt)("inlineCode",{parentName:"h3"},"indicesWhere")),(0,n.kt)("p",null,"Returns an AsyncStream containing the indices of the elements for which the given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function returns true.")),(0,n.kt)("h4",s({},{id:"definition-34"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"indicesWhere(pred: (value: T) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<boolean>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<number>;"))),(0,n.kt)("h4",s({},{id:"parameters-27"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<boolean>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).indicesWhere((v, i) => v + i !== 3).toArray()\n// => [0, 2]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-32"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#indicesWhere"}),"AsyncStream.indicesWhere"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#indicesWhere"}),"AsyncStreamBase.indicesWhere"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"intersperse"}),(0,n.kt)("inlineCode",{parentName:"h3"},"intersperse")),(0,n.kt)("p",null,"Returns an AsyncStream with all elements from the given ",(0,n.kt)("inlineCode",{parentName:"p"},"sep")," AsyncStreamSource between two elements of this stream.")),(0,n.kt)("h4",s({},{id:"definition-35"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"intersperse(sep: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",s({},{id:"parameters-28"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"sep")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).intersperse(\"ab\").toArray()\n// => [1, 'a', 'b', 2, 'a', 'b', 3]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",s({},{id:"overrides-33"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#intersperse"}),"AsyncStream.intersperse"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#intersperse"}),"AsyncStreamBase.intersperse"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"join"}),(0,n.kt)("inlineCode",{parentName:"h3"},"join")),(0,n.kt)("p",null,"Returns a string resulting from converting each element to string with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.valueToString"),", interspersed with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.sep"),", starting with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.start")," and ending with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.end"),".")),(0,n.kt)("h4",s({},{id:"definition-36"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"join({ sep, start, end, valueToString, ifEmpty, }?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"sep?: string "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"start?: string "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"end?: string "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"valueToString?: StringConstructor "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"ifEmpty?: undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<string>;"))),(0,n.kt)("h4",s({},{id:"parameters-29"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{ sep, start, end, valueToString, ifEmpty, }")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"sep?: string "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"start?: string "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"end?: string "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"valueToString?: StringConstructor "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"ifEmpty?: undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).join({ start: '<', sep: ', ', end: '>' })\n// => '<1, 2, 3>'\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-34"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#join"}),"AsyncStream.join"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#join"}),"AsyncStreamBase.join"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"last"}),(0,n.kt)("inlineCode",{parentName:"h3"},"last")),(0,n.kt)("p",null,"Returns the last element of the AsyncStream, or a fallback value (default undefined) if the stream is empty.")),(0,n.kt)("h4",s({},{id:"definition-37"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"last<O>(otherwise?: AsyncOptLazy<O>): Promise<T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-12"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-30"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"AsyncOptLazy<O>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).last()      // => 3\nawait AsyncStream.empty<number>().last()  // => undefined\nawait AsyncStream.empty<number>().last(0) // => 0\nawait AsyncStream.empty<number>().last(async () => 0) // => 0\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-35"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#last"}),"AsyncStream.last"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#last"}),"AsyncStreamBase.last"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"map"}),(0,n.kt)("inlineCode",{parentName:"h3"},"map")),(0,n.kt)("p",null,"Returns an AsyncStream where ",(0,n.kt)("inlineCode",{parentName:"p"},"mapFun")," is applied to each element.")),(0,n.kt)("h4",s({},{id:"definition-38"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"map<T2>(mapFun: (value: T, index: number) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<T2>): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T2>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-13"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"T2"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-31"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"mapFun")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<T2>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).map(async (v, i) => `[${i}]: ${v}`).toArray()\n// => ['[0]: 1', '[1]: 2', '[2]: 3']\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",s({},{id:"overrides-36"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#map"}),"AsyncStream.map"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#map"}),"AsyncStreamBase.map"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"mappure"}),(0,n.kt)("inlineCode",{parentName:"h3"},"mapPure")),(0,n.kt)("p",null,"Returns an AsyncStream where the given ",(0,n.kt)("inlineCode",{parentName:"p"},"mapFun")," is applied to each value in the stream, with optionally as extra arguments the given ",(0,n.kt)("inlineCode",{parentName:"p"},"args"),".")),(0,n.kt)("h4",s({},{id:"definition-39"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"mapPure<T2, A extends readonly unknown[]>(mapFun: (value: T, ...args: A) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<T2>, ...args: A): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T2>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-14"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"T2"),(0,n.kt)("td",s({parentName:"tr"},{align:null})),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"A"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"readonly unknown[]")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-32"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"mapFun")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, ...args: A) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<T2>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"args")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"A")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"is mostly aimed to increase performance so that an extra function is not required  @note can be used on function that really expect 1 argument, since the normal map will also pass more arguments")),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),'const s = AsyncStream.of({ a: 1 }, { a: 2, c: { d: true } })\nconst s2 = s.mapPure(JSON.stringify, [\'a\'], 5)\n// when stream is evaluated, will call JSON.stringify on each stream element with the given extra arguments\nconsole.log(await s2.toArray())\n// => ["{\\n \\"a\\": 1\\n}", "{\\n \\"a\\": 2\\n}"]\n'))),(0,n.kt)("h4",s({},{id:"overrides-37"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#mapPure"}),"AsyncStream.mapPure"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#mapPure"}),"AsyncStreamBase.mapPure"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"max"}),(0,n.kt)("inlineCode",{parentName:"h3"},"max")),(0,n.kt)("p",null,"Returns the maximum element of the AsyncStream according to a default compare function, or the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"otherwise")," fallback value if the stream is empty.")),(0,n.kt)("h4",s({},{id:"definition-40"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"max<O>(otherwise?: AsyncOptLazy<O>): Promise<T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-15"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-33"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"AsyncOptLazy<O>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(5, 1, 3).max()         // => 5\nawait AsyncStream.empty<number>().max()     // => undefined\nawait AsyncStream.empty<number>().max('a')  // => 'a'\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-38"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#max"}),"AsyncStream.max"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#max"}),"AsyncStreamBase.max"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"maxby"}),(0,n.kt)("inlineCode",{parentName:"h3"},"maxBy")),(0,n.kt)("p",null,"Returns the maximum element of the AsyncStream according to the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"compare")," function, or the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"otherwise")," fallback value if the stream is empty.")),(0,n.kt)("h4",s({},{id:"definition-41"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"maxBy<O>(compare: (v1: T, v2: T) => number, otherwise?: AsyncOptLazy<O>): Promise<T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-16"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-34"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"compare")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(v1: T, v2: T) => number")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"AsyncOptLazy<O>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"function compareLength(a: string, b: string): number { return b.length - a.length };\nawait AsyncStream.of('abc', 'a', 'ab').maxBy(compareLength)   // => 'abc'\nawait AsyncStream.empty<string>().maxBy(compareLength)        // => undefined\nawait AsyncStream.empty<string>().maxBy(compareLength, 'a')   // => 'a'\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-39"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#maxBy"}),"AsyncStream.maxBy"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#maxBy"}),"AsyncStreamBase.maxBy"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"min"}),(0,n.kt)("inlineCode",{parentName:"h3"},"min")),(0,n.kt)("p",null,"Returns the mimimum element of the AsyncStream according to a default compare function, or the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"otherwise")," fallback value if the stream is empty.")),(0,n.kt)("h4",s({},{id:"definition-42"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"min<O>(otherwise?: AsyncOptLazy<O>): Promise<T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-17"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-35"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"AsyncOptLazy<O>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(5, 1, 3).min()         // => 1\nawait AsyncStream.empty<number>().min()     // => undefined\nawait AsyncStream.empty<number>().min('a')  // => 'a'\nawait AsyncStream.empty<number>().min(async () => 'a')  // => 'a'\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-40"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#min"}),"AsyncStream.min"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#min"}),"AsyncStreamBase.min"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"minby"}),(0,n.kt)("inlineCode",{parentName:"h3"},"minBy")),(0,n.kt)("p",null,"Returns the mimimum element of the AsyncStream according to the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"compare")," function, or the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"otherwise")," fallback value if the stream is empty.")),(0,n.kt)("h4",s({},{id:"definition-43"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"minBy<O>(compare: (v1: T, v2: T) => number, otherwise?: AsyncOptLazy<O>): Promise<T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-18"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-36"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"compare")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(v1: T, v2: T) => number")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"AsyncOptLazy<O>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"function compareLength(a: string, b: string): number { return b.length - a.length };\nawait AsyncStream.of('abc', 'a', 'ab').minBy(compareLength)   // => 'a'\nawait AsyncStream.empty<string>().minBy(compareLength)        // => undefined\nawait AsyncStream.empty<string>().minBy(compareLength, 'a')   // => 'a'\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-41"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#minBy"}),"AsyncStream.minBy"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#minBy"}),"AsyncStreamBase.minBy"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"mkgroup"}),(0,n.kt)("inlineCode",{parentName:"h3"},"mkGroup")),(0,n.kt)("p",null,"Returns an AsyncStream starting with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.sep"),", then returning the elements of this Stream interspersed with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.sep"),", and ending with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.end"),".")),(0,n.kt)("h4",s({},{id:"definition-44"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"mkGroup({ sep, start, end, }?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"sep?: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"start?: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"end?: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): any;"))),(0,n.kt)("h4",s({},{id:"parameters-37"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{ sep, start, end, }")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"sep?: "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"start?: "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"end?: "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).mkGroup({ start: '<<', sep: '-', end: '>>' }).toArray()\n// => ['<', '<', 1, '-', 2, '-', 3, '>', '>']\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-42"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#mkGroup"}),"AsyncStream.mkGroup"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#mkGroup"}),"AsyncStreamBase.mkGroup"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"partition"}),(0,n.kt)("inlineCode",{parentName:"h3"},"partition")),(0,n.kt)("p",null,"Returns a promise resolving to a tuple of which the first element is the result of collecting the elements for which the given ",(0,n.kt)("inlineCode",{parentName:"p"},"predicate")," is true, and the second one the result of collecting the other elements. Own reducers can be provided as collectors, by default the values are collected into an array.")),(0,n.kt)("h4",s({},{id:"definition-45"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"partition(pred: (value: T, index: number) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<boolean>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"collectorTrue?: any;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"collectorFalse?: any;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<[any, any]>;"))),(0,n.kt)("h4",s({},{id:"parameters-38"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<boolean>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"collectorTrue?: any;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"collectorFalse?: any;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"if the predicate is a type guard, the return type is automatically inferred")),(0,n.kt)("h4",s({},{id:"overrides-43"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#partition"}),"AsyncStream.partition"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#partition"}),"AsyncStreamBase.partition"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"prepend"}),(0,n.kt)("inlineCode",{parentName:"h3"},"prepend")),(0,n.kt)("p",null,"Returns the current stream preceded by the given ",(0,n.kt)("inlineCode",{parentName:"p"},"value"))),(0,n.kt)("h4",s({},{id:"definition-46"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"prepend(value: AsyncOptLazy<T>): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/NonEmpty/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",s({},{id:"parameters-39"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"AsyncOptLazy<T>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).prepend(0).toArray()\n// => [0, 1, 2, 3]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",s({},{id:"overrides-44"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#prepend"}),"AsyncStream.prepend"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#prepend"}),"AsyncStreamBase.prepend"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"reduce"}),(0,n.kt)("inlineCode",{parentName:"h3"},"reduce")),(0,n.kt)("p",null,"Applies the given ",(0,n.kt)("inlineCode",{parentName:"p"},"(Async)Reducer")," to each element in the AsyncStream, and returns the final result.")),(0,n.kt)("h4",s({},{id:"definition-47"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"reduce<const S extends "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/CombineShape/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.CombineShape")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>>(shape: S & "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/CombineShape/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.CombineShape")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>): Promise<"),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/CombineResult/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.CombineResult")),(0,n.kt)("inlineCode",{parentName:"p"},"<S>>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-19"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"S"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncReducer/CombineShape/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.CombineShape")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-40"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"shape")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"S & "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncReducer/CombineShape/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.CombineShape")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"console.log(await AsyncStream.of(1, 2, 4).reduce(Reducer.sum))\n// => 7\nconsole.log(await AsyncStream.of(1, 2, 4).reduce(Reducer.product))\n// => 8\n"))),(0,n.kt)("h4",s({},{id:"overrides-45"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#reduce"}),"AsyncStream.reduce"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#reduce"}),"AsyncStreamBase.reduce"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"reducestream"}),(0,n.kt)("inlineCode",{parentName:"h3"},"reduceStream")),(0,n.kt)("p",null,"Returns an AsyncStream where the given ",(0,n.kt)("inlineCode",{parentName:"p"},"AsyncReducer")," is applied to each element in the stream.")),(0,n.kt)("h4",s({},{id:"definition-48"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"reduceStream<const S extends "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/CombineShape/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.CombineShape")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>>(shape: S & "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/CombineShape/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.CombineShape")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<"),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/CombineResult/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.CombineResult")),(0,n.kt)("inlineCode",{parentName:"p"},"<S>>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-20"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"S"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncReducer/CombineShape/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.CombineShape")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-41"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"shape")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"S & "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncReducer/CombineShape/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.CombineShape")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"console.log(\nawait AsyncStream.of(1, 2, 4)\n.reduceStream(Reducer.sum)\n.toArray()\n)\n// => [1, 3, 7]\nconsole.log(\nawait AsyncStream.of(1, 2, 4)\n.reduce(Reducer.product)\n.toArray()\n)\n// => [1, 2, 8]\n"))),(0,n.kt)("h4",s({},{id:"overrides-46"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#reduceStream"}),"AsyncStream.reduceStream"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#reduceStream"}),"AsyncStreamBase.reduceStream"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"repeat"}),(0,n.kt)("inlineCode",{parentName:"h3"},"repeat")),(0,n.kt)("p",null,"Returns an AsyncStream that returns the elements from this stream given ",(0,n.kt)("inlineCode",{parentName:"p"},"amount")," of times.")),(0,n.kt)("h4",s({},{id:"definition-49"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"repeat(amount?: number): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",s({},{id:"parameters-42"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"amount")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"const source = AsyncStream.of(1, 2, 3)\nsource.repeat()              // => AsyncStream(1, 2, 3, 1, 2, 3, 1, 2, ...)\nawait source.repeat(1).toArray()   // => [1, 2, 3]\nawait source.repeat(3).toArray()   // => [1, 2, 3, 1, 2, 3, 1, 2, 3]\nawait source.repeat(-3).toArray()  // => [1, 2, 3]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"amount = undefined means that the AsyncStream is repeated indefintely  @note amount = 1 means that the Stream is not repeated  @note amount < 1 will be normalized to amount = 1  @note O(1)")),(0,n.kt)("h4",s({},{id:"overrides-47"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#repeat"}),"AsyncStream.repeat"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#repeat"}),"AsyncStreamBase.repeat"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"single"}),(0,n.kt)("inlineCode",{parentName:"h3"},"single")),(0,n.kt)("p",null,"Returns the first element of the Stream if it only has one element, or a fallback value if the Stream does not have exactly one value.")),(0,n.kt)("h4",s({},{id:"definition-50"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"single<O>(otherwise?: AsyncOptLazy<O>): Promise<T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-21"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-43"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"AsyncOptLazy<O>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.empty<number>().single()  // => undefined\nawait AsyncStream.of(1, 2, 3).single()      // => undefined\nawait AsyncStream.of(1).single()            // => 1\nawait AsyncStream.of(1, 2, 3).single(0)     // => 0\n"))),(0,n.kt)("h4",s({},{id:"overrides-48"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#single"}),"AsyncStream.single"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#single"}),"AsyncStreamBase.single"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"some"}),(0,n.kt)("inlineCode",{parentName:"h3"},"some")),(0,n.kt)("p",null,"Returns true if any element of the AsyncStream satifies given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function.")),(0,n.kt)("h4",s({},{id:"definition-51"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"some(pred: (value: T, index: number) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<boolean>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): Promise<boolean>;"))),(0,n.kt)("h4",s({},{id:"parameters-44"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<boolean>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).some((v, i) => v + i > 10) // => false\nawait AsyncStream.of(1, 2, 3).some(async (v, i) => v + i > 1)  // => true\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-49"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#some"}),"AsyncStream.some"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#some"}),"AsyncStreamBase.some"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"spliton"}),(0,n.kt)("inlineCode",{parentName:"h3"},"splitOn")),(0,n.kt)("p",null,"Returns an AsyncStream of collections of stream elements, where each array is filled with elements of this stream up to the next element that equals given ",(0,n.kt)("inlineCode",{parentName:"p"},"sepElem")," according to the given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," function.")),(0,n.kt)("h4",s({},{id:"definition-52"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"splitOn<R>(sepElem: T, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"eq?: Eq<T> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"collector?: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, R> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-22"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-45"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"sepElem")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"eq?: Eq<T> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"collector?: "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,n.kt)("inlineCode",{parentName:"td"},"<T, R> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.from('marmot').splitOn('m').toArray()  // => [[], ['a', 'r'], ['o', 't']]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",s({},{id:"overrides-50"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#splitOn"}),"AsyncStream.splitOn"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#splitOn"}),"AsyncStreamBase.splitOn"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"splitonslice"}),(0,n.kt)("inlineCode",{parentName:"h3"},"splitOnSlice")),(0,n.kt)("p",null,"Returns an AsyncStream of collections of stream elements, where each array is filled with elements of this stream up to the next sequence of elements that matches given ",(0,n.kt)("inlineCode",{parentName:"p"},"sepSeq")," ordered elements with the given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," function.")),(0,n.kt)("h4",s({},{id:"definition-53"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"splitOnSlice<R>(sepSlice: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"eq?: Eq<T> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"collector?: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, R> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-23"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-46"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"sepSlice")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncStreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"eq?: Eq<T> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"collector?: "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,n.kt)("inlineCode",{parentName:"td"},"<T, R> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.from('marmalade').splitSeq('ma').toArray()  // => [[], ['r'], ['l', 'a', 'd', 'e']]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",s({},{id:"overrides-51"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#splitOnSlice"}),"AsyncStream.splitOnSlice"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#splitOnSlice"}),"AsyncStreamBase.splitOnSlice"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"splitwhere"}),(0,n.kt)("inlineCode",{parentName:"h3"},"splitWhere")),(0,n.kt)("p",null,"Returns an AsyncStream of collections of stream elements, where each array is filled with elements of this stream up to the next element that satisfies give function ",(0,n.kt)("inlineCode",{parentName:"p"},"pred"),".")),(0,n.kt)("h4",s({},{id:"definition-54"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"splitWhere<R>(pred: (value: T, index: number) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<boolean>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"collector?: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, R> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-24"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-47"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<boolean>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"collector?: "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,n.kt)("inlineCode",{parentName:"td"},"<T, R> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3, 4).splitWhere(async v => v == 3).toArray()\n// => [[1, 2], [4]]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",s({},{id:"overrides-52"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#splitWhere"}),"AsyncStream.splitWhere"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#splitWhere"}),"AsyncStreamBase.splitWhere"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"take"}),(0,n.kt)("inlineCode",{parentName:"h3"},"take")),(0,n.kt)("p",null,"Returns an AsyncStream that contains the elements of this stream up to a maximum of ",(0,n.kt)("inlineCode",{parentName:"p"},"amount")," elements.")),(0,n.kt)("h4",s({},{id:"definition-55"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"take(amount: number): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",s({},{id:"parameters-48"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"amount")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).take(2).toArray()   // => [1, 2]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-53"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#take"}),"AsyncStream.take"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#take"}),"AsyncStreamBase.take"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"takewhile"}),(0,n.kt)("inlineCode",{parentName:"h3"},"takeWhile")),(0,n.kt)("p",null,"Returns an AsyncStream that contains the elements of this stream up to the first element that does not satisfy given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function.")),(0,n.kt)("h4",s({},{id:"definition-56"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"takeWhile(pred: (value: T, index: number) => "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"p"},"<boolean>, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",s({},{id:"parameters-49"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,n.kt)("inlineCode",{parentName:"td"},"<boolean>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"negate?: boolean;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).takeWhile(async v => v < 3).toArray()\n// => [1, 2]\n"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",s({},{id:"overrides-54"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#takeWhile"}),"AsyncStream.takeWhile"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#takeWhile"}),"AsyncStreamBase.takeWhile"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"toarray"}),(0,n.kt)("inlineCode",{parentName:"h3"},"toArray")),(0,n.kt)("p",null,"Returns an Array containing all elements in the AsyncStream.")),(0,n.kt)("h4",s({},{id:"definition-57"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"toArray(): Promise<T[]>;"))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).toArray()   // => [1, 2, 3]\n"))),(0,n.kt)("h4",s({},{id:"overrides-55"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#toArray"}),"AsyncStream.toArray"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#toArray"}),"AsyncStreamBase.toArray"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"tojson"}),(0,n.kt)("inlineCode",{parentName:"h3"},"toJSON")),(0,n.kt)("p",null,"Returns a JSON representation of the AsyncStream.  ")),(0,n.kt)("h4",s({},{id:"definition-58"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"toJSON(): Promise<"),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/ToJSON/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"ToJSON")),(0,n.kt)("inlineCode",{parentName:"p"},"<T[], 'AsyncStream'>>;"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"take care not to call on infinite Streams")),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3).toJSON()   // => { dataType: 'AsyncStream', value: [1, 2, 3] }\n"))),(0,n.kt)("h4",s({},{id:"overrides-56"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#toJSON"}),"AsyncStream.toJSON"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#toJSON"}),"AsyncStreamBase.toJSON"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"tostring"}),(0,n.kt)("inlineCode",{parentName:"h3"},"toString")),(0,n.kt)("p",null,"Returns a string representation of the AsyncStream.  ")),(0,n.kt)("h4",s({},{id:"definition-59"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"toString(): string;"))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"to avoid issues with potentially infinite stream, this method does not list the stream elements. To do this, use ",(0,n.kt)("inlineCode",{parentName:"p"},"join"),".")),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"AsyncStream.of(1, 2, 3).toString()   // => 'AsyncStream(...<potentially empty>)'\n"))),(0,n.kt)("h4",s({},{id:"overrides-57"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#toString"}),"AsyncStream.toString"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#toString"}),"AsyncStreamBase.toString"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"transform"}),(0,n.kt)("inlineCode",{parentName:"h3"},"transform")),(0,n.kt)("p",null,"Returns an AsyncStream consisting of the concatenation of AsyncStreamSource elements resulting from applying the given ",(0,n.kt)("inlineCode",{parentName:"p"},"reducer")," to each element.")),(0,n.kt)("h4",s({},{id:"definition-60"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"transform<R>(transformer: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncTransformer/Accept/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncTransformer.Accept")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, R>): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-25"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-50"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"transformer")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncTransformer/Accept/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncTransformer.Accept")),(0,n.kt)("inlineCode",{parentName:"td"},"<T, R>")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 2, 3, 4, 5, 6).transform(AsyncTransformer.window(3)).toArray()\n// => [[1, 2, 3], [4, 5, 6]]\n"))),(0,n.kt)("h4",s({},{id:"overrides-58"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#transform"}),"AsyncStream.transform"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#transform"}),"AsyncStreamBase.transform"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"window"}),(0,n.kt)("inlineCode",{parentName:"h3"},"window")),(0,n.kt)("p",null,"Returns an AsyncStream containing ",(0,n.kt)("inlineCode",{parentName:"p"},"windows")," of ",(0,n.kt)("inlineCode",{parentName:"p"},"windowSize")," consecutive elements of the source stream, with each window starting ",(0,n.kt)("inlineCode",{parentName:"p"},"skipAmount")," elements after the previous one.")),(0,n.kt)("h4",s({},{id:"definition-61"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"window<R>(windowSize: number, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"skipAmount?: number "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"collector?: "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, R> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-26"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-51"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"windowSize")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"skipAmount?: number "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"collector?: "),(0,n.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,n.kt)("inlineCode",{parentName:"td"},"<T, R> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",s({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"await Stream.of(1, 2, 3, 4, 5, 6, 7).window(3).toArray()\n// => [[1, 2, 3], [4, 5, 6]]\nawait Stream.of(1, 2, 3, 4, 5).window(3, 1).toArray()\n// => [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\nawait Stream.of(1, 2, 3, 4).window(2, 2, AsyncReducer.toJSSet()).toArray()\n// => [Set(1, 2), Set(3, 4)]\n"))),(0,n.kt)("h4",s({},{id:"overrides-59"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#window"}),"AsyncStream.window"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#window"}),"AsyncStreamBase.window"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"withonly"}),(0,n.kt)("inlineCode",{parentName:"h3"},"withOnly")),(0,n.kt)("p",null,"Returns an AsyncStream containing only those elements that are in the given ",(0,n.kt)("inlineCode",{parentName:"p"},"values")," array.")),(0,n.kt)("h4",s({},{id:"definition-62"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"withOnly<F extends T>(values: F[]): "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"AsyncStream")),(0,n.kt)("inlineCode",{parentName:"p"},"<F>;"))),(0,n.kt)("h4",s({},{id:"type-parameters-27"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"F"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-52"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"values")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"F[]")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"overrides-60"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#withOnly"}),"AsyncStream.withOnly"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#withOnly"}),"AsyncStreamBase.withOnly"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",s({},{id:"without"}),(0,n.kt)("inlineCode",{parentName:"h3"},"without")),(0,n.kt)("p",null,"Returns an AsyncStream containing all elements except the elements in the given ",(0,n.kt)("inlineCode",{parentName:"p"},"values")," array.")),(0,n.kt)("h4",s({},{id:"definition-63"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"without<F extends T>(values: F[]): any;"))),(0,n.kt)("h4",s({},{id:"type-parameters-28"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"F"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"parameters-53"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"values")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"F[]")),(0,n.kt)("td",s({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",s({},{id:"overrides-61"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface#without"}),"AsyncStream.without"),", ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async-custom/AsyncStreamBase/class#without"}),"AsyncStreamBase.without"))))}g.isMDXComponent=!0}}]);