"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[8060],{15680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>y});var n=t(96540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function d(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),l=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):d(d({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(p.Provider,{value:r},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=l(t),m=a,y=u["".concat(p,".").concat(m)]||u[m]||s[m]||o;return t?n.createElement(y,d(d({ref:r},c),{},{components:t})):n.createElement(y,d({ref:r},c))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,d=new Array(o);d[0]=m;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i[u]="string"==typeof e?e:a,d[1]=i;for(var l=2;l<o;l++)d[l]=t[l];return n.createElement.apply(null,d)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},76656:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>b,contentTitle:()=>f,default:()=>v,frontMatter:()=>y,metadata:()=>S,toc:()=>g});var n=t(15680),a=Object.defineProperty,o=Object.defineProperties,d=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,c=(e,r,t)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,u=(e,r)=>{for(var t in r||(r={}))p.call(r,t)&&c(e,t,r[t]);if(i)for(var t of i(r))l.call(r,t)&&c(e,t,r[t]);return e},s=(e,r)=>o(e,d(r)),m=(e,r)=>{var t={};for(var n in e)p.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&i)for(var n of i(e))r.indexOf(n)<0&&l.call(e,n)&&(t[n]=e[n]);return t};const y={title:"OrderedSortedSet<T>",slug:"/rimbu/ordered/OrderedSortedSet/interface"},f="interface OrderedSortedSet<T>",S={unversionedId:"rimbu_ordered/OrderedSortedSet.interface",id:"rimbu_ordered/OrderedSortedSet.interface",title:"OrderedSortedSet<T>",description:"A type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSortedSet API documentation",source:"@site/api/rimbu_ordered/OrderedSortedSet.interface.mdx",sourceDirName:"rimbu_ordered",slug:"/rimbu/ordered/OrderedSortedSet/interface",permalink:"/api/rimbu/ordered/OrderedSortedSet/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"OrderedSortedSet<T>",slug:"/rimbu/ordered/OrderedSortedSet/interface"},sidebar:"defaultSidebar",previous:{title:"OrderedSortedSet.Types",permalink:"/api/rimbu/ordered/OrderedSortedSet/Types/interface"},next:{title:"@rimbu/ordered/map",permalink:"/api/rimbu/ordered/map"}},b={},g=[{value:"Type parameters",id:"type-parameters",level:2}],O={toc:g},h="wrapper";function v(e){var r=e,{components:t}=r,a=m(r,["components"]);return(0,n.yg)(h,s(u(u({},O),a),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",u({},{id:"interface-orderedsortedsett"}),(0,n.yg)("inlineCode",{parentName:"h1"},"interface OrderedSortedSet<T>")),(0,n.yg)("p",null,"A type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the ",(0,n.yg)("a",u({parentName:"p"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,n.yg)("a",u({parentName:"p"},{href:"https://rimbu.org/api/rimbu/ordered/set/OrderedSortedSet/interface"}),"OrderedSortedSet API documentation")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Companion namespace:")," ",(0,n.yg)("a",u({parentName:"p"},{href:"/api/rimbu/ordered/OrderedSortedSet/namespace"}),"OrderedSortedSet")),(0,n.yg)("h2",u({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",u({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),"T"),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"the value type")))),(0,n.yg)("admonition",u({},{title:"note",type:"note"}),(0,n.yg)("ul",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ul"},"The OrderedSortedSet keeps the insertion order of values, thus iterators and stream will also reflect this order.",(0,n.yg)("br",null)," - The OrderedSortedSet wraps around a SortedSet instance, thus has the same time complexity as the SortedSet.",(0,n.yg)("br",null)," - The OrderedSortedSet keeps the key insertion order in a List, thus its space complexity is higher than a regular SortedSet."))),(0,n.yg)("admonition",u({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",u({parentName:"pre"},{className:"language-ts"}),"const s1 = OrderedSortedSet.empty<string>()\nconst s2 = OrderedSortedSet.of('a', 'b', 'c')\n"))))}v.isMDXComponent=!0}}]);