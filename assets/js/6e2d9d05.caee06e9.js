"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[55656],{15680:(e,a,t)=>{t.d(a,{xA:()=>m,yg:()=>s});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),y=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},m=function(e){var a=y(e.components);return n.createElement(o.Provider,{value:a},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),d=y(t),u=r,s=d["".concat(o,".").concat(u)]||d[u]||g[u]||i;return t?n.createElement(s,l(l({ref:a},m),{},{components:t})):n.createElement(s,l({ref:a},m))}));function s(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=u;var p={};for(var o in a)hasOwnProperty.call(a,o)&&(p[o]=a[o]);p.originalType=e,p[d]="string"==typeof e?e:r,l[1]=p;for(var y=2;y<i;y++)l[y]=t[y];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},61155:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>h,default:()=>C,frontMatter:()=>s,metadata:()=>N,toc:()=>f});var n=t(15680),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable,m=(e,a,t)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,d=(e,a)=>{for(var t in a||(a={}))o.call(a,t)&&m(e,t,a[t]);if(p)for(var t of p(a))y.call(a,t)&&m(e,t,a[t]);return e},g=(e,a)=>i(e,l(a)),u=(e,a)=>{var t={};for(var n in e)o.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&p)for(var n of p(e))a.indexOf(n)<0&&y.call(e,n)&&(t[n]=e[n]);return t};const s={title:"EdgeGraphBase.Context<UN,Tp>",slug:"/rimbu/graph/custom/EdgeGraphBase/Context/interface"},h="interface EdgeGraphBase.Context<UN,Tp>",N={unversionedId:"rimbu_graph/custom/EdgeGraphBase/Context.interface",id:"rimbu_graph/custom/EdgeGraphBase/Context.interface",title:"EdgeGraphBase.Context<UN,Tp>",description:"undocumented",source:"@site/api/rimbu_graph/custom/EdgeGraphBase/Context.interface.mdx",sourceDirName:"rimbu_graph/custom/EdgeGraphBase",slug:"/rimbu/graph/custom/EdgeGraphBase/Context/interface",permalink:"/api/rimbu/graph/custom/EdgeGraphBase/Context/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"EdgeGraphBase.Context<UN,Tp>",slug:"/rimbu/graph/custom/EdgeGraphBase/Context/interface"},sidebar:"defaultSidebar",previous:{title:"EdgeGraphBase.Builder<N,Tp>",permalink:"/api/rimbu/graph/custom/EdgeGraphBase/Builder/interface"},next:{title:"EdgeGraphBase.NonEmpty<N,Tp>",permalink:"/api/rimbu/graph/custom/EdgeGraphBase/NonEmpty/interface"}},c={},f=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>_fixedType</code>",id:"_fixedtype",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>isDirected</code>",id:"isdirected",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>linkConnectionsContext</code>",id:"linkconnectionscontext",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>linkMapContext</code>",id:"linkmapcontext",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>typeTag</code>",id:"typetag",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>builder</code>",id:"builder",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"<code>empty</code>",id:"empty",level:3},{value:"Definition",id:"definition-6",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"<code>from</code>",id:"from",level:3},{value:"Definitions",id:"definitions",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"<code>of</code>",id:"of",level:3},{value:"Definition",id:"definition-7",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"<code>reducer</code>",id:"reducer",level:3},{value:"Definition",id:"definition-8",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-9",level:4}],v={toc:f},b="wrapper";function C(e){var a=e,{components:t}=a,r=u(a,["components"]);return(0,n.yg)(b,g(d(d({},v),r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",d({},{id:"interface-edgegraphbasecontextuntp"}),(0,n.yg)("inlineCode",{parentName:"h1"},"interface EdgeGraphBase.Context<UN,Tp>")),(0,n.yg)("p",null,"undocumented"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Extends:")," ",(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"GraphBase.Context<UN,Tp>"))),(0,n.yg)("h2",d({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"UN"),(0,n.yg)("td",d({parentName:"tr"},{align:null})),(0,n.yg)("td",d({parentName:"tr"},{align:null})),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"Tp"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/graph/custom/EdgeGraphBase/Types/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"EdgeGraphBase.Types"))),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/graph/custom/EdgeGraphBase/Types/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"EdgeGraphBase.Types"))),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"undocumented")))),(0,n.yg)("h2",d({},{id:"properties"}),"Properties"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"_fixedtype"}),(0,n.yg)("inlineCode",{parentName:"h3"},"_fixedType")),(0,n.yg)("p",null,"undocumented")),(0,n.yg)("h4",d({},{id:"definition"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"readonly _fixedType: UN;"))),(0,n.yg)("h4",d({},{id:"overrides"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Context/interface#_fixedType"}),"Context._fixedType"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"isdirected"}),(0,n.yg)("inlineCode",{parentName:"h3"},"isDirected")),(0,n.yg)("p",null,"undocumented")),(0,n.yg)("h4",d({},{id:"definition-1"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"readonly isDirected: false;"))),(0,n.yg)("h4",d({},{id:"overrides-1"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Context/interface#isDirected"}),"Context.isDirected"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"linkconnectionscontext"}),(0,n.yg)("inlineCode",{parentName:"h3"},"linkConnectionsContext")),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"context")," instance used to create internal connection collections")),(0,n.yg)("h4",d({},{id:"definition-2"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"readonly linkConnectionsContext: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, UN, unknown>['linkConnectionsContext'];"))),(0,n.yg)("h4",d({},{id:"overrides-2"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Context/interface#linkConnectionsContext"}),"Context.linkConnectionsContext"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"linkmapcontext"}),(0,n.yg)("inlineCode",{parentName:"h3"},"linkMapContext")),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"context")," instance used to create internal link maps")),(0,n.yg)("h4",d({},{id:"definition-3"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"readonly linkMapContext: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, UN, unknown>['linkMapContext'];"))),(0,n.yg)("h4",d({},{id:"overrides-3"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Context/interface#linkMapContext"}),"Context.linkMapContext"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"typetag"}),(0,n.yg)("inlineCode",{parentName:"h3"},"typeTag")),(0,n.yg)("p",null,"A string tag defining the specific collection type")),(0,n.yg)("h4",d({},{id:"definition-4"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"readonly typeTag: string;"))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"ArrowGraphHashed.defaultContext().typeTag   // => 'ArrowGraphHashed'\n"))),(0,n.yg)("h4",d({},{id:"overrides-4"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Context/interface#typeTag"}),"Context.typeTag"))),(0,n.yg)("h2",d({},{id:"methods"}),"Methods"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"builder"}),(0,n.yg)("inlineCode",{parentName:"h3"},"builder")),(0,n.yg)("p",null,"Returns an empty builder instance.")),(0,n.yg)("h4",d({},{id:"definition-5"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"builder<N extends UN>(): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, N, unknown>['builder'];"))),(0,n.yg)("h4",d({},{id:"type-parameters-1"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"N"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UN")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"ArrowValuedGraphHashed.builder<number, string>()    // => ArrowValuedGraphHashed.Builder<number, string>\n"))),(0,n.yg)("h4",d({},{id:"overrides-5"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Factory/interface#builder"}),"Factory.builder"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"empty"}),(0,n.yg)("inlineCode",{parentName:"h3"},"empty")),(0,n.yg)("p",null,"Returns the (singleton) empty instance of this type and context with given key and value types.")),(0,n.yg)("h4",d({},{id:"definition-6"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"empty<N extends UN>(): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, N, unknown>['normal'];"))),(0,n.yg)("h4",d({},{id:"type-parameters-2"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"N"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UN")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"ArrowGraphHashed.empty<number>()    // => ArrowGraphHashed<number>\nArrowGraphHashed.empty<string>()    // => ArrowGraphHashed<string>\n"))),(0,n.yg)("h4",d({},{id:"overrides-6"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Factory/interface#empty"}),"Factory.empty"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"from"}),(0,n.yg)("inlineCode",{parentName:"h3"},"from")),(0,n.yg)("p",null,"Returns an immutable valued Graph, containing the graph elements from each of the given ",(0,n.yg)("inlineCode",{parentName:"p"},"sources"),".")),(0,n.yg)("h4",d({},{id:"definitions"}),"Definitions"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"from<N extends UN>(...sources: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<GraphElement<N>>>): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, N, unknown>['nonEmpty'];"))),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"from<N extends UN>(...sources: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"p"},"<GraphElement<N>>>): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, N, unknown>['normal'];"))),(0,n.yg)("h4",d({},{id:"type-parameters-3"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"N"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UN")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",d({},{id:"parameters"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"sources")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<"),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<GraphElement<N>>>")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"an array of ",(0,n.yg)("inlineCode",{parentName:"td"},"StreamSource")," instances containing graph elements to add")))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"ArrowGraphHashed.from([[1], [2]], [[3, 4]])  // => ArrowGraphHashed.NonEmpty<number>\n"))),(0,n.yg)("h4",d({},{id:"overrides-7"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Factory/interface#from"}),"Factory.from"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"of"}),(0,n.yg)("inlineCode",{parentName:"h3"},"of")),(0,n.yg)("p",null,"Returns an immutable valued Graph instance containing the graph elements from the given ",(0,n.yg)("inlineCode",{parentName:"p"},"graphElements"),".")),(0,n.yg)("h4",d({},{id:"definition-7"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"of<N extends UN>(...graphElements: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<GraphElement<N>>): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, N, unknown>['nonEmpty'];"))),(0,n.yg)("h4",d({},{id:"type-parameters-4"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"N"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UN")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",d({},{id:"parameters-1"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"graphElements")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<GraphElement<N>>")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"a non-empty array of graph elements that are either a single tuple containing a node, or a triplet containing two connection nodes and the connection value.")))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"ArrowGraphHashed.of([1], [2], [3, 4]) // => ArrowGraphHashed.NonEmpty<number>\n"))),(0,n.yg)("h4",d({},{id:"overrides-8"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Factory/interface#of"}),"Factory.of"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"reducer"}),(0,n.yg)("inlineCode",{parentName:"h3"},"reducer")),(0,n.yg)("p",null,"Returns a ",(0,n.yg)("inlineCode",{parentName:"p"},"Reducer")," that adds received graph elements to a Graph and returns the Graph as a result. When a ",(0,n.yg)("inlineCode",{parentName:"p"},"source")," is given, the reducer will first create a graph from the source, and then add graph elements to it.")),(0,n.yg)("h4",d({},{id:"definition-8"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"reducer<N extends UN>(source?: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<GraphElement<N>>): Reducer<GraphElement<N>, "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, N, unknown>['normal']>;"))),(0,n.yg)("h4",d({},{id:"type-parameters-5"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"N"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UN")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",d({},{id:"parameters-2"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"source")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<GraphElement<N>>")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"(optional) an initial source of graph elements to add to")))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"const someSource: GraphElement<number>[] = [[1, 2], [3], [5]];\nconst result = Stream.of([1, 3], [4, 3]).reduce(ArrowGraphSorted.reducer(someSource))\nresult.toArray()   // => [[1, 2], [1, 3], [4, 3], [5]]\n"))),(0,n.yg)("admonition",d({},{title:"note",type:"note"}),(0,n.yg)("p",{parentName:"admonition"},"uses a builder under the hood. If the given ",(0,n.yg)("inlineCode",{parentName:"p"},"source")," is a Graph in the same context, it will directly call ",(0,n.yg)("inlineCode",{parentName:"p"},".toBuilder()"),".")),(0,n.yg)("h4",d({},{id:"overrides-9"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Factory/interface#reducer"}),"Factory.reducer"))))}C.isMDXComponent=!0}}]);