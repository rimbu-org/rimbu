"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[90773],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),u=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=u(a),b=n,d=c["".concat(p,".").concat(b)]||c[b]||s[b]||o;return a?r.createElement(d,l(l({ref:t},m),{},{components:a})):r.createElement(d,l({ref:t},m))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=b;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}b.displayName="MDXCreateElement"},97802:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>f,default:()=>C,frontMatter:()=>d,metadata:()=>y,toc:()=>k});var r=a(3905),n=Object.defineProperty,o=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,c=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&m(e,a,t[a]);if(i)for(var a of i(t))u.call(t,a)&&m(e,a,t[a]);return e},s=(e,t)=>o(e,l(t)),b=(e,t)=>{var a={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&i)for(var r of i(e))t.indexOf(r)<0&&u.call(e,r)&&(a[r]=e[r]);return a};const d={title:"SortedTableHashColumn<R,C,V>",slug:"/rimbu/table/SortedTableHashColumn/interface"},f="interface SortedTableHashColumn<R,C,V>",y={unversionedId:"rimbu_table/SortedTableHashColumn.interface",id:"rimbu_table/SortedTableHashColumn.interface",title:"SortedTableHashColumn<R,C,V>",description:"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the SortedTableHashColumn API documentation",source:"@site/api/rimbu_table/SortedTableHashColumn.interface.mdx",sourceDirName:"rimbu_table",slug:"/rimbu/table/SortedTableHashColumn/interface",permalink:"/api/rimbu/table/SortedTableHashColumn/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"SortedTableHashColumn<R,C,V>",slug:"/rimbu/table/SortedTableHashColumn/interface"},sidebar:"defaultSidebar",previous:{title:"SortedTableHashColumn.Types",permalink:"/api/rimbu/table/SortedTableHashColumn/Types/interface"},next:{title:"SortedTableSortedColumn (namespace)",permalink:"/api/rimbu/table/SortedTableSortedColumn/namespace"}},h={},k=[{value:"Type parameters",id:"type-parameters",level:2}],T={toc:k},v="wrapper";function C(e){var t=e,{components:a}=t,n=b(t,["components"]);return(0,r.kt)(v,s(c(c({},T),n),{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",c({},{id:"interface-sortedtablehashcolumnrcv"}),(0,r.kt)("inlineCode",{parentName:"h1"},"interface SortedTableHashColumn<R,C,V>")),(0,r.kt)("p",null,"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,r.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,r.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/api/rimbu/table/sorted-row/SortedTableHashColumn/interface"}),"SortedTableHashColumn API documentation"),"  "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Companion namespace:")," ",(0,r.kt)("a",c({parentName:"p"},{href:"/api/rimbu/table/SortedTableHashColumn/namespace"}),"SortedTableHashColumn")),(0,r.kt)("h2",c({},{id:"type-parameters"}),"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"R"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"the row key type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"C"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"the column key type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"V"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"the value type")))),(0,r.kt)("admonition",c({},{title:"note",type:"note"}),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"The SortedTableHashColumn uses a SortedMap to map row keys to column. - The SortedTableHashColumn uses HashMaps to map column keys to values."))),(0,r.kt)("admonition",c({},{title:"example",type:"note"}),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",c({parentName:"pre"},{className:"language-ts"}),"const t1 = SortedTableHashColumn.empty<number, string, boolean>()\nconst t2 = SortedTableHashColumn.of([1, 'a', true], [2, 'a', false])\n"))))}C.isMDXComponent=!0}}]);