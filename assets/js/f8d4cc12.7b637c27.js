"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[18056],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),l=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),c=l(r),m=n,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return r?a.createElement(h,o(o({ref:t},p),{},{components:r})):a.createElement(h,o({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d[c]="string"==typeof e?e:n,o[1]=d;for(var l=2;l<i;l++)o[l]=r[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},91206:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>O,contentTitle:()=>f,default:()=>S,frontMatter:()=>h,metadata:()=>k,toc:()=>y});var a=r(3905),n=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,p=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,c=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&p(e,r,t[r]);if(d)for(var r of d(t))l.call(t,r)&&p(e,r,t[r]);return e},u=(e,t)=>i(e,o(t)),m=(e,t)=>{var r={};for(var a in e)s.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&d)for(var a of d(e))t.indexOf(a)<0&&l.call(e,a)&&(r[a]=e[a]);return r};const h={title:"OrderedHashSet<T>",slug:"/rimbu/ordered/set/OrderedHashSet/interface"},f="interface OrderedHashSet<T>",k={unversionedId:"rimbu_ordered/set/OrderedHashSet.interface",id:"rimbu_ordered/set/OrderedHashSet.interface",title:"OrderedHashSet<T>",description:"A type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedHashSet API documentation",source:"@site/api/rimbu_ordered/set/OrderedHashSet.interface.mdx",sourceDirName:"rimbu_ordered/set",slug:"/rimbu/ordered/set/OrderedHashSet/interface",permalink:"/api/rimbu/ordered/set/OrderedHashSet/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"OrderedHashSet<T>",slug:"/rimbu/ordered/set/OrderedHashSet/interface"},sidebar:"defaultSidebar",previous:{title:"OrderedHashSet.Types",permalink:"/api/rimbu/ordered/set/OrderedHashSet/Types/interface"},next:{title:"OrderedSet (namespace)",permalink:"/api/rimbu/ordered/set/OrderedSet/namespace"}},O={},y=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>order</code>",id:"order",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>sourceSet</code>",id:"sourceset",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Overrides",id:"overrides-1",level:4}],b={toc:y},v="wrapper";function S(e){var t=e,{components:r}=t,n=m(t,["components"]);return(0,a.kt)(v,u(c(c({},b),n),{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",c({},{id:"interface-orderedhashsett"}),(0,a.kt)("inlineCode",{parentName:"h1"},"interface OrderedHashSet<T>")),(0,a.kt)("p",null,"A type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the ",(0,a.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,a.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/api/rimbu/ordered/set/OrderedHashSet/interface"}),"OrderedHashSet API documentation")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Companion namespace:")," ",(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/ordered/set/OrderedHashSet/namespace"}),"OrderedHashSet")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Extends:")," ",(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/ordered/set-custom/OrderedSetBase/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"OrderedSetBase<T,Tp>"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Implemented by:")," ",(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/ordered/set/OrderedHashSet/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"OrderedHashSet.NonEmpty<T>"))),(0,a.kt)("h2",c({},{id:"type-parameters"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",c({parentName:"tr"},{align:null}),"T"),(0,a.kt)("td",c({parentName:"tr"},{align:null}),"the value type")))),(0,a.kt)("admonition",c({},{title:"note",type:"note"}),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"The OrderedHashSet keeps the insertion order of values, thus iterators and stream will also reflect this order. - The OrderedHashSet wraps around a HashSet instance, thus has the same time complexity as the HashSet. - The OrderedHashSet keeps the key insertion order in a List, thus its space complexity is higher than a regular HashSet."))),(0,a.kt)("admonition",c({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",c({parentName:"pre"},{className:"language-ts"}),"const s1 = OrderedHashSet.empty<string>()\nconst s2 = OrderedHashSet.of('a', 'b', 'c')\n"))),(0,a.kt)("h2",c({},{id:"properties"}),"Properties"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",c({},{id:"order"}),(0,a.kt)("inlineCode",{parentName:"h3"},"order")),(0,a.kt)("p",null,"Returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"List")," instance containing the order of the elements.")),(0,a.kt)("h4",c({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly order: List<T>;"))),(0,a.kt)("admonition",c({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",c({parentName:"pre"},{className:"language-ts"}),"const s = OrderedHashSet.of('b', 'a', 'c')\nconsole.log(s.order.toArray())\n// => ['b', 'a', 'c']\n"))),(0,a.kt)("h4",c({},{id:"overrides"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/ordered/set-custom/OrderedSetBase/interface#order"}),"OrderedSetBase.order"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",c({},{id:"sourceset"}),(0,a.kt)("inlineCode",{parentName:"h3"},"sourceSet")),(0,a.kt)("p",null,"Returns the contained ",(0,a.kt)("inlineCode",{parentName:"p"},"Set")," instance.")),(0,a.kt)("h4",c({},{id:"definition-1"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly sourceSet: "),(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/WithElem/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"WithElem")),(0,a.kt)("inlineCode",{parentName:"p"},"<Tp, T>['sourceSet'];"))),(0,a.kt)("admonition",c({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",c({parentName:"pre"},{className:"language-ts"}),"const s = OrderedHashSet.of('b', 'a', 'c')\nconsole.log(m.sourceSet.toString())\n// => HashSet('a', 'b', 'c')\n"))),(0,a.kt)("h4",c({},{id:"overrides-1"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/ordered/set-custom/OrderedSetBase/interface#sourceSet"}),"OrderedSetBase.sourceSet"))))}S.isMDXComponent=!0}}]);