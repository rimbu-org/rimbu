"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[47470],{15680:(e,a,t)=>{t.d(a,{xA:()=>m,yg:()=>s});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),d=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},m=function(e){var a=d(e.components);return n.createElement(o.Provider,{value:a},e.children)},g="mdxType",y={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),g=d(t),u=r,s=g["".concat(o,".").concat(u)]||g[u]||y[u]||i;return t?n.createElement(s,l(l({ref:a},m),{},{components:t})):n.createElement(s,l({ref:a},m))}));function s(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=u;var p={};for(var o in a)hasOwnProperty.call(a,o)&&(p[o]=a[o]);p.originalType=e,p[g]="string"==typeof e?e:r,l[1]=p;for(var d=2;d<i;d++)l[d]=t[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},52591:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>h,default:()=>C,frontMatter:()=>s,metadata:()=>N,toc:()=>f});var n=t(15680),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,m=(e,a,t)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,g=(e,a)=>{for(var t in a||(a={}))o.call(a,t)&&m(e,t,a[t]);if(p)for(var t of p(a))d.call(a,t)&&m(e,t,a[t]);return e},y=(e,a)=>i(e,l(a)),u=(e,a)=>{var t={};for(var n in e)o.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&p)for(var n of p(e))a.indexOf(n)<0&&d.call(e,n)&&(t[n]=e[n]);return t};const s={title:"EdgeGraphSorted (namespace)",slug:"/rimbu/graph/EdgeGraphSorted/namespace"},h="namespace EdgeGraphSorted",N={unversionedId:"rimbu_graph/EdgeGraphSorted/index",id:"rimbu_graph/EdgeGraphSorted/index",title:"EdgeGraphSorted (namespace)",description:"An type-invariant immutable valued edge (undirected) graph. The connections are internally maintained using sorted collections See the Graph documentation and the EdgeGraphSorted API documentation",source:"@site/api/rimbu_graph/EdgeGraphSorted/index.mdx",sourceDirName:"rimbu_graph/EdgeGraphSorted",slug:"/rimbu/graph/EdgeGraphSorted/namespace",permalink:"/api/rimbu/graph/EdgeGraphSorted/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"EdgeGraphSorted (namespace)",slug:"/rimbu/graph/EdgeGraphSorted/namespace"},sidebar:"defaultSidebar",previous:{title:"EdgeGraphHashed<N>",permalink:"/api/rimbu/graph/EdgeGraphHashed/interface"},next:{title:"EdgeGraphSorted.Builder<N>",permalink:"/api/rimbu/graph/EdgeGraphSorted/Builder/interface"}},c={},f=[{value:"Interfaces",id:"interfaces",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>builder</code>",id:"builder",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>createContext</code>",id:"createcontext",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>defaultContext</code>",id:"defaultcontext",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"<code>empty</code>",id:"empty",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>from</code>",id:"from",level:3},{value:"Definitions",id:"definitions",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>of</code>",id:"of",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>reducer</code>",id:"reducer",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-4",level:4}],b={toc:f},v="wrapper";function C(e){var a=e,{components:t}=a,r=u(a,["components"]);return(0,n.yg)(v,y(g(g({},b),r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",g({},{id:"namespace-edgegraphsorted"}),(0,n.yg)("inlineCode",{parentName:"h1"},"namespace EdgeGraphSorted")),(0,n.yg)("p",null,"An type-invariant immutable valued edge (undirected) graph. The connections are internally maintained using sorted collections See the ",(0,n.yg)("a",g({parentName:"p"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,n.yg)("a",g({parentName:"p"},{href:"https://rimbu.org/api/rimbu/graph/EdgeGraphSorted/interface"}),"EdgeGraphSorted API documentation")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Companion interface:")," ",(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/EdgeGraphSorted/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"EdgeGraphSorted<N>"))),(0,n.yg)("h2",g({},{id:"interfaces"}),"Interfaces"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("a",g({parentName:"td"},{href:"/api/rimbu/graph/EdgeGraphSorted/Builder/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"EdgeGraphSorted.Builder<N>"))),(0,n.yg)("td",g({parentName:"tr"},{align:null}),"A mutable ",(0,n.yg)("inlineCode",{parentName:"td"},"EdgeGraphSorted")," builder used to efficiently create new immutable instances. See the ",(0,n.yg)("a",g({parentName:"td"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,n.yg)("a",g({parentName:"td"},{href:"https://rimbu.org/api/rimbu/graph/EdgeGraphSorted/Builder/interface"}),"EdgeGraphSorted.Builder API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("a",g({parentName:"td"},{href:"/api/rimbu/graph/EdgeGraphSorted/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"EdgeGraphSorted.Context<UN>"))),(0,n.yg)("td",g({parentName:"tr"},{align:null}),"The EdgeGraphSorted's Context instance that serves as a factory for all related immutable instances and builders.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("a",g({parentName:"td"},{href:"/api/rimbu/graph/EdgeGraphSorted/NonEmpty/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"EdgeGraphSorted.NonEmpty<N>"))),(0,n.yg)("td",g({parentName:"tr"},{align:null}),"A non-empty type-invariant immutable valued edge (undirected) graph. The connections are internally maintained using sorted collections See the ",(0,n.yg)("a",g({parentName:"td"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,n.yg)("a",g({parentName:"td"},{href:"https://rimbu.org/api/rimbu/graph/EdgeGraphSorted/interface"}),"EdgeGraphSorted API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("a",g({parentName:"td"},{href:"/api/rimbu/graph/EdgeGraphSorted/Types/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"EdgeGraphSorted.Types"))),(0,n.yg)("td",g({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))),(0,n.yg)("h2",g({},{id:"static-methods"}),"Static Methods"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",g({},{id:"builder"}),(0,n.yg)("inlineCode",{parentName:"h3"},"builder")),(0,n.yg)("p",null,"Returns an empty builder instance.")),(0,n.yg)("h4",g({},{id:"definition"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"builder<N extends UN>(): "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, N, unknown>['builder'];"))),(0,n.yg)("h4",g({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),"N"),(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UN")),(0,n.yg)("td",g({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",g({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",g({parentName:"pre"},{className:"language-ts"}),"ArrowValuedGraphHashed.builder<number, string>()    // => ArrowValuedGraphHashed.Builder<number, string>\n"))),(0,n.yg)("h4",g({},{id:"overrides"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Factory/interface#builder"}),"Factory.builder"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",g({},{id:"createcontext"}),(0,n.yg)("inlineCode",{parentName:"h3"},"createContext")),(0,n.yg)("p",null,"Returns a new EdgeGraphSorted context instance based on the given ",(0,n.yg)("inlineCode",{parentName:"p"},"options"),".")),(0,n.yg)("h4",g({},{id:"definition-1"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"createContext<UN>(options?: {"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"linkMapContext?: "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/sorted/map/SortedMap/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedMap.Context")),(0,n.yg)("inlineCode",{parentName:"p"},"<UN>;"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"linkConnectionsContext?: "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedSet.Context")),(0,n.yg)("inlineCode",{parentName:"p"},"<UN>;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"}): EdgeGraphSorted.Context<UN>;"))),(0,n.yg)("h4",g({},{id:"type-parameters-1"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),"UN"),(0,n.yg)("td",g({parentName:"tr"},{align:null}),"the upper node type for which the context can create instances")))),(0,n.yg)("h4",g({},{id:"parameters"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"options")),(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"{"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"linkMapContext?: "),(0,n.yg)("a",g({parentName:"td"},{href:"/api/rimbu/sorted/map/SortedMap/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedMap.Context")),(0,n.yg)("inlineCode",{parentName:"td"},"<UN>;"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"linkConnectionsContext?: "),(0,n.yg)("a",g({parentName:"td"},{href:"/api/rimbu/sorted/SortedSet/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedSet.Context")),(0,n.yg)("inlineCode",{parentName:"td"},"<UN>;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"}")),(0,n.yg)("td",g({parentName:"tr"},{align:null}),"(optional) an object containing the following properties:",(0,n.yg)("br",null)," - linkMapContext: (optional) the map context to use to maintain link maps",(0,n.yg)("br",null)," - linkConnectionsContext: (optional) the set context to use to maintain link connections"))))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",g({},{id:"defaultcontext"}),(0,n.yg)("inlineCode",{parentName:"h3"},"defaultContext")),(0,n.yg)("p",null,"Returns the default context for this type of graph.")),(0,n.yg)("h4",g({},{id:"definition-2"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"defaultContext<UN>(): EdgeGraphSorted.Context<UN>;"))),(0,n.yg)("h4",g({},{id:"type-parameters-2"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),"UN"),(0,n.yg)("td",g({parentName:"tr"},{align:null}),"the upper node type that the context should accept"))))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",g({},{id:"empty"}),(0,n.yg)("inlineCode",{parentName:"h3"},"empty")),(0,n.yg)("p",null,"Returns the (singleton) empty instance of this type and context with given key and value types.")),(0,n.yg)("h4",g({},{id:"definition-3"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"empty<N extends UN>(): "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, N, unknown>['normal'];"))),(0,n.yg)("h4",g({},{id:"type-parameters-3"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),"N"),(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UN")),(0,n.yg)("td",g({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",g({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",g({parentName:"pre"},{className:"language-ts"}),"ArrowGraphHashed.empty<number>()    // => ArrowGraphHashed<number>\nArrowGraphHashed.empty<string>()    // => ArrowGraphHashed<string>\n"))),(0,n.yg)("h4",g({},{id:"overrides-1"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Factory/interface#empty"}),"Factory.empty"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",g({},{id:"from"}),(0,n.yg)("inlineCode",{parentName:"h3"},"from")),(0,n.yg)("p",null,"Returns an immutable valued Graph, containing the graph elements from each of the given ",(0,n.yg)("inlineCode",{parentName:"p"},"sources"),".")),(0,n.yg)("h4",g({},{id:"definitions"}),"Definitions"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"from<N extends UN>(...sources: "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<GraphElement<N>>>): "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, N, unknown>['nonEmpty'];"))),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"from<N extends UN>(...sources: "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"p"},"<GraphElement<N>>>): "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, N, unknown>['normal'];"))),(0,n.yg)("h4",g({},{id:"type-parameters-4"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),"N"),(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UN")),(0,n.yg)("td",g({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",g({},{id:"parameters-1"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"sources")),(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("a",g({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<"),(0,n.yg)("a",g({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<GraphElement<N>>>")),(0,n.yg)("td",g({parentName:"tr"},{align:null}),"an array of ",(0,n.yg)("inlineCode",{parentName:"td"},"StreamSource")," instances containing graph elements to add")))),(0,n.yg)("admonition",g({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",g({parentName:"pre"},{className:"language-ts"}),"ArrowGraphHashed.from([[1], [2]], [[3, 4]])  // => ArrowGraphHashed.NonEmpty<number>\n"))),(0,n.yg)("h4",g({},{id:"overrides-2"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Factory/interface#from"}),"Factory.from"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",g({},{id:"of"}),(0,n.yg)("inlineCode",{parentName:"h3"},"of")),(0,n.yg)("p",null,"Returns an immutable valued Graph instance containing the graph elements from the given ",(0,n.yg)("inlineCode",{parentName:"p"},"graphElements"),".")),(0,n.yg)("h4",g({},{id:"definition-4"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"of<N extends UN>(...graphElements: "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<GraphElement<N>>): "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, N, unknown>['nonEmpty'];"))),(0,n.yg)("h4",g({},{id:"type-parameters-5"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),"N"),(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UN")),(0,n.yg)("td",g({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",g({},{id:"parameters-2"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"graphElements")),(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("a",g({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<GraphElement<N>>")),(0,n.yg)("td",g({parentName:"tr"},{align:null}),"a non-empty array of graph elements that are either a single tuple containing a node, or a triplet containing two connection nodes and the connection value.")))),(0,n.yg)("admonition",g({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",g({parentName:"pre"},{className:"language-ts"}),"ArrowGraphHashed.of([1], [2], [3, 4]) // => ArrowGraphHashed.NonEmpty<number>\n"))),(0,n.yg)("h4",g({},{id:"overrides-3"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Factory/interface#of"}),"Factory.of"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",g({},{id:"reducer"}),(0,n.yg)("inlineCode",{parentName:"h3"},"reducer")),(0,n.yg)("p",null,"Returns a ",(0,n.yg)("inlineCode",{parentName:"p"},"Reducer")," that adds received graph elements to a Graph and returns the Graph as a result. When a ",(0,n.yg)("inlineCode",{parentName:"p"},"source")," is given, the reducer will first create a graph from the source, and then add graph elements to it.")),(0,n.yg)("h4",g({},{id:"definition-5"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"reducer<N extends UN>(source?: "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<GraphElement<N>>): Reducer<GraphElement<N>, "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, N, unknown>['normal']>;"))),(0,n.yg)("h4",g({},{id:"type-parameters-6"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),"N"),(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UN")),(0,n.yg)("td",g({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",g({},{id:"parameters-3"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"source")),(0,n.yg)("td",g({parentName:"tr"},{align:null}),(0,n.yg)("a",g({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<GraphElement<N>>")),(0,n.yg)("td",g({parentName:"tr"},{align:null}),"(optional) an initial source of graph elements to add to")))),(0,n.yg)("admonition",g({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",g({parentName:"pre"},{className:"language-ts"}),"const someSource: GraphElement<number>[] = [[1, 2], [3], [5]];\nconst result = Stream.of([1, 3], [4, 3]).reduce(ArrowGraphSorted.reducer(someSource))\nresult.toArray()   // => [[1, 2], [1, 3], [4, 3], [5]]\n"))),(0,n.yg)("admonition",g({},{title:"note",type:"note"}),(0,n.yg)("p",{parentName:"admonition"},"uses a builder under the hood. If the given ",(0,n.yg)("inlineCode",{parentName:"p"},"source")," is a Graph in the same context, it will directly call ",(0,n.yg)("inlineCode",{parentName:"p"},".toBuilder()"),".")),(0,n.yg)("h4",g({},{id:"overrides-4"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphBase/Factory/interface#reducer"}),"Factory.reducer"))))}C.isMDXComponent=!0}}]);