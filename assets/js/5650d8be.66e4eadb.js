"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[31310],{15680:(e,r,t)=>{t.d(r,{xA:()=>m,yg:()=>f});var n=t(96540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),y=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},m=function(e){var r=y(e.components);return n.createElement(i.Provider,{value:r},e.children)},s="mdxType",l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),s=y(t),u=o,f=s["".concat(i,".").concat(u)]||s[u]||l[u]||a;return t?n.createElement(f,p(p({ref:r},m),{},{components:t})):n.createElement(f,p({ref:r},m))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,p=new Array(a);p[0]=u;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c[s]="string"==typeof e?e:o,p[1]=c;for(var y=2;y<a;y++)p[y]=t[y];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},26488:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>g,contentTitle:()=>b,default:()=>E,frontMatter:()=>f,metadata:()=>d,toc:()=>O});var n=t(15680),o=Object.defineProperty,a=Object.defineProperties,p=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable,m=(e,r,t)=>r in e?o(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,s=(e,r)=>{for(var t in r||(r={}))i.call(r,t)&&m(e,t,r[t]);if(c)for(var t of c(r))y.call(r,t)&&m(e,t,r[t]);return e},l=(e,r)=>a(e,p(r)),u=(e,r)=>{var t={};for(var n in e)i.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&c)for(var n of c(e))r.indexOf(n)<0&&y.call(e,n)&&(t[n]=e[n]);return t};const f={title:"AcceptNonEmpty",slug:"/rimbu/stream/AsyncTransformer/AcceptNonEmpty/type"},b="type AcceptNonEmpty<T,R>",d={unversionedId:"rimbu_stream/AsyncTransformer/AcceptNonEmpty.type",id:"rimbu_stream/AsyncTransformer/AcceptNonEmpty.type",title:"AcceptNonEmpty",description:"Convenience type to allow non-empty synchronous transformers to be supplied to functions that accept non-empty async transformers.",source:"@site/api/rimbu_stream/AsyncTransformer/AcceptNonEmpty.type.mdx",sourceDirName:"rimbu_stream/AsyncTransformer",slug:"/rimbu/stream/AsyncTransformer/AcceptNonEmpty/type",permalink:"/api/rimbu/stream/AsyncTransformer/AcceptNonEmpty/type",draft:!1,tags:[],version:"current",frontMatter:{title:"AcceptNonEmpty",slug:"/rimbu/stream/AsyncTransformer/AcceptNonEmpty/type"},sidebar:"defaultSidebar",previous:{title:"Accept",permalink:"/api/rimbu/stream/AsyncTransformer/Accept/type"},next:{title:"NonEmpty",permalink:"/api/rimbu/stream/AsyncTransformer/NonEmpty/type"}},g={},O=[{value:"Definition",id:"definition",level:2}],v={toc:O},N="wrapper";function E(e){var r=e,{components:t}=r,o=u(r,["components"]);return(0,n.yg)(N,l(s(s({},v),o),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",s({},{id:"type-acceptnonemptytr"}),(0,n.yg)("inlineCode",{parentName:"h1"},"type AcceptNonEmpty<T,R>")),(0,n.yg)("p",null,"Convenience type to allow non-empty synchronous transformers to be supplied to functions that accept non-empty async transformers."),(0,n.yg)("h2",s({},{id:"definition"}),"Definition"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"type AcceptNonEmpty<T, R> = "),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncTransformer/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"AsyncTransformer.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<T, R> "),(0,n.yg)("code",null,"|"),(0,n.yg)("inlineCode",{parentName:"p"}," "),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/stream/Transformer/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Transformer.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<T, R>;")))}E.isMDXComponent=!0}}]);