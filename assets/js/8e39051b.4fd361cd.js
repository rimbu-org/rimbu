"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[73338],{15680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>s});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),c=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},b="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),b=c(a),m=n,s=b["".concat(p,".").concat(m)]||b[m]||y[m]||i;return a?r.createElement(s,l(l({ref:t},u),{},{components:a})):r.createElement(s,l({ref:t},u))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[b]="string"==typeof e?e:n,l[1]=o;for(var c=2;c<i;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},48768:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>f,default:()=>O,frontMatter:()=>s,metadata:()=>d,toc:()=>v});var r=a(15680),n=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,b=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&u(e,a,t[a]);if(o)for(var a of o(t))c.call(t,a)&&u(e,a,t[a]);return e},y=(e,t)=>i(e,l(t)),m=(e,t)=>{var a={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&o)for(var r of o(e))t.indexOf(r)<0&&c.call(e,r)&&(a[r]=e[r]);return a};const s={title:"VariantTable<R,C,V>",slug:"/rimbu/table/VariantTable/interface"},f="interface VariantTable<R,C,V>",d={unversionedId:"rimbu_table/VariantTable.interface",id:"rimbu_table/VariantTable.interface",title:"VariantTable<R,C,V>",description:"A type-variant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the VariantTable API documentation",source:"@site/api/rimbu_table/VariantTable.interface.mdx",sourceDirName:"rimbu_table",slug:"/rimbu/table/VariantTable/interface",permalink:"/api/rimbu/table/VariantTable/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"VariantTable<R,C,V>",slug:"/rimbu/table/VariantTable/interface"},sidebar:"defaultSidebar",previous:{title:"VariantTable.Types",permalink:"/api/rimbu/table/VariantTable/Types/interface"},next:{title:"@rimbu/table/custom",permalink:"/api/rimbu/table/custom"}},g={},v=[{value:"Type parameters",id:"type-parameters",level:2}],h={toc:v},T="wrapper";function O(e){var t=e,{components:a}=t,n=m(t,["components"]);return(0,r.yg)(T,y(b(b({},h),n),{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",b({},{id:"interface-varianttablercv"}),(0,r.yg)("inlineCode",{parentName:"h1"},"interface VariantTable<R,C,V>")),(0,r.yg)("p",null,"A type-variant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,r.yg)("a",b({parentName:"p"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,r.yg)("a",b({parentName:"p"},{href:"https://rimbu.org/api/rimbu/table/VariantTable/interface"}),"VariantTable API documentation")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Companion namespace:")," ",(0,r.yg)("a",b({parentName:"p"},{href:"/api/rimbu/table/VariantTable/namespace"}),"VariantTable")),(0,r.yg)("h2",b({},{id:"type-parameters"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",b({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",b({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",b({parentName:"tr"},{align:null}),"R"),(0,r.yg)("td",b({parentName:"tr"},{align:null}),"the row key type")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",b({parentName:"tr"},{align:null}),"C"),(0,r.yg)("td",b({parentName:"tr"},{align:null}),"the column key type")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",b({parentName:"tr"},{align:null}),"V"),(0,r.yg)("td",b({parentName:"tr"},{align:null}),"the value type")))),(0,r.yg)("admonition",b({},{title:"note",type:"note"}),(0,r.yg)("p",{parentName:"admonition"},"Type-variance means that both the key and value types can be widened in a type-safe way without casting.  @note As a consequence of being variant, the type does not contain methods that (can) add new elements to the collection.")))}O.isMDXComponent=!0}}]);