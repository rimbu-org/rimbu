"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[97296],{15680:(e,r,t)=>{t.d(r,{xA:()=>y,yg:()=>u});var n=t(96540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function p(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?p(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),m=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},y=function(e){var r=m(e.components);return n.createElement(l.Provider,{value:r},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,p=e.originalType,l=e.parentName,y=o(e,["components","mdxType","originalType","parentName"]),g=m(t),d=a,u=g["".concat(l,".").concat(d)]||g[d]||c[d]||p;return t?n.createElement(u,i(i({ref:r},y),{},{components:t})):n.createElement(u,i({ref:r},y))}));function u(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var p=t.length,i=new Array(p);i[0]=d;var o={};for(var l in r)hasOwnProperty.call(r,l)&&(o[l]=r[l]);o.originalType=e,o[g]="string"==typeof e?e:a,i[1]=o;for(var m=2;m<p;m++)i[m]=t[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},82005:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>h,contentTitle:()=>s,default:()=>v,frontMatter:()=>u,metadata:()=>f,toc:()=>b});var n=t(15680),a=Object.defineProperty,p=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,y=(e,r,t)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,g=(e,r)=>{for(var t in r||(r={}))l.call(r,t)&&y(e,t,r[t]);if(o)for(var t of o(r))m.call(r,t)&&y(e,t,r[t]);return e},c=(e,r)=>p(e,i(r)),d=(e,r)=>{var t={};for(var n in e)l.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&o)for(var n of o(e))r.indexOf(n)<0&&m.call(e,n)&&(t[n]=e[n]);return t};const u={title:"EdgeGraph.NonEmpty<N>",slug:"/rimbu/graph/EdgeGraph/NonEmpty/interface"},s="interface EdgeGraph.NonEmpty<N>",f={unversionedId:"rimbu_graph/EdgeGraph/NonEmpty.interface",id:"rimbu_graph/EdgeGraph/NonEmpty.interface",title:"EdgeGraph.NonEmpty<N>",description:"A non-empty type-invariant immutable edge (undirected) graph.",source:"@site/api/rimbu_graph/EdgeGraph/NonEmpty.interface.mdx",sourceDirName:"rimbu_graph/EdgeGraph",slug:"/rimbu/graph/EdgeGraph/NonEmpty/interface",permalink:"/api/rimbu/graph/EdgeGraph/NonEmpty/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"EdgeGraph.NonEmpty<N>",slug:"/rimbu/graph/EdgeGraph/NonEmpty/interface"},sidebar:"defaultSidebar",previous:{title:"EdgeGraph.Context<UN>",permalink:"/api/rimbu/graph/EdgeGraph/Context/interface"},next:{title:"EdgeGraph.Types",permalink:"/api/rimbu/graph/EdgeGraph/Types/interface"}},h={},b=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4}],N={toc:b},E="wrapper";function v(e){var r=e,{components:t}=r,a=d(r,["components"]);return(0,n.yg)(E,c(g(g({},N),a),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",g({},{id:"interface-edgegraphnonemptyn"}),(0,n.yg)("inlineCode",{parentName:"h1"},"interface EdgeGraph.NonEmpty<N>")),(0,n.yg)("p",null,"A non-empty type-invariant immutable edge (undirected) graph."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Extends:")," ",(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"Streamable.NonEmpty<T>")),", ",(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/EdgeGraph/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"EdgeGraph<N>"))),(0,n.yg)("h2",g({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",g({parentName:"tr"},{align:null}),"N"),(0,n.yg)("td",g({parentName:"tr"},{align:null}),"the node type")))),(0,n.yg)("h2",g({},{id:"methods"}),"Methods"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",g({},{id:"stream"}),(0,n.yg)("inlineCode",{parentName:"h3"},"stream")),(0,n.yg)("p",null,"Returns a non-empty ",(0,n.yg)("inlineCode",{parentName:"p"},"Stream")," containing all graph elements of this collection as single tuples for isolated nodes and 2-valued tuples of nodes for connections. See the ",(0,n.yg)("a",g({parentName:"p"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,n.yg)("a",g({parentName:"p"},{href:"https://rimbu.org/api/rimbu/graph/EdgeGraph/interface"}),"EdgeGraph API documentation"))),(0,n.yg)("h4",g({},{id:"definition"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"stream(): "),(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<GraphElement<N>>;"))),(0,n.yg)("admonition",g({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",g({parentName:"pre"},{className:"language-ts"}),"EdgeGraphHashed.of([1], [2, 3]).stream().toArray()  // => [[1], [2, 3]]\n"))),(0,n.yg)("h4",g({},{id:"overrides"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",g({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface#stream"}),"NonEmpty.stream"))))}v.isMDXComponent=!0}}]);