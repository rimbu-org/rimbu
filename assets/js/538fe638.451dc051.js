"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[98977],{15680:(e,t,a)=>{a.d(t,{xA:()=>y,yg:()=>s});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},y=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,y=o(e,["components","mdxType","originalType","parentName"]),d=m(a),u=r,s=d["".concat(p,".").concat(u)]||d[u]||g[u]||l;return a?n.createElement(s,i(i({ref:t},y),{},{components:a})):n.createElement(s,i({ref:t},y))}));function s(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},10129:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>b,contentTitle:()=>N,default:()=>v,frontMatter:()=>s,metadata:()=>c,toc:()=>h});var n=a(15680),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,y=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,d=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&y(e,a,t[a]);if(o)for(var a of o(t))m.call(t,a)&&y(e,a,t[a]);return e},g=(e,t)=>l(e,i(t)),u=(e,t)=>{var a={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&m.call(e,n)&&(a[n]=e[n]);return a};const s={title:"SortedTableSortedColumn (namespace)",slug:"/rimbu/table/SortedTableSortedColumn/namespace"},N="namespace SortedTableSortedColumn",c={unversionedId:"rimbu_table/SortedTableSortedColumn/index",id:"rimbu_table/SortedTableSortedColumn/index",title:"SortedTableSortedColumn (namespace)",description:"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the SortedTableSortedColumn API documentation",source:"@site/api/rimbu_table/SortedTableSortedColumn/index.mdx",sourceDirName:"rimbu_table/SortedTableSortedColumn",slug:"/rimbu/table/SortedTableSortedColumn/namespace",permalink:"/api/rimbu/table/SortedTableSortedColumn/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"SortedTableSortedColumn (namespace)",slug:"/rimbu/table/SortedTableSortedColumn/namespace"},sidebar:"defaultSidebar",previous:{title:"SortedTableHashColumn<R,C,V>",permalink:"/api/rimbu/table/SortedTableHashColumn/interface"},next:{title:"SortedTableSortedColumn.Builder<R,C,V>",permalink:"/api/rimbu/table/SortedTableSortedColumn/Builder/interface"}},b={},h=[{value:"Interfaces",id:"interfaces",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>builder</code>",id:"builder",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>createContext</code>",id:"createcontext",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>defaultContext</code>",id:"defaultcontext",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"<code>empty</code>",id:"empty",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>from</code>",id:"from",level:3},{value:"Definitions",id:"definitions",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>of</code>",id:"of",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>reducer</code>",id:"reducer",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-4",level:4}],C={toc:h},f="wrapper";function v(e){var t=e,{components:a}=t,r=u(t,["components"]);return(0,n.yg)(f,g(d(d({},C),r),{components:a,mdxType:"MDXLayout"}),(0,n.yg)("h1",d({},{id:"namespace-sortedtablesortedcolumn"}),(0,n.yg)("inlineCode",{parentName:"h1"},"namespace SortedTableSortedColumn")),(0,n.yg)("p",null,"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",d({parentName:"p"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",d({parentName:"p"},{href:"https://rimbu.org/api/rimbu/table/sorted-row/SortedTableSortedColumn/interface"}),"SortedTableSortedColumn API documentation"),"  "),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Companion interface:")," ",(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/table/SortedTableSortedColumn/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedTableSortedColumn<R,C,V>"))),(0,n.yg)("h2",d({},{id:"interfaces"}),"Interfaces"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/table/SortedTableSortedColumn/Builder/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedTableSortedColumn.Builder<R,C,V>"))),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/table/SortedTableSortedColumn/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedTableSortedColumn.Context<UR,UC>"))),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/table/SortedTableSortedColumn/NonEmpty/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedTableSortedColumn.NonEmpty<R,C,V>"))),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"A non-empty type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/sorted-row/SortedTableSortedColumn/interface"}),"SortedTableSortedColumn API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/table/SortedTableSortedColumn/Types/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedTableSortedColumn.Types"))),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))),(0,n.yg)("h2",d({},{id:"static-methods"}),"Static Methods"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"builder"}),(0,n.yg)("inlineCode",{parentName:"h3"},"builder")),(0,n.yg)("p",null,"Returns an empty builder instance for this type of collection and context.")),(0,n.yg)("h4",d({},{id:"definition"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"builder<R extends UR, C extends UC, V>(): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithRow/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithRow")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, R, C, V>['builder'];"))),(0,n.yg)("h4",d({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"R"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UR")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"C"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UC")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"V"),(0,n.yg)("td",d({parentName:"tr"},{align:null})),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"HashTableHashColumn.builder<number, string, boolean>()    // => HashTableHashColumn.Builder<number, string, boolean>\n"))),(0,n.yg)("h4",d({},{id:"overrides"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/table/custom/TableBase/Factory/interface#builder"}),"Factory.builder"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"createcontext"}),(0,n.yg)("inlineCode",{parentName:"h3"},"createContext")),(0,n.yg)("p",null,"Returns a new HashTableHashColumn context instance based on the given ",(0,n.yg)("inlineCode",{parentName:"p"},"options"),".")),(0,n.yg)("h4",d({},{id:"definition-1"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"createContext<UR, UC>(options?: {"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"rowContext?: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/sorted/map/SortedMap/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedMap.Context")),(0,n.yg)("inlineCode",{parentName:"p"},"<UR>;"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"columnContext?: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/sorted/map/SortedMap/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedMap.Context")),(0,n.yg)("inlineCode",{parentName:"p"},"<UC>;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"}): SortedTableSortedColumn.Context<UR, UC>;"))),(0,n.yg)("h4",d({},{id:"type-parameters-1"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"UR"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"the upper row key type for which the context can create instances")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"UC"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"the upper column key type for which the context can create instances")))),(0,n.yg)("h4",d({},{id:"parameters"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"options")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"{"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"rowContext?: "),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/sorted/map/SortedMap/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedMap.Context")),(0,n.yg)("inlineCode",{parentName:"td"},"<UR>;"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"columnContext?: "),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/sorted/map/SortedMap/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedMap.Context")),(0,n.yg)("inlineCode",{parentName:"td"},"<UC>;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"}")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"(optional) an object containing the following properties:",(0,n.yg)("br",null)," - rowContext: (optional) the map context to use to map row keys to columns",(0,n.yg)("br",null)," - columnContext: (optional) the map context to use to map column keys to values"))))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"defaultcontext"}),(0,n.yg)("inlineCode",{parentName:"h3"},"defaultContext")),(0,n.yg)("p",null,"Returns the default context for SortedTableSortedColumns.")),(0,n.yg)("h4",d({},{id:"definition-2"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"defaultContext<UR, UC>(): SortedTableSortedColumn.Context<UR, UC>;"))),(0,n.yg)("h4",d({},{id:"type-parameters-2"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"UR"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"the upper row key type for which the context can create instances")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"UC"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"the upper column key type for which the context can create instances"))))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"empty"}),(0,n.yg)("inlineCode",{parentName:"h3"},"empty")),(0,n.yg)("p",null,"Returns the (singleton) empty instance of this type and context with given key and value types.")),(0,n.yg)("h4",d({},{id:"definition-3"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"empty<R extends UR, C extends UC, V>(): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithRow/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithRow")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, R, C, V>['normal'];"))),(0,n.yg)("h4",d({},{id:"type-parameters-3"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"R"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UR")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"C"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UC")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"V"),(0,n.yg)("td",d({parentName:"tr"},{align:null})),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"HashTableHashColumn.empty<number, string, boolean>()    // => HashTableHashColumn<number, string, boolean>\nHashTableHashColumn.empty<string, boolean, number>()    // => HashTableHashColumn<string, boolean, number>\n"))),(0,n.yg)("h4",d({},{id:"overrides-1"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/table/custom/TableBase/Factory/interface#empty"}),"Factory.empty"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"from"}),(0,n.yg)("inlineCode",{parentName:"h3"},"from")),(0,n.yg)("p",null,"Returns an immutable table of this type and context, containing the entries in the given ",(0,n.yg)("inlineCode",{parentName:"p"},"sources")," ",(0,n.yg)("inlineCode",{parentName:"p"},"StreamSource")," instances.")),(0,n.yg)("h4",d({},{id:"definitions"}),"Definitions"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"from<R extends UR, C extends UC, V>(...sources: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<readonly [R, C, V]>>): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithRow/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithRow")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, R, C, V>['nonEmpty'];"))),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"from<R extends UR, C extends UC, V>(...sources: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"p"},"<readonly [R, C, V]>>): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithRow/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithRow")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, R, C, V>['normal'];"))),(0,n.yg)("h4",d({},{id:"type-parameters-4"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"R"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UR")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"C"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UC")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"V"),(0,n.yg)("td",d({parentName:"tr"},{align:null})),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",d({},{id:"parameters-1"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"sources")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<"),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<readonly [R, C, V]>>")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"an array of ",(0,n.yg)("inlineCode",{parentName:"td"},"StreamSource")," instances containing row-column-value entries")))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"HashTableHashColumn.from([[1, 2, 3], [1, 4, 5]])    // => HashTableHashColumn.NonEmpty<number, number, number>\n"))),(0,n.yg)("h4",d({},{id:"overrides-2"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/table/custom/TableBase/Factory/interface#from"}),"Factory.from"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"of"}),(0,n.yg)("inlineCode",{parentName:"h3"},"of")),(0,n.yg)("p",null,"Returns an immutable multimap of this collection type and context, containing the given ",(0,n.yg)("inlineCode",{parentName:"p"},"entries"),".")),(0,n.yg)("h4",d({},{id:"definition-4"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"of<R extends UR, C extends UC, V>(...entries: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<readonly [R, C, V]>): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithRow/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithRow")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, R, C, V>['nonEmpty'];"))),(0,n.yg)("h4",d({},{id:"type-parameters-5"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"R"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UR")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"C"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UC")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"V"),(0,n.yg)("td",d({parentName:"tr"},{align:null})),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",d({},{id:"parameters-2"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"entries")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<readonly [R, C, V]>")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"a non-empty array of row-column-value entries")))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"HashTableHashColumn.of([1, 2, 3], [1, 4, 5])    // => HashTableHashColumn.NonEmpty<number, number, number>\n"))),(0,n.yg)("h4",d({},{id:"overrides-3"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/table/custom/TableBase/Factory/interface#of"}),"Factory.of"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"reducer"}),(0,n.yg)("inlineCode",{parentName:"h3"},"reducer")),(0,n.yg)("p",null,"Returns a ",(0,n.yg)("inlineCode",{parentName:"p"},"Reducer")," that adds received tuples to a Table and returns the Table as a result. When a ",(0,n.yg)("inlineCode",{parentName:"p"},"source")," is given, the reducer will first create a Table from the source, and then add tuples to it.")),(0,n.yg)("h4",d({},{id:"definition-5"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"reducer<R extends UR, C extends UC, V>(source?: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"p"},"<readonly [R, C, V]>): Reducer<readonly [R, C, V], "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithRow/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithRow")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, R, C, V>['normal']>;"))),(0,n.yg)("h4",d({},{id:"type-parameters-6"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"R"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UR")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"C"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UC")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"V"),(0,n.yg)("td",d({parentName:"tr"},{align:null})),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",d({},{id:"parameters-3"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"source")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"td"},"<readonly [R, C, V]>")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"(optional) an initial source of tuples to add to")))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"const someSource = Table.of([1, 'a', true], [2, 'b', false]);\nconst result = Stream.of([1, 'c', true], [3, 'a', false]).reduce(Table.reducer(someSource))\nresult.toArray()   // => [[1, 'c'], [2, 'b'], [3, 'a']]\n"))),(0,n.yg)("admonition",d({},{title:"note",type:"note"}),(0,n.yg)("p",{parentName:"admonition"},"uses a builder under the hood. If the given ",(0,n.yg)("inlineCode",{parentName:"p"},"source")," is a Table in the same context, it will directly call ",(0,n.yg)("inlineCode",{parentName:"p"},".toBuilder()"),".")),(0,n.yg)("h4",d({},{id:"overrides-4"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/table/custom/TableBase/Factory/interface#reducer"}),"Factory.reducer"))))}v.isMDXComponent=!0}}]);