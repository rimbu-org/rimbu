"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[47284],{15680:(e,r,n)=>{n.d(r,{xA:()=>c,yg:()=>s});var t=n(96540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function p(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),u=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},c=function(e){var r=u(e.components);return t.createElement(l.Provider,{value:r},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},y=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=u(n),y=a,s=d["".concat(l,".").concat(y)]||d[y]||m[y]||i;return n?t.createElement(s,o(o({ref:r},c),{},{components:n})):t.createElement(s,o({ref:r},c))}));function s(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=y;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p[d]="string"==typeof e?e:a,o[1]=p;for(var u=2;u<i;u++)o[u]=n[u];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},68542:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>b,contentTitle:()=>g,default:()=>h,frontMatter:()=>s,metadata:()=>f,toc:()=>v});var t=n(15680),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,c=(e,r,n)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[r]=n,d=(e,r)=>{for(var n in r||(r={}))l.call(r,n)&&c(e,n,r[n]);if(p)for(var n of p(r))u.call(r,n)&&c(e,n,r[n]);return e},m=(e,r)=>i(e,o(r)),y=(e,r)=>{var n={};for(var t in e)l.call(e,t)&&r.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&p)for(var t of p(e))r.indexOf(t)<0&&u.call(e,t)&&(n[t]=e[t]);return n};const s={title:"partition",slug:"/rimbu/stream/Reducer/partition/var"},g="type partition",f={unversionedId:"rimbu_stream/Reducer/partition.var",id:"rimbu_stream/Reducer/partition.var",title:"partition",description:"Returns a Reducer that splits the incoming values into two separate outputs based on the given pred predicate. Values for which the predicate is true are fed into the collectorTrue reducer, and other values are fed into the collectorFalse instance. If no collectors are provided the values are collected into arrays.",source:"@site/api/rimbu_stream/Reducer/partition.var.mdx",sourceDirName:"rimbu_stream/Reducer",slug:"/rimbu/stream/Reducer/partition/var",permalink:"/api/rimbu/stream/Reducer/partition/var",draft:!1,tags:[],version:"current",frontMatter:{title:"partition",slug:"/rimbu/stream/Reducer/partition/var"},sidebar:"defaultSidebar",previous:{title:"or",permalink:"/api/rimbu/stream/Reducer/or/var"},next:{title:"pipe",permalink:"/api/rimbu/stream/Reducer/pipe/var"}},b={},v=[{value:"Definition",id:"definition",level:2}],N={toc:v},T="wrapper";function h(e){var r=e,{components:n}=r,a=y(r,["components"]);return(0,t.yg)(T,m(d(d({},N),a),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",d({},{id:"type-partition"}),(0,t.yg)("inlineCode",{parentName:"h1"},"type partition")),(0,t.yg)("p",null,"Returns a ",(0,t.yg)("inlineCode",{parentName:"p"},"Reducer")," that splits the incoming values into two separate outputs based on the given ",(0,t.yg)("inlineCode",{parentName:"p"},"pred")," predicate. Values for which the predicate is true are fed into the ",(0,t.yg)("inlineCode",{parentName:"p"},"collectorTrue")," reducer, and other values are fed into the ",(0,t.yg)("inlineCode",{parentName:"p"},"collectorFalse")," instance. If no collectors are provided the values are collected into arrays."),(0,t.yg)("admonition",d({},{title:"note",type:"note"}),(0,t.yg)("p",{parentName:"admonition"},"if the predicate is a type guard, the return type is automatically inferred")),(0,t.yg)("admonition",d({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).partition((v) => v % 2 === 0)\n// => [[2], [1, 3]]\nStream.of<number | string>(1, 'a', 'b', 2)\n.partition((v): v is string => typeof v === 'string')\n// => [['a', 'b'], [1, 2]]\n// return type is: [string[], number[]]\nStream.of(1, 2, 3, 4).partition(\n(v) => v % 2 === 0,\n{ collectorTrue: Reducer.toJSSet(), collectorFalse: Reducer.sum }\n)\n// => [Set(2, 4), 4]\n"))),(0,t.yg)("h2",d({},{id:"definition"}),"Definition"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"partition: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T, T2 extends T, RT, RF = RT>(pred: (value: T, index: number) => value is T2, options: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"collectorTrue: "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/Reducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Reducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T2, RT>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"collectorFalse: "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/Reducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Reducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<Exclude<T, T2>, RF>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/Reducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Reducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, [true: RT, false: RF]>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T, T2 extends T>(pred: (value: T, index: number) => value is T2, options?: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"collectorTrue?: undefined;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"collectorFalse?: undefined;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/Reducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Reducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, [true: T2[], false: Exclude<T, T2>[]]>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T, RT, RF = RT>(pred: (value: T, index: number) => boolean, options: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"collectorTrue: "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/Reducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Reducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, RT>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"collectorFalse: "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/Reducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Reducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, RF>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/Reducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Reducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, [true: RT, false: RF]>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T>(pred: (value: T, index: number) => boolean, options?: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"collectorTrue?: undefined;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"collectorFalse?: undefined;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/Reducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Reducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, [true: T[], false: T[]]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}")))}h.isMDXComponent=!0}}]);