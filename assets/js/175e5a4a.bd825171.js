"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[90574],{15680:(e,r,n)=>{n.d(r,{xA:()=>s,yg:()=>f});var t=n(96540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=t.createContext({}),m=function(e){var r=t.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},s=function(e){var r=m(e.components);return t.createElement(p.Provider,{value:r},e.children)},y="mdxType",c={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),y=m(n),u=a,f=y["".concat(p,".").concat(u)]||y[u]||c[u]||i;return n?t.createElement(f,o(o({ref:r},s),{},{components:n})):t.createElement(f,o({ref:r},s))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[y]="string"==typeof e?e:a,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},68243:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>b,contentTitle:()=>d,default:()=>N,frontMatter:()=>f,metadata:()=>g,toc:()=>v});var t=n(15680),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,s=(e,r,n)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[r]=n,y=(e,r)=>{for(var n in r||(r={}))p.call(r,n)&&s(e,n,r[n]);if(l)for(var n of l(r))m.call(r,n)&&s(e,n,r[n]);return e},c=(e,r)=>i(e,o(r)),u=(e,r)=>{var n={};for(var t in e)p.call(e,t)&&r.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&l)for(var t of l(e))r.indexOf(t)<0&&m.call(e,t)&&(n[t]=e[t]);return n};const f={title:"filter",slug:"/rimbu/stream/AsyncTransformer/filter/var"},d="type filter",g={unversionedId:"rimbu_stream/AsyncTransformer/filter.var",id:"rimbu_stream/AsyncTransformer/filter.var",title:"filter",description:"Returns an async transformer that filters elements from the input stream based on the provided predicate function.",source:"@site/api/rimbu_stream/AsyncTransformer/filter.var.mdx",sourceDirName:"rimbu_stream/AsyncTransformer",slug:"/rimbu/stream/AsyncTransformer/filter/var",permalink:"/api/rimbu/stream/AsyncTransformer/filter/var",draft:!1,tags:[],version:"current",frontMatter:{title:"filter",slug:"/rimbu/stream/AsyncTransformer/filter/var"},sidebar:"defaultSidebar",previous:{title:"NonEmpty",permalink:"/api/rimbu/stream/AsyncTransformer/NonEmpty/type"},next:{title:"window",permalink:"/api/rimbu/stream/AsyncTransformer/window/var"}},b={},v=[{value:"Definition",id:"definition",level:2}],T={toc:v},O="wrapper";function N(e){var r=e,{components:n}=r,a=u(r,["components"]);return(0,t.yg)(O,c(y(y({},T),a),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",y({},{id:"type-filter"}),(0,t.yg)("inlineCode",{parentName:"h1"},"type filter")),(0,t.yg)("p",null,"Returns an async transformer that filters elements from the input stream based on the provided predicate function."),(0,t.yg)("admonition",y({},{title:"note",type:"note"}),(0,t.yg)("p",{parentName:"admonition"},"if the predicate is a type guard, the return type is automatically inferred")),(0,t.yg)("h2",y({},{id:"definition"}),"Definition"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"filter: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T, TF extends T>(pred: (value: T, index: number, halt: () => void) => value is TF, options?: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"negate?: false "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncTransformer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncTransformer")),(0,t.yg)("inlineCode",{parentName:"p"},"<TF>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T, TF extends T>(pred: (value: T, index: number, halt: () => void) => value is TF, options: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"negate: true;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncTransformer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncTransformer")),(0,t.yg)("inlineCode",{parentName:"p"},"<Exclude<T, TF>>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T>(pred: (value: T, index: number, halt: () => void) => "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<boolean>, options?: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"negate?: boolean "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncTransformer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncTransformer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}")))}N.isMDXComponent=!0}}]);