"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[82094],{15680:(e,a,n)=>{n.d(a,{xA:()=>y,yg:()=>h});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function p(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=t.createContext({}),g=function(e){var a=t.useContext(m),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},y=function(e){var a=g(e.components);return t.createElement(m.Provider,{value:a},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},o=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,y=p(e,["components","mdxType","originalType","parentName"]),d=g(n),o=r,h=d["".concat(m,".").concat(o)]||d[o]||u[o]||l;return n?t.createElement(h,i(i({ref:a},y),{},{components:n})):t.createElement(h,i({ref:a},y))}));function h(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=o;var p={};for(var m in a)hasOwnProperty.call(a,m)&&(p[m]=a[m]);p.originalType=e,p[d]="string"==typeof e?e:r,i[1]=p;for(var g=2;g<l;g++)i[g]=n[g];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}o.displayName="MDXCreateElement"},56920:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>N,default:()=>C,frontMatter:()=>h,metadata:()=>s,toc:()=>f});var t=n(15680),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable,y=(e,a,n)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,d=(e,a)=>{for(var n in a||(a={}))m.call(a,n)&&y(e,n,a[n]);if(p)for(var n of p(a))g.call(a,n)&&y(e,n,a[n]);return e},u=(e,a)=>l(e,i(a)),o=(e,a)=>{var n={};for(var t in e)m.call(e,t)&&a.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&p)for(var t of p(e))a.indexOf(t)<0&&g.call(e,t)&&(n[t]=e[t]);return n};const h={title:"ValuedGraphElement (namespace)",slug:"/rimbu/graph/custom/ValuedGraphElement/namespace"},N="namespace ValuedGraphElement",s={unversionedId:"rimbu_graph/custom/ValuedGraphElement/index",id:"rimbu_graph/custom/ValuedGraphElement/index",title:"ValuedGraphElement (namespace)",description:"undocumented",source:"@site/api/rimbu_graph/custom/ValuedGraphElement/index.mdx",sourceDirName:"rimbu_graph/custom/ValuedGraphElement",slug:"/rimbu/graph/custom/ValuedGraphElement/namespace",permalink:"/api/rimbu/graph/custom/ValuedGraphElement/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"ValuedGraphElement (namespace)",slug:"/rimbu/graph/custom/ValuedGraphElement/namespace"},sidebar:"defaultSidebar",previous:{title:"ValuedGraphContext<UN,TT,Tp>",permalink:"/api/rimbu/graph/custom/ValuedGraphContext/class"},next:{title:"ValuedGraphElement",permalink:"/api/rimbu/graph/custom/ValuedGraphElement/type"}},c={},f=[{value:"Functions",id:"functions",level:2},{value:"<code>getLink</code>",id:"getlink",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:5},{value:"Parameters",id:"parameters",level:4},{value:"<code>getLinkElement</code>",id:"getlinkelement",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:5},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>getSingleNode</code>",id:"getsinglenode",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-2",level:5},{value:"Parameters",id:"parameters-2",level:4},{value:"<code>isLink</code>",id:"islink",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"<code>isSingleNode</code>",id:"issinglenode",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Parameters",id:"parameters-4",level:4}],b={toc:f},v="wrapper";function C(e){var a=e,{components:n}=a,r=o(a,["components"]);return(0,t.yg)(v,u(d(d({},b),r),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",d({},{id:"namespace-valuedgraphelement"}),(0,t.yg)("inlineCode",{parentName:"h1"},"namespace ValuedGraphElement")),(0,t.yg)("p",null,"undocumented"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Companion type:")," ",(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphElement/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedGraphElement<N,V>"))),(0,t.yg)("h2",d({},{id:"functions"}),"Functions"),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",d({},{id:"getlink"}),(0,t.yg)("inlineCode",{parentName:"h3"},"getLink")),(0,t.yg)("p",null,"Returns the nodes of the link graph element if the given element ",(0,t.yg)("inlineCode",{parentName:"p"},"e")," is a Link element, or undefined otherwise.")),(0,t.yg)("h4",d({},{id:"definition"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"function getLink<N, V>(e: "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphElement/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedGraphElement")),(0,t.yg)("inlineCode",{parentName:"p"},"<N, V>): Link<N> "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined;"))),(0,t.yg)("h5",d({},{id:"type-parameters"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",d({parentName:"tr"},{align:null}),"N"),(0,t.yg)("td",d({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",d({parentName:"tr"},{align:null}),"V"),(0,t.yg)("td",d({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",d({},{id:"parameters"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",d({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"e")),(0,t.yg)("td",d({parentName:"tr"},{align:null}),(0,t.yg)("a",d({parentName:"td"},{href:"/api/rimbu/graph/custom/ValuedGraphElement/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedGraphElement")),(0,t.yg)("inlineCode",{parentName:"td"},"<N, V>")),(0,t.yg)("td",d({parentName:"tr"},{align:null}),"the graph element"))))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",d({},{id:"getlinkelement"}),(0,t.yg)("inlineCode",{parentName:"h3"},"getLinkElement")),(0,t.yg)("p",null,"Returns the element at the given ",(0,t.yg)("inlineCode",{parentName:"p"},"key")," in the graph element ",(0,t.yg)("inlineCode",{parentName:"p"},"e"),", if the element is a Link element, or returns the given ",(0,t.yg)("inlineCode",{parentName:"p"},"otherwise")," value otherwise.")),(0,t.yg)("h4",d({},{id:"definition-1"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"function getLinkElement<N, V, K extends keyof "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphElement/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedGraphElement")),(0,t.yg)("inlineCode",{parentName:"p"},"<N, V>>(e: "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphElement/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedGraphElement")),(0,t.yg)("inlineCode",{parentName:"p"},"<N, V>, key: K): "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedLink/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedLink")),(0,t.yg)("inlineCode",{parentName:"p"},"<N, V>[K] "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined;"))),(0,t.yg)("h5",d({},{id:"type-parameters-1"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",d({parentName:"tr"},{align:null}),"N"),(0,t.yg)("td",d({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",d({parentName:"tr"},{align:null}),"V"),(0,t.yg)("td",d({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",d({parentName:"tr"},{align:null}),"K"),(0,t.yg)("td",d({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",d({},{id:"parameters-1"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",d({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"e")),(0,t.yg)("td",d({parentName:"tr"},{align:null}),(0,t.yg)("a",d({parentName:"td"},{href:"/api/rimbu/graph/custom/ValuedGraphElement/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedGraphElement")),(0,t.yg)("inlineCode",{parentName:"td"},"<N, V>")),(0,t.yg)("td",d({parentName:"tr"},{align:null}),"the graph element")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",d({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",d({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",d({parentName:"tr"},{align:null}),"the link key"))))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",d({},{id:"getsinglenode"}),(0,t.yg)("inlineCode",{parentName:"h3"},"getSingleNode")),(0,t.yg)("p",null,"Returns the value of a single node graph element if the given element ",(0,t.yg)("inlineCode",{parentName:"p"},"e")," is a single node, or the given ",(0,t.yg)("inlineCode",{parentName:"p"},"otherwise")," fallback value otherwise.")),(0,t.yg)("h4",d({},{id:"definition-2"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"function getSingleNode<N>(e: "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphElement/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedGraphElement")),(0,t.yg)("inlineCode",{parentName:"p"},"<N, any>): N "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined;"))),(0,t.yg)("h5",d({},{id:"type-parameters-2"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",d({parentName:"tr"},{align:null}),"N"),(0,t.yg)("td",d({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",d({},{id:"parameters-2"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",d({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"e")),(0,t.yg)("td",d({parentName:"tr"},{align:null}),(0,t.yg)("a",d({parentName:"td"},{href:"/api/rimbu/graph/custom/ValuedGraphElement/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedGraphElement")),(0,t.yg)("inlineCode",{parentName:"td"},"<N, any>")),(0,t.yg)("td",d({parentName:"tr"},{align:null}),"the graph element"))))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",d({},{id:"islink"}),(0,t.yg)("inlineCode",{parentName:"h3"},"isLink")),(0,t.yg)("p",null,"Returns true if the given graph element ",(0,t.yg)("inlineCode",{parentName:"p"},"e")," is a 3-tuple. Instructs the compiler that the type is a 3-tuple.")),(0,t.yg)("h4",d({},{id:"definition-3"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"function isLink(e: "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphElement/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedGraphElement")),(0,t.yg)("inlineCode",{parentName:"p"},"<any, any>): e is [unknown, unknown, unknown];"))),(0,t.yg)("h4",d({},{id:"parameters-3"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",d({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"e")),(0,t.yg)("td",d({parentName:"tr"},{align:null}),(0,t.yg)("a",d({parentName:"td"},{href:"/api/rimbu/graph/custom/ValuedGraphElement/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedGraphElement")),(0,t.yg)("inlineCode",{parentName:"td"},"<any, any>")),(0,t.yg)("td",d({parentName:"tr"},{align:null}),"the graph element"))))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",d({},{id:"issinglenode"}),(0,t.yg)("inlineCode",{parentName:"h3"},"isSingleNode")),(0,t.yg)("p",null,"Returns true if the given graph element ",(0,t.yg)("inlineCode",{parentName:"p"},"e")," is a single node. Instructs the compiler that the type is a 1-tuple.")),(0,t.yg)("h4",d({},{id:"definition-4"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"function isSingleNode(e: "),(0,t.yg)("a",d({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphElement/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedGraphElement")),(0,t.yg)("inlineCode",{parentName:"p"},"<any, any>): e is [unknown];"))),(0,t.yg)("h4",d({},{id:"parameters-4"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",d({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"e")),(0,t.yg)("td",d({parentName:"tr"},{align:null}),(0,t.yg)("a",d({parentName:"td"},{href:"/api/rimbu/graph/custom/ValuedGraphElement/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ValuedGraphElement")),(0,t.yg)("inlineCode",{parentName:"td"},"<any, any>")),(0,t.yg)("td",d({parentName:"tr"},{align:null}),"the graph element"))))))}C.isMDXComponent=!0}}]);