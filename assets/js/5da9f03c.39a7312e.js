"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[69778],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>N});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),p=u(a),k=l,N=p["".concat(o,".").concat(k)]||p[k]||s[k]||r;return a?n.createElement(N,i(i({ref:t},m),{},{components:a})):n.createElement(N,i({ref:t},m))}));function N(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=k;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[p]="string"==typeof e?e:l,i[1]=d;for(var u=2;u<r;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},22473:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>v,default:()=>y,frontMatter:()=>N,metadata:()=>c,toc:()=>f});var n=a(3905),l=Object.defineProperty,r=Object.defineProperties,i=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,a)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,p=(e,t)=>{for(var a in t||(t={}))o.call(t,a)&&m(e,a,t[a]);if(d)for(var a of d(t))u.call(t,a)&&m(e,a,t[a]);return e},s=(e,t)=>r(e,i(t)),k=(e,t)=>{var a={};for(var n in e)o.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&d)for(var n of d(e))t.indexOf(n)<0&&u.call(e,n)&&(a[n]=e[n]);return a};const N={title:"SortedMultiSet.Builder<T>",slug:"/rimbu/multiset/SortedMultiSet/Builder/interface"},v="interface SortedMultiSet.Builder<T>",c={unversionedId:"rimbu_multiset/SortedMultiSet/Builder.interface",id:"rimbu_multiset/SortedMultiSet/Builder.interface",title:"SortedMultiSet.Builder<T>",description:"A mutable SortedMultiSet builder used to efficiently create new immutable instances. See the MultiSet documentation and the SortedMultiSet.Builder API documentation",source:"@site/api/rimbu_multiset/SortedMultiSet/Builder.interface.mdx",sourceDirName:"rimbu_multiset/SortedMultiSet",slug:"/rimbu/multiset/SortedMultiSet/Builder/interface",permalink:"/api/rimbu/multiset/SortedMultiSet/Builder/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"SortedMultiSet.Builder<T>",slug:"/rimbu/multiset/SortedMultiSet/Builder/interface"},sidebar:"defaultSidebar",previous:{title:"SortedMultiSet (namespace)",permalink:"/api/rimbu/multiset/SortedMultiSet/namespace"},next:{title:"SortedMultiSet.Context<UT>",permalink:"/api/rimbu/multiset/SortedMultiSet/Context/interface"}},h={},f=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>isEmpty</code>",id:"isempty",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>size</code>",id:"size",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>sizeDistinct</code>",id:"sizedistinct",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>add</code>",id:"add",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>addAll</code>",id:"addall",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"<code>addEntries</code>",id:"addentries",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"<code>build</code>",id:"build",level:3},{value:"Definition",id:"definition-6",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"<code>count</code>",id:"count",level:3},{value:"Definition",id:"definition-7",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"<code>forEach</code>",id:"foreach",level:3},{value:"Definition",id:"definition-8",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"<code>has</code>",id:"has",level:3},{value:"Definition",id:"definition-9",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Overrides",id:"overrides-9",level:4},{value:"<code>modifyCount</code>",id:"modifycount",level:3},{value:"Definition",id:"definition-10",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Overrides",id:"overrides-10",level:4},{value:"<code>remove</code>",id:"remove",level:3},{value:"Definition",id:"definition-11",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Overrides",id:"overrides-11",level:4},{value:"<code>removeAllEvery</code>",id:"removeallevery",level:3},{value:"Definition",id:"definition-12",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Overrides",id:"overrides-12",level:4},{value:"<code>removeAllSingle</code>",id:"removeallsingle",level:3},{value:"Definition",id:"definition-13",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Overrides",id:"overrides-13",level:4},{value:"<code>setCount</code>",id:"setcount",level:3},{value:"Definition",id:"definition-14",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Overrides",id:"overrides-14",level:4}],b={toc:f},g="wrapper";function y(e){var t=e,{components:a}=t,l=k(t,["components"]);return(0,n.kt)(g,s(p(p({},b),l),{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",p({},{id:"interface-sortedmultisetbuildert"}),(0,n.kt)("inlineCode",{parentName:"h1"},"interface SortedMultiSet.Builder<T>")),(0,n.kt)("p",null,"A mutable ",(0,n.kt)("inlineCode",{parentName:"p"},"SortedMultiSet")," builder used to efficiently create new immutable instances. See the ",(0,n.kt)("a",p({parentName:"p"},{href:"https://rimbu.org/docs/collections/multiset"}),"MultiSet documentation")," and the ",(0,n.kt)("a",p({parentName:"p"},{href:"https://rimbu.org/api/rimbu/multiset/SortedMultiSet/Builder/interface"}),"SortedMultiSet.Builder API documentation")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Extends:")," ",(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"MultiSetBase.Builder<T,Tp>"))),(0,n.kt)("h2",p({},{id:"type-parameters"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),"T"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"the value type")))),(0,n.kt)("h2",p({},{id:"properties"}),"Properties"),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"isempty"}),(0,n.kt)("inlineCode",{parentName:"h3"},"isEmpty")),(0,n.kt)("p",null,"Returns true if there are no values in the builder.")),(0,n.kt)("h4",p({},{id:"definition"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly isEmpty: boolean;"))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"HashMultiSet.of(1, 2, 2).toBuilder().isEmpty\n// => false\n"))),(0,n.kt)("h4",p({},{id:"overrides"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#isEmpty"}),"Builder.isEmpty"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"size"}),(0,n.kt)("inlineCode",{parentName:"h3"},"size")),(0,n.kt)("p",null,"Returns the amount of values in the builder.")),(0,n.kt)("h4",p({},{id:"definition-1"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly size: number;"))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"HashMultiSet.of(1, 2, 2).toBuilder().size\n// => 3\n"))),(0,n.kt)("h4",p({},{id:"overrides-1"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#size"}),"Builder.size"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"sizedistinct"}),(0,n.kt)("inlineCode",{parentName:"h3"},"sizeDistinct")),(0,n.kt)("p",null,"Returns the amount of distinct values in the builder.")),(0,n.kt)("h4",p({},{id:"definition-2"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly sizeDistinct: number;"))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"HashMultiSet.of(1, 2, 2).toBuilder().sizeDistinct\n// => 2\n"))),(0,n.kt)("h4",p({},{id:"overrides-2"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#sizeDistinct"}),"Builder.sizeDistinct"))),(0,n.kt)("h2",p({},{id:"methods"}),"Methods"),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"add"}),(0,n.kt)("inlineCode",{parentName:"h3"},"add")),(0,n.kt)("p",null,"Adds given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," to the builder.")),(0,n.kt)("h4",p({},{id:"definition-3"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"add(value: T, amount?: number): boolean;"))),(0,n.kt)("h4",p({},{id:"parameters"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"amount")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"const s = HashMultiSet.of(1, 2, 2).toBuilder()\ns.add(2)     // => true\ns.add(3, 5)  // => true\ns.add(3, 0)  // => false\n"))),(0,n.kt)("h4",p({},{id:"overrides-3"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#add"}),"Builder.add"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"addall"}),(0,n.kt)("inlineCode",{parentName:"h3"},"addAll")),(0,n.kt)("p",null,"Adds the values in given ",(0,n.kt)("inlineCode",{parentName:"p"},"values")," ",(0,n.kt)("inlineCode",{parentName:"p"},"StreamSource")," to the builder.")),(0,n.kt)("h4",p({},{id:"definition-4"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"addAll(values: "),(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>): boolean;"))),(0,n.kt)("h4",p({},{id:"parameters-1"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"values")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("a",p({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"const s = HashMultiSet.of(1, 2, 2).toBuilder()\ns.addAll(1, 3)   // => false\ns.addAll(2, 10)  // => true\n"))),(0,n.kt)("h4",p({},{id:"overrides-4"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#addAll"}),"Builder.addAll"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"addentries"}),(0,n.kt)("inlineCode",{parentName:"h3"},"addEntries")),(0,n.kt)("p",null,"Adds for each tuple of a value and amount in the given ",(0,n.kt)("inlineCode",{parentName:"p"},"entries"),", the amount of values to the builder.")),(0,n.kt)("h4",p({},{id:"definition-5"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"addEntries(entries: "),(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<readonly [T, number]>): boolean;"))),(0,n.kt)("h4",p({},{id:"parameters-2"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"entries")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("a",p({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<readonly [T, number]>")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"const s = HashMultiSet.of(1, 2, 2).toBuilder()\ns.addEntries([[1, 2], [2, 3]])   // => true\ns.addEntries([[1, 0], [3, 0]])   // => false\n"))),(0,n.kt)("h4",p({},{id:"overrides-5"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#addEntries"}),"Builder.addEntries"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"build"}),(0,n.kt)("inlineCode",{parentName:"h3"},"build")),(0,n.kt)("p",null,"Returns an immutable instance containing the values in this builder.")),(0,n.kt)("h4",p({},{id:"definition-6"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"build(): "),(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/WithElem/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"WithElem")),(0,n.kt)("inlineCode",{parentName:"p"},"<Tp, T>['normal'];"))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"const s = HashMultiSet.of(1, 2, 2).toBuilder()\nconst s2: HashMultiSet<number> = m.build()\n"))),(0,n.kt)("h4",p({},{id:"overrides-6"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#build"}),"Builder.build"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"count"}),(0,n.kt)("inlineCode",{parentName:"h3"},"count")),(0,n.kt)("p",null,"Returns the amount of given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," in the builder.")),(0,n.kt)("h4",p({},{id:"definition-7"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"count<U = T>(value: RelatedTo<T, U>): number;"))),(0,n.kt)("h4",p({},{id:"type-parameters-1"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Default"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),"U"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",p({},{id:"parameters-3"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"RelatedTo<T, U>")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"the value to look for")))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"const s = HashMultiSet.of(1, 2, 2).toBuilder()\ns.count(10)    // => 0\ns.count(2)     // => 2\n"))),(0,n.kt)("h4",p({},{id:"overrides-7"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#count"}),"Builder.count"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"foreach"}),(0,n.kt)("inlineCode",{parentName:"h3"},"forEach")),(0,n.kt)("p",null,"Performs given function ",(0,n.kt)("inlineCode",{parentName:"p"},"f")," for each value of the collection, using given ",(0,n.kt)("inlineCode",{parentName:"p"},"state")," as initial traversal state.")),(0,n.kt)("h4",p({},{id:"definition-8"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"forEach(f: (value: T, index: number, halt: () => void) => void, options?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"state?: TraverseState;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): void;"))),(0,n.kt)("h4",p({},{id:"parameters-4"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"f")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number, halt: () => void) => void")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"the function to perform for each value, receiving:",(0,n.kt)("br",null)," - ",(0,n.kt)("inlineCode",{parentName:"td"},"value"),": the next value",(0,n.kt)("br",null)," - ",(0,n.kt)("inlineCode",{parentName:"td"},"index"),": the index of the value",(0,n.kt)("br",null)," - ",(0,n.kt)("inlineCode",{parentName:"td"},"halt"),": a function that, if called, ensures that no new values are passed")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"state?: TraverseState;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"(optional) an object containing the following properties:",(0,n.kt)("br",null)," - state: (optional) the traversal state")))),(0,n.kt)("admonition",p({},{title:"throws",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"RibuError.ModifiedBuilderWhileLoopingOverItError if the builder is modified while looping over it")),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"HashMultiSet.of(1, 2, 2, 3).toBuilder().forEach((entry, i, halt) => {\nconsole.log(entry)\nif (i >= 1) halt()\n})\n// => logs [1, 1]  [2, 2]\n"))),(0,n.kt)("h4",p({},{id:"overrides-8"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#forEach"}),"Builder.forEach"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"has"}),(0,n.kt)("inlineCode",{parentName:"h3"},"has")),(0,n.kt)("p",null,"Returns true if the given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," is present in the builder.")),(0,n.kt)("h4",p({},{id:"definition-9"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"has<U = T>(value: RelatedTo<T, U>): boolean;"))),(0,n.kt)("h4",p({},{id:"type-parameters-2"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Default"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),"U"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",p({},{id:"parameters-5"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"RelatedTo<T, U>")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"the value to look for")))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"const s = HashMultiSet.of(1, 2, 2).toBuilder()\ns.has(2)   // => true\ns.has(10)  // => false\n"))),(0,n.kt)("h4",p({},{id:"overrides-9"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#has"}),"Builder.has"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"modifycount"}),(0,n.kt)("inlineCode",{parentName:"h3"},"modifyCount")),(0,n.kt)("p",null,"Changes the amount of given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," in the builder according to the result of given ",(0,n.kt)("inlineCode",{parentName:"p"},"update")," function.")),(0,n.kt)("h4",p({},{id:"definition-10"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"modifyCount(value: T, update: (currentCount: number) => number): boolean;"))),(0,n.kt)("h4",p({},{id:"parameters-6"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"the value of which to update the amount")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"update")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(currentCount: number) => number")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",p({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"if the given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," does not exists, the ",(0,n.kt)("inlineCode",{parentName:"p"},"update")," function is called with 0.  @note if the result of ",(0,n.kt)("inlineCode",{parentName:"p"},"update")," is <= 0, the value will be removed (or not added)")),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"const s = HashMultiSet.of(1, 2, 2).toBuilder()\ns.modifyCount(3, v => v)      // => false\ns.modifyCount(3, v => v + 1)  // => true\ns.modifyCount(2, v => v + 1)  // => true\n"))),(0,n.kt)("h4",p({},{id:"overrides-10"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#modifyCount"}),"Builder.modifyCount"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"remove"}),(0,n.kt)("inlineCode",{parentName:"h3"},"remove")),(0,n.kt)("p",null,"Removes given ",(0,n.kt)("inlineCode",{parentName:"p"},"amount")," or all of given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," from the builder.")),(0,n.kt)("h4",p({},{id:"definition-11"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"remove<U = T>(value: RelatedTo<T, U>, amount?: number "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," 'ALL'): number;"))),(0,n.kt)("h4",p({},{id:"type-parameters-3"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Default"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),"U"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",p({},{id:"parameters-7"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"RelatedTo<T, U>")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"the value to remove")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"amount")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," 'ALL'")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"const s = HashMultiSet.of(1, 2, 2).toBuilder()\ns.remove(10)    // => 0\ns.remove(1, 2)  // => 1\ns.remove(2, 2)  // => 2\n"))),(0,n.kt)("h4",p({},{id:"overrides-11"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#remove"}),"Builder.remove"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"removeallevery"}),(0,n.kt)("inlineCode",{parentName:"h3"},"removeAllEvery")),(0,n.kt)("p",null,"Removes every instance of the given ",(0,n.kt)("inlineCode",{parentName:"p"},"values")," from the builder.")),(0,n.kt)("h4",p({},{id:"definition-12"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"removeAllEvery<U = T>(values: "),(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<RelatedTo<T, U>>): boolean;"))),(0,n.kt)("h4",p({},{id:"type-parameters-4"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Default"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),"U"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",p({},{id:"parameters-8"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"values")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("a",p({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<RelatedTo<T, U>>")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"const s = HashMultiSet.of(1, 2, 2).toBuilder()\ns.removeAllEvery([10, 11])   // => false\ns.removeAllEvery([1, 11])    // => true\n"))),(0,n.kt)("h4",p({},{id:"overrides-12"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#removeAllEvery"}),"Builder.removeAllEvery"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"removeallsingle"}),(0,n.kt)("inlineCode",{parentName:"h3"},"removeAllSingle")),(0,n.kt)("p",null,"Removes every single value in given ",(0,n.kt)("inlineCode",{parentName:"p"},"values")," from the builder.")),(0,n.kt)("h4",p({},{id:"definition-13"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"removeAllSingle<U = T>(values: "),(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<RelatedTo<T, U>>): boolean;"))),(0,n.kt)("h4",p({},{id:"type-parameters-5"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Default"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),"U"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",p({},{id:"parameters-9"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"values")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("a",p({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<RelatedTo<T, U>>")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"const s = HashMultiSet.of(1, 2, 2).toBuilder()\ns.removeAllSingle([10, 11])   // => false\ns.removeAllSingle([1, 11])    // => true\n"))),(0,n.kt)("h4",p({},{id:"overrides-13"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#removeAllSingle"}),"Builder.removeAllSingle"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"setcount"}),(0,n.kt)("inlineCode",{parentName:"h3"},"setCount")),(0,n.kt)("p",null,"Sets the amount of given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," in the collection to ",(0,n.kt)("inlineCode",{parentName:"p"},"amount"),".")),(0,n.kt)("h4",p({},{id:"definition-14"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"setCount(value: T, amount: number): boolean;"))),(0,n.kt)("h4",p({},{id:"parameters-10"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"the value for which to set the amount")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"amount")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",p({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"if amount <= 0, the value will be removed")),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"const s = HashMultiSet.of(1, 2, 2).toBuilder()\ns.setCount(1, 1)    // => false\ns.setCount(1, 3)    // => true\n"))),(0,n.kt)("h4",p({},{id:"overrides-14"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface#setCount"}),"Builder.setCount"))))}y.isMDXComponent=!0}}]);