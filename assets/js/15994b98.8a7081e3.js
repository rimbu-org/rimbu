"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[65518],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>f});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),p=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=p(r),y=a,f=m["".concat(o,".").concat(y)]||m[y]||s[y]||i;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=y;var u={};for(var o in t)hasOwnProperty.call(t,o)&&(u[o]=t[o]);u.originalType=e,u[m]="string"==typeof e?e:a,l[1]=u;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},6895:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>b,default:()=>h,frontMatter:()=>f,metadata:()=>g,toc:()=>v});var n=r(15680),a=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,u=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,m=(e,t)=>{for(var r in t||(t={}))o.call(t,r)&&c(e,r,t[r]);if(u)for(var r of u(t))p.call(t,r)&&c(e,r,t[r]);return e},s=(e,t)=>i(e,l(t)),y=(e,t)=>{var r={};for(var n in e)o.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&u)for(var n of u(e))t.indexOf(n)<0&&p.call(e,n)&&(r[n]=e[n]);return r};const f={title:"MultiSet<T>",slug:"/rimbu/multiset/MultiSet/interface"},b="interface MultiSet<T>",g={unversionedId:"rimbu_multiset/MultiSet.interface",id:"rimbu_multiset/MultiSet.interface",title:"MultiSet<T>",description:"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the MultiSet API documentation",source:"@site/api/rimbu_multiset/MultiSet.interface.mdx",sourceDirName:"rimbu_multiset",slug:"/rimbu/multiset/MultiSet/interface",permalink:"/api/rimbu/multiset/MultiSet/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"MultiSet<T>",slug:"/rimbu/multiset/MultiSet/interface"},sidebar:"defaultSidebar",previous:{title:"MultiSet.Types",permalink:"/api/rimbu/multiset/MultiSet/Types/interface"},next:{title:"SortedMultiSet (namespace)",permalink:"/api/rimbu/multiset/SortedMultiSet/namespace"}},d={},v=[{value:"Type parameters",id:"type-parameters",level:2}],S={toc:v},O="wrapper";function h(e){var t=e,{components:r}=t,a=y(t,["components"]);return(0,n.yg)(O,s(m(m({},S),a),{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h1",m({},{id:"interface-multisett"}),(0,n.yg)("inlineCode",{parentName:"h1"},"interface MultiSet<T>")),(0,n.yg)("p",null,"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the ",(0,n.yg)("a",m({parentName:"p"},{href:"https://rimbu.org/docs/collections/multiset"}),"MultiSet documentation")," and the ",(0,n.yg)("a",m({parentName:"p"},{href:"https://rimbu.org/api/rimbu/multiset/MultiSet/interface"}),"MultiSet API documentation")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Companion namespace:")," ",(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/multiset/MultiSet/namespace"}),"MultiSet")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Implemented by:")," ",(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/multiset/MultiSet/NonEmpty/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"MultiSet.NonEmpty<T>"))),(0,n.yg)("h2",m({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),"T"),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"the value type")))))}h.isMDXComponent=!0}}]);