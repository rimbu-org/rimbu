"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[10961],{15680:(e,t,a)=>{a.d(t,{xA:()=>y,yg:()=>s});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},y=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,y=o(e,["components","mdxType","originalType","parentName"]),d=m(a),u=r,s=d["".concat(p,".").concat(u)]||d[u]||g[u]||i;return a?n.createElement(s,l(l({ref:t},y),{},{components:a})):n.createElement(s,l({ref:t},y))}));function s(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var m=2;m<i;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},12886:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>v,frontMatter:()=>s,metadata:()=>N,toc:()=>f});var n=a(15680),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,y=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,d=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&y(e,a,t[a]);if(o)for(var a of o(t))m.call(t,a)&&y(e,a,t[a]);return e},g=(e,t)=>i(e,l(t)),u=(e,t)=>{var a={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&m.call(e,n)&&(a[n]=e[n]);return a};const s={title:"SortedSet (namespace)",slug:"/rimbu/sorted/set/SortedSet/namespace"},c="namespace SortedSet",N={unversionedId:"rimbu_sorted/set/SortedSet/index",id:"rimbu_sorted/set/SortedSet/index",title:"SortedSet (namespace)",description:"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the SortedSet API documentation",source:"@site/api/rimbu_sorted/set/SortedSet/index.mdx",sourceDirName:"rimbu_sorted/set/SortedSet",slug:"/rimbu/sorted/set/SortedSet/namespace",permalink:"/api/rimbu/sorted/set/SortedSet/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"SortedSet (namespace)",slug:"/rimbu/sorted/set/SortedSet/namespace"},sidebar:"defaultSidebar",previous:{title:"@rimbu/sorted/set",permalink:"/api/rimbu/sorted/set"},next:{title:"SortedSet.Builder<T>",permalink:"/api/rimbu/sorted/set/SortedSet/Builder/interface"}},h={},f=[{value:"Interfaces",id:"interfaces",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>builder</code>",id:"builder",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>createContext</code>",id:"createcontext",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>defaultContext</code>",id:"defaultcontext",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"<code>empty</code>",id:"empty",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>from</code>",id:"from",level:3},{value:"Definitions",id:"definitions",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>of</code>",id:"of",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>reducer</code>",id:"reducer",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-4",level:4}],b={toc:f},S="wrapper";function v(e){var t=e,{components:a}=t,r=u(t,["components"]);return(0,n.yg)(S,g(d(d({},b),r),{components:a,mdxType:"MDXLayout"}),(0,n.yg)("h1",d({},{id:"namespace-sortedset"}),(0,n.yg)("inlineCode",{parentName:"h1"},"namespace SortedSet")),(0,n.yg)("p",null,"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,n.yg)("a",d({parentName:"p"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,n.yg)("a",d({parentName:"p"},{href:"https://rimbu.org/api/rimbu/ordered/set/SortedSet/interface"}),"SortedSet API documentation")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Companion interface:")," ",(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/sorted/set/SortedSet/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedSet<T>"))),(0,n.yg)("h2",d({},{id:"interfaces"}),"Interfaces"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/sorted/set/SortedSet/Builder/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedSet.Builder<T>"))),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"A mutable ",(0,n.yg)("inlineCode",{parentName:"td"},"SortedSet")," builder used to efficiently create new immutable instances. See the ",(0,n.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,n.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/ordered/set/SortedSet/Builder/interface"}),"SortedSet.Builder API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/sorted/set/SortedSet/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedSet.Context<UT>"))),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"A context instance for a ",(0,n.yg)("inlineCode",{parentName:"td"},"SortedSet")," that acts as a factory for every instance of this type of collection.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/sorted/set/SortedSet/NonEmpty/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedSet.NonEmpty<T>"))),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"A non-empty type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,n.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,n.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/ordered/set/SortedSet/interface"}),"SortedSet API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/sorted/set/SortedSet/Types/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedSet.Types"))),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))),(0,n.yg)("h2",d({},{id:"static-methods"}),"Static Methods"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"builder"}),(0,n.yg)("inlineCode",{parentName:"h3"},"builder")),(0,n.yg)("p",null,"Returns an empty builder instance for this type of collection and context.")),(0,n.yg)("h4",d({},{id:"definition"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"builder<T extends UT>(): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithElem")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, T>['builder'];"))),(0,n.yg)("h4",d({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"T"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UT")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"HashSet.builder<number>()     // => HashSet.Builder<number>\n"))),(0,n.yg)("h4",d({},{id:"overrides"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/Factory/interface#builder"}),"Factory.builder"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"createcontext"}),(0,n.yg)("inlineCode",{parentName:"h3"},"createContext")),(0,n.yg)("p",null,"Returns a new SortedSet context instance based on the given ",(0,n.yg)("inlineCode",{parentName:"p"},"options"),".")),(0,n.yg)("h4",d({},{id:"definition-1"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"createContext<UT>(options?: {"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"comp?: Comp<UT>;"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"blockSizeBits?: number;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"}): SortedSet.Context<UT>;"))),(0,n.yg)("h4",d({},{id:"type-parameters-1"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"UT"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"the upper element type for which the context can create instances")))),(0,n.yg)("h4",d({},{id:"parameters"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"options")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"{"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"comp?: Comp<UT>;"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"blockSizeBits?: number;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"}")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"(optional) an object containing the following properties:",(0,n.yg)("br",null)," - comp: (optional) the comparator instance for elements",(0,n.yg)("br",null)," - blockSizeBits: (default: 5) the power of 2 to to ",(0,n.yg)("inlineCode",{parentName:"td"},"blockSizeBits")," to use as block size for all instances that are created from the context."))))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"defaultcontext"}),(0,n.yg)("inlineCode",{parentName:"h3"},"defaultContext")),(0,n.yg)("p",null,"Returns the default context for SortedSets.")),(0,n.yg)("h4",d({},{id:"definition-2"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"defaultContext<UT>(): SortedSet.Context<UT>;"))),(0,n.yg)("h4",d({},{id:"type-parameters-2"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"UT"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"the upper element type for which the context can create instances"))))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"empty"}),(0,n.yg)("inlineCode",{parentName:"h3"},"empty")),(0,n.yg)("p",null,"Returns the (singleton) empty instance of this type and context with given value type.")),(0,n.yg)("h4",d({},{id:"definition-3"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"empty<T extends UT>(): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithElem")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, T>['normal'];"))),(0,n.yg)("h4",d({},{id:"type-parameters-3"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"T"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UT")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"HashSet.empty<number>()    // => HashSet<number>\nHashSet.empty<string>()    // => HashSet<string>\n"))),(0,n.yg)("h4",d({},{id:"overrides-1"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/Factory/interface#empty"}),"Factory.empty"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"from"}),(0,n.yg)("inlineCode",{parentName:"h3"},"from")),(0,n.yg)("p",null,"Returns an immutable set of this collection type and context, containing the given values in ",(0,n.yg)("inlineCode",{parentName:"p"},"source"),".")),(0,n.yg)("h4",d({},{id:"definitions"}),"Definitions"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"from<T extends UT>(...sources: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<T>>): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithElem")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, T>['nonEmpty'];"))),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"from<T extends UT>(...sources: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"p"},"<T>>): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithElem")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, T>['normal'];"))),(0,n.yg)("h4",d({},{id:"type-parameters-4"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"T"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UT")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",d({},{id:"parameters-1"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"sources")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<"),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<T>>")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"an array of ",(0,n.yg)("inlineCode",{parentName:"td"},"StreamSource")," instances containing values")))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"HashSet.from([1, 2, 3], [4, 5])   // => HashSet.NonEmpty<number>\n"))),(0,n.yg)("h4",d({},{id:"overrides-2"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/Factory/interface#from"}),"Factory.from"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"of"}),(0,n.yg)("inlineCode",{parentName:"h3"},"of")),(0,n.yg)("p",null,"Returns an immutable set of this type and context, containing the given ",(0,n.yg)("inlineCode",{parentName:"p"},"values"),".")),(0,n.yg)("h4",d({},{id:"definition-4"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"of<T extends UT>(...values: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<T>): "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithElem")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, T>['nonEmpty'];"))),(0,n.yg)("h4",d({},{id:"type-parameters-5"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"T"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UT")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",d({},{id:"parameters-2"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"values")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,n.yg)("inlineCode",{parentName:"td"},"<T>")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"a non-empty array of values")))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"HashSet.of(1, 2, 3).toArray()   // => [1, 2, 3]\n"))),(0,n.yg)("h4",d({},{id:"overrides-3"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/Factory/interface#of"}),"Factory.of"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",d({},{id:"reducer"}),(0,n.yg)("inlineCode",{parentName:"h3"},"reducer")),(0,n.yg)("p",null,"Returns a ",(0,n.yg)("inlineCode",{parentName:"p"},"Reducer")," that appends received items to an RSet and returns the RSet as a result. When a ",(0,n.yg)("inlineCode",{parentName:"p"},"source")," is given, the reducer will first create an RSet from the source, and then append elements to it.")),(0,n.yg)("h4",d({},{id:"definition-5"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"reducer<T extends UT>(source?: "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"p"},"<T>): Reducer<T, "),(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithElem")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, T>['normal']>;"))),(0,n.yg)("h4",d({},{id:"type-parameters-6"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),"T"),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"UT")),(0,n.yg)("td",d({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",d({},{id:"parameters-3"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"source")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),(0,n.yg)("a",d({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"td"},"<T>")),(0,n.yg)("td",d({parentName:"tr"},{align:null}),"(optional) an initial source of elements to append to")))),(0,n.yg)("admonition",d({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",d({parentName:"pre"},{className:"language-ts"}),"const someList = SortedSet.of(1, 2, 3);\nconst result = Stream.range({ start: 20, amount: 5 }).reduce(SortedSet.reducer(someList))\nresult.toArray()   // => [1, 2, 3, 20, 21, 22, 23, 24]\n"))),(0,n.yg)("admonition",d({},{title:"note",type:"note"}),(0,n.yg)("p",{parentName:"admonition"},"uses an RSet builder under the hood. If the given ",(0,n.yg)("inlineCode",{parentName:"p"},"source")," is a RSet in the same context, it will directly call ",(0,n.yg)("inlineCode",{parentName:"p"},".toBuilder()"),".")),(0,n.yg)("h4",d({},{id:"overrides-4"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",d({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/Factory/interface#reducer"}),"Factory.reducer"))))}v.isMDXComponent=!0}}]);