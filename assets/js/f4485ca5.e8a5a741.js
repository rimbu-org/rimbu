"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[69051],{15680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>c});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),y=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=y(e.components);return n.createElement(l.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,p=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=y(r),d=a,c=s["".concat(l,".").concat(d)]||s[d]||m[d]||p;return r?n.createElement(c,i(i({ref:t},u),{},{components:r})):n.createElement(c,i({ref:t},u))}));function c(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=r.length,i=new Array(p);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[s]="string"==typeof e?e:a,i[1]=o;for(var y=2;y<p;y++)i[y]=r[y];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},23995:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>g,contentTitle:()=>f,default:()=>N,frontMatter:()=>c,metadata:()=>b,toc:()=>h});var n=r(15680),a=Object.defineProperty,p=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,s=(e,t)=>{for(var r in t||(t={}))l.call(t,r)&&u(e,r,t[r]);if(o)for(var r of o(t))y.call(t,r)&&u(e,r,t[r]);return e},m=(e,t)=>p(e,i(t)),d=(e,t)=>{var r={};for(var n in e)l.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&y.call(e,n)&&(r[n]=e[n]);return r};const c={title:"For",slug:"/rimbu/deep/Path/Result/For/type"},f="type For<T,Tokens,Maybe>",b={unversionedId:"rimbu_deep/Path/Result/For.type",id:"rimbu_deep/Path/Result/For.type",title:"For",description:"Determines the result type for an array of tokens representing subpaths in type T.",source:"@site/api/rimbu_deep/Path/Result/For.type.mdx",sourceDirName:"rimbu_deep/Path/Result",slug:"/rimbu/deep/Path/Result/For/type",permalink:"/api/rimbu/deep/Path/Result/For/type",draft:!1,tags:[],version:"current",frontMatter:{title:"For",slug:"/rimbu/deep/Path/Result/For/type"},sidebar:"defaultSidebar",previous:{title:"Result (namespace)",permalink:"/api/rimbu/deep/Path/Result/namespace"},next:{title:"Part",permalink:"/api/rimbu/deep/Path/Result/Part/type"}},g={},h=[{value:"Definition",id:"definition",level:2}],P={toc:h},O="wrapper";function N(e){var t=e,{components:r}=t,a=d(t,["components"]);return(0,n.yg)(O,m(s(s({},P),a),{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h1",s({},{id:"type-forttokensmaybe"}),(0,n.yg)("inlineCode",{parentName:"h1"},"type For<T,Tokens,Maybe>")),(0,n.yg)("p",null,"Determines the result type for an array of tokens representing subpaths in type ",(0,n.yg)("inlineCode",{parentName:"p"},"T"),"."),(0,n.yg)("h2",s({},{id:"definition"}),"Definition"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"type For<T, Tokens, Maybe extends boolean = "),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/deep/Path/Internal/IsOptional/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Path.Internal.IsOptional")),(0,n.yg)("inlineCode",{parentName:"p"},"<T>> = Tokens extends [] ? "),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/deep/Path/Internal/MaybeValue/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Path.Internal.MaybeValue")),(0,n.yg)("inlineCode",{parentName:"p"},"<T, Maybe> : "),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/deep/Path/Internal/IsOptional/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Path.Internal.IsOptional")),(0,n.yg)("inlineCode",{parentName:"p"},"<T> extends true ? "),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/For/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Path.Result.For")),(0,n.yg)("inlineCode",{parentName:"p"},"<Exclude<T, undefined "),(0,n.yg)("code",null,"|"),(0,n.yg)("inlineCode",{parentName:"p"},"null>, Tokens, Maybe> : Tokens extends ['?.', infer Key, ...infer Rest] ?"),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/For/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Path.Result.For")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/Part/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Path.Result.Part")),(0,n.yg)("inlineCode",{parentName:"p"},"<T, Key, Maybe>, Rest, true> : Tokens extends ['.', infer Key, ...infer Rest] ? "),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/For/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Path.Result.For")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/Part/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Path.Result.Part")),(0,n.yg)("inlineCode",{parentName:"p"},"<T, Key, false>, Rest, Maybe> : Tokens extends [infer Key, ...infer Rest] ? "),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/For/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Path.Result.For")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/Part/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Path.Result.Part")),(0,n.yg)("inlineCode",{parentName:"p"},"<T, Key, false>, Rest, Maybe> : never;")))}N.isMDXComponent=!0}}]);