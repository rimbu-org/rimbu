"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[53052],{15680:(e,r,t)=>{t.d(r,{xA:()=>l,yg:()=>y});var a=t(96540);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function d(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=a.createContext({}),s=function(e){var r=a.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=s(e.components);return a.createElement(p.Provider,{value:r},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),c=s(t),m=n,y=c["".concat(p,".").concat(m)]||c[m]||u[m]||o;return t?a.createElement(y,i(i({ref:r},l),{},{components:t})):a.createElement(y,i({ref:r},l))}));function y(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=m;var d={};for(var p in r)hasOwnProperty.call(r,p)&&(d[p]=r[p]);d.originalType=e,d[c]="string"==typeof e?e:n,i[1]=d;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},91561:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>O,contentTitle:()=>f,default:()=>S,frontMatter:()=>y,metadata:()=>h,toc:()=>b});var a=t(15680),n=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,l=(e,r,t)=>r in e?n(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,c=(e,r)=>{for(var t in r||(r={}))p.call(r,t)&&l(e,t,r[t]);if(d)for(var t of d(r))s.call(r,t)&&l(e,t,r[t]);return e},u=(e,r)=>o(e,i(r)),m=(e,r)=>{var t={};for(var a in e)p.call(e,a)&&r.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&d)for(var a of d(e))r.indexOf(a)<0&&s.call(e,a)&&(t[a]=e[a]);return t};const y={title:"OrderedHashSet<T>",slug:"/rimbu/ordered/OrderedHashSet/interface"},f="interface OrderedHashSet<T>",h={unversionedId:"rimbu_ordered/OrderedHashSet.interface",id:"rimbu_ordered/OrderedHashSet.interface",title:"OrderedHashSet<T>",description:"A type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedHashSet API documentation",source:"@site/api/rimbu_ordered/OrderedHashSet.interface.mdx",sourceDirName:"rimbu_ordered",slug:"/rimbu/ordered/OrderedHashSet/interface",permalink:"/api/rimbu/ordered/OrderedHashSet/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"OrderedHashSet<T>",slug:"/rimbu/ordered/OrderedHashSet/interface"},sidebar:"defaultSidebar",previous:{title:"OrderedHashSet.Types",permalink:"/api/rimbu/ordered/OrderedHashSet/Types/interface"},next:{title:"OrderedMap (namespace)",permalink:"/api/rimbu/ordered/OrderedMap/namespace"}},O={},b=[{value:"Type parameters",id:"type-parameters",level:2}],g={toc:b},v="wrapper";function S(e){var r=e,{components:t}=r,n=m(r,["components"]);return(0,a.yg)(v,u(c(c({},g),n),{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",c({},{id:"interface-orderedhashsett"}),(0,a.yg)("inlineCode",{parentName:"h1"},"interface OrderedHashSet<T>")),(0,a.yg)("p",null,"A type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the ",(0,a.yg)("a",c({parentName:"p"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,a.yg)("a",c({parentName:"p"},{href:"https://rimbu.org/api/rimbu/ordered/set/OrderedHashSet/interface"}),"OrderedHashSet API documentation")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Companion namespace:")," ",(0,a.yg)("a",c({parentName:"p"},{href:"/api/rimbu/ordered/OrderedHashSet/namespace"}),"OrderedHashSet")),(0,a.yg)("h2",c({},{id:"type-parameters"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",c({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",c({parentName:"tr"},{align:null}),"T"),(0,a.yg)("td",c({parentName:"tr"},{align:null}),"the value type")))),(0,a.yg)("admonition",c({},{title:"note",type:"note"}),(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},"The OrderedHashSet keeps the insertion order of values, thus iterators and stream will also reflect this order. - The OrderedHashSet wraps around a HashSet instance, thus has the same time complexity as the HashSet. - The OrderedHashSet keeps the key insertion order in a List, thus its space complexity is higher than a regular HashSet."))),(0,a.yg)("admonition",c({},{title:"example",type:"note"}),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",c({parentName:"pre"},{className:"language-ts"}),"const s1 = OrderedHashSet.empty<string>()\nconst s2 = OrderedHashSet.of('a', 'b', 'c')\n"))))}S.isMDXComponent=!0}}]);