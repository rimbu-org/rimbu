"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[90368],{15680:(e,a,n)=>{n.d(a,{xA:()=>o,yg:()=>s});var t=n(96540);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function d(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=t.createContext({}),y=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},o=function(e){var a=y(e.components);return t.createElement(p.Provider,{value:a},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),m=y(n),u=i,s=m["".concat(p,".").concat(u)]||m[u]||g[u]||l;return n?t.createElement(s,r(r({ref:a},o),{},{components:n})):t.createElement(s,r({ref:a},o))}));function s(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=u;var d={};for(var p in a)hasOwnProperty.call(a,p)&&(d[p]=a[p]);d.originalType=e,d[m]="string"==typeof e?e:i,r[1]=d;for(var y=2;y<l;y++)r[y]=n[y];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},96930:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>h,contentTitle:()=>N,default:()=>C,frontMatter:()=>s,metadata:()=>c,toc:()=>v});var t=n(15680),i=Object.defineProperty,l=Object.defineProperties,r=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable,o=(e,a,n)=>a in e?i(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,m=(e,a)=>{for(var n in a||(a={}))p.call(a,n)&&o(e,n,a[n]);if(d)for(var n of d(a))y.call(a,n)&&o(e,n,a[n]);return e},g=(e,a)=>l(e,r(a)),u=(e,a)=>{var n={};for(var t in e)p.call(e,t)&&a.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&d)for(var t of d(e))a.indexOf(t)<0&&y.call(e,t)&&(n[t]=e[t]);return n};const s={title:"OrderedMapBuilder<K,V,Tp,TpG>",slug:"/rimbu/ordered/map-custom/OrderedMapBuilder/class"},N="class OrderedMapBuilder<K,V,Tp,TpG>",c={unversionedId:"rimbu_ordered/map-custom/OrderedMapBuilder.class",id:"rimbu_ordered/map-custom/OrderedMapBuilder.class",title:"OrderedMapBuilder<K,V,Tp,TpG>",description:"undocumented",source:"@site/api/rimbu_ordered/map-custom/OrderedMapBuilder.class.mdx",sourceDirName:"rimbu_ordered/map-custom",slug:"/rimbu/ordered/map-custom/OrderedMapBuilder/class",permalink:"/api/rimbu/ordered/map-custom/OrderedMapBuilder/class",draft:!1,tags:[],version:"current",frontMatter:{title:"OrderedMapBuilder<K,V,Tp,TpG>",slug:"/rimbu/ordered/map-custom/OrderedMapBuilder/class"},sidebar:"defaultSidebar",previous:{title:"OrderedMapBase<K,V,Tp>",permalink:"/api/rimbu/ordered/map-custom/OrderedMapBase/interface"},next:{title:"OrderedMapContextImpl<UK,Tp>",permalink:"/api/rimbu/ordered/map-custom/OrderedMapContextImpl/class"}},h={},v=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>_keyOrderBuilder</code>",id:"_keyorderbuilder",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>_lock</code>",id:"_lock",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>_mapBuilder</code>",id:"_mapbuilder",level:3},{value:"Definition",id:"definition-2",level:4},{value:"<code>addEntries</code>",id:"addentries",level:3},{value:"Definition",id:"definition-3",level:4},{value:"<code>addEntry</code>",id:"addentry",level:3},{value:"Definition",id:"definition-4",level:4},{value:"<code>build</code>",id:"build",level:3},{value:"Definition",id:"definition-5",level:4},{value:"<code>buildMapValues</code>",id:"buildmapvalues",level:3},{value:"Definition",id:"definition-6",level:4},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition-7",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>forEach</code>",id:"foreach",level:3},{value:"Definition",id:"definition-8",level:4},{value:"<code>get</code>",id:"get",level:3},{value:"Definition",id:"definition-9",level:4},{value:"<code>hasKey</code>",id:"haskey",level:3},{value:"Definition",id:"definition-10",level:4},{value:"<code>isEmpty</code>",id:"isempty",level:3},{value:"Definition",id:"definition-11",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>keyOrderBuilder</code>",id:"keyorderbuilder",level:3},{value:"Definition",id:"definition-12",level:4},{value:"<code>mapBuilder</code>",id:"mapbuilder",level:3},{value:"Definition",id:"definition-13",level:4},{value:"<code>modifyAt</code>",id:"modifyat",level:3},{value:"Definition",id:"definition-14",level:4},{value:"<code>removeKey</code>",id:"removekey",level:3},{value:"Definition",id:"definition-15",level:4},{value:"<code>removeKeys</code>",id:"removekeys",level:3},{value:"Definition",id:"definition-16",level:4},{value:"<code>set</code>",id:"set",level:3},{value:"Definition",id:"definition-17",level:4},{value:"<code>size</code>",id:"size",level:3},{value:"Definition",id:"definition-18",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>source</code>",id:"source",level:3},{value:"Definition",id:"definition-19",level:4},{value:"<code>updateAt</code>",id:"updateat",level:3},{value:"Definition",id:"definition-20",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>addEntries</code>",id:"addentries-1",level:3},{value:"Definition",id:"definition-21",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>addEntry</code>",id:"addentry-1",level:3},{value:"Definition",id:"definition-22",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"<code>build</code>",id:"build-1",level:3},{value:"Definition",id:"definition-23",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"<code>buildMapValues</code>",id:"buildmapvalues-1",level:3},{value:"Definition",id:"definition-24",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"<code>checkLock</code>",id:"checklock",level:3},{value:"Definition",id:"definition-25",level:4},{value:"<code>forEach</code>",id:"foreach-1",level:3},{value:"Definition",id:"definition-26",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"<code>get</code>",id:"get-1",level:3},{value:"Definitions",id:"definitions",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"<code>hasKey</code>",id:"haskey-1",level:3},{value:"Definition",id:"definition-27",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Overrides",id:"overrides-9",level:4},{value:"<code>modifyAt</code>",id:"modifyat-1",level:3},{value:"Definition",id:"definition-28",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Overrides",id:"overrides-10",level:4},{value:"<code>prepareMutate</code>",id:"preparemutate",level:3},{value:"Definition",id:"definition-29",level:4},{value:"<code>removeFromKeyOrderInternal</code>",id:"removefromkeyorderinternal",level:3},{value:"Definition",id:"definition-30",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"<code>removeKey</code>",id:"removekey-1",level:3},{value:"Definitions",id:"definitions-1",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Overrides",id:"overrides-11",level:4},{value:"<code>removeKeys</code>",id:"removekeys-1",level:3},{value:"Definition",id:"definition-31",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Overrides",id:"overrides-12",level:4},{value:"<code>set</code>",id:"set-1",level:3},{value:"Definition",id:"definition-32",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Overrides",id:"overrides-13",level:4},{value:"<code>updateAt</code>",id:"updateat-1",level:3},{value:"Definitions",id:"definitions-2",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Overrides",id:"overrides-14",level:4}],f={toc:v},b="wrapper";function C(e){var a=e,{components:n}=a,i=u(a,["components"]);return(0,t.yg)(b,g(m(m({},f),i),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",m({},{id:"class-orderedmapbuilderkvtptpg"}),(0,t.yg)("inlineCode",{parentName:"h1"},"class OrderedMapBuilder<K,V,Tp,TpG>")),(0,t.yg)("p",null,"undocumented"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Implements:")," ",(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/ordered/map-custom/OrderedMapBase/Builder/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"OrderedMapBase.Builder<K,V,Tp>"))),(0,t.yg)("h2",m({},{id:"type-parameters"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Constraints"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),"K"),(0,t.yg)("td",m({parentName:"tr"},{align:null})),(0,t.yg)("td",m({parentName:"tr"},{align:null})),(0,t.yg)("td",m({parentName:"tr"},{align:null}),"undocumented")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),"V"),(0,t.yg)("td",m({parentName:"tr"},{align:null})),(0,t.yg)("td",m({parentName:"tr"},{align:null})),(0,t.yg)("td",m({parentName:"tr"},{align:null}),"undocumented")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),"Tp"),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/ordered/map-custom/OrderedMapTypes/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"OrderedMapTypes"))),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/ordered/map-custom/OrderedMapTypes/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"OrderedMapTypes"))),(0,t.yg)("td",m({parentName:"tr"},{align:null}),"undocumented")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),"TpG"),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"td"},"<Tp, K, V>")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"td"},"<Tp, K, V>")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),"undocumented")))),(0,t.yg)("h2",m({},{id:"properties"}),"Properties"),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"_keyorderbuilder"}),(0,t.yg)("inlineCode",{parentName:"h3"},"_keyOrderBuilder")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"_keyOrderBuilder?: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/list/List/Builder/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"List.Builder")),(0,t.yg)("inlineCode",{parentName:"p"},"<K>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"_lock"}),(0,t.yg)("inlineCode",{parentName:"h3"},"_lock")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-1"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"_lock: boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"_mapbuilder"}),(0,t.yg)("inlineCode",{parentName:"h3"},"_mapBuilder")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-2"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"_mapBuilder?: TpG['sourceBuilder'];")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"addentries"}),(0,t.yg)("inlineCode",{parentName:"h3"},"addEntries")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-3"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"addEntries: (entries: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<readonly [K, V]>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"addentry"}),(0,t.yg)("inlineCode",{parentName:"h3"},"addEntry")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-4"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"addEntry: (entry: readonly [K, V]) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"build"}),(0,t.yg)("inlineCode",{parentName:"h3"},"build")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-5"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"build: () => "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"p"},'<Tp, K, V>["normal"];')))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"buildmapvalues"}),(0,t.yg)("inlineCode",{parentName:"h3"},"buildMapValues")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-6"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"buildMapValues: <V2>(f: (value: V, key: K) => V2) => "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"p"},'<Tp, K, V2>["normal"];')))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"context"}),(0,t.yg)("inlineCode",{parentName:"h3"},"context")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-7"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly context: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"p"},"<Tp, K, V>['context'];"))),(0,t.yg)("h4",m({},{id:"overrides"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#context"}),"Builder.context"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"foreach"}),(0,t.yg)("inlineCode",{parentName:"h3"},"forEach")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-8"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"forEach: (f: (entry: readonly [K, V], index: number, halt: () => void) => void, options?: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"reversed?: boolean;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"state?: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"TraverseState")),(0,t.yg)("inlineCode",{parentName:"p"},";"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}) => void;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"get"}),(0,t.yg)("inlineCode",{parentName:"h3"},"get")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-9"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get: <UK, O>(key: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>, otherwise?: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,t.yg)("inlineCode",{parentName:"p"},"<O>) => V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"haskey"}),(0,t.yg)("inlineCode",{parentName:"h3"},"hasKey")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-10"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"hasKey: <UK>(key: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"isempty"}),(0,t.yg)("inlineCode",{parentName:"h3"},"isEmpty")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-11"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get isEmpty(): boolean;"))),(0,t.yg)("h4",m({},{id:"overrides-1"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#isEmpty"}),"Builder.isEmpty"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"keyorderbuilder"}),(0,t.yg)("inlineCode",{parentName:"h3"},"keyOrderBuilder")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-12"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get keyOrderBuilder(): "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/list/List/Builder/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"List.Builder")),(0,t.yg)("inlineCode",{parentName:"p"},"<K>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"mapbuilder"}),(0,t.yg)("inlineCode",{parentName:"h3"},"mapBuilder")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-13"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get mapBuilder(): TpG['sourceBuilder'];")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"modifyat"}),(0,t.yg)("inlineCode",{parentName:"h3"},"modifyAt")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-14"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"modifyAt: (key: K, options: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"ifNew?: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/OptLazyOr/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazyOr")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, Token>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"ifExists?: ((currentValue: V, remove: Token) => V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"},"Token)"),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," V;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"removekey"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeKey")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-15"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeKey: <UK, O>(key: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>, otherwise?: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,t.yg)("inlineCode",{parentName:"p"},"<O>) => V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"removekeys"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeKeys")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-16"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeKeys: <UK>(keys: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<"),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"set"}),(0,t.yg)("inlineCode",{parentName:"h3"},"set")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-17"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"set: (key: K, value: V) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"size"}),(0,t.yg)("inlineCode",{parentName:"h3"},"size")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-18"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get size(): number;"))),(0,t.yg)("h4",m({},{id:"overrides-2"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#size"}),"Builder.size"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"source"}),(0,t.yg)("inlineCode",{parentName:"h3"},"source")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-19"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},'source?: TpG["nonEmpty"] '),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"updateat"}),(0,t.yg)("inlineCode",{parentName:"h3"},"updateAt")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-20"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"updateAt: <O>(key: K, update: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/Update/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Update")),(0,t.yg)("inlineCode",{parentName:"p"},"<V>, otherwise?: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,t.yg)("inlineCode",{parentName:"p"},"<O>) => V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;")))),(0,t.yg)("h2",m({},{id:"methods"}),"Methods"),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"addentries-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"addEntries")),(0,t.yg)("p",null,"Adds given ",(0,t.yg)("inlineCode",{parentName:"p"},"entries")," to the builder.")),(0,t.yg)("h4",m({},{id:"definition-21"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"addEntries(entries: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<readonly [K, V]>): boolean;"))),(0,t.yg)("h4",m({},{id:"parameters"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"entries")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"td"},"<readonly [K, V]>")),(0,t.yg)("td",m({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",m({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.addEntries([1, 'a'], [3, 'c']])   // => true\nm.addEntries([])                    // => false\n"))),(0,t.yg)("h4",m({},{id:"overrides-3"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#addEntries"}),"Builder.addEntries"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"addentry-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"addEntry")),(0,t.yg)("p",null,"Adds given ",(0,t.yg)("inlineCode",{parentName:"p"},"entry")," to the builder.")),(0,t.yg)("h4",m({},{id:"definition-22"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"addEntry(entry: readonly [K, V]): boolean;"))),(0,t.yg)("h4",m({},{id:"parameters-1"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"entry")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"readonly [K, V]")),(0,t.yg)("td",m({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",m({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.addEntry([3, 'c'])   // => true\nm.addEntry([1, 'a'])   // => false\n"))),(0,t.yg)("h4",m({},{id:"overrides-4"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#addEntry"}),"Builder.addEntry"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"build-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"build")),(0,t.yg)("p",null,"Returns an immutable collection instance containing the entries in this builder.")),(0,t.yg)("h4",m({},{id:"definition-23"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"build(): "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"p"},"<Tp, K, V>['normal'];"))),(0,t.yg)("admonition",m({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nconst m2: HashMap<number, string> = m.build()\n"))),(0,t.yg)("h4",m({},{id:"overrides-5"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#build"}),"Builder.build"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"buildmapvalues-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"buildMapValues")),(0,t.yg)("p",null,"Returns an immutable instance of the entries in this builder, with given ",(0,t.yg)("inlineCode",{parentName:"p"},"mapValues")," function applied to all the values in the entries.")),(0,t.yg)("h4",m({},{id:"definition-24"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"buildMapValues<V2>(mapFun: (value: V, key: K) => V2): (Tp & "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/KeyValue/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"KeyValue")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, V2>)['normal'];"))),(0,t.yg)("h4",m({},{id:"type-parameters-1"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),"V2"),(0,t.yg)("td",m({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",m({},{id:"parameters-2"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"mapFun")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"(value: V, key: K) => V2")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),"a function that takes an entry value and its key, and returns a new value")))),(0,t.yg)("admonition",m({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nconst m2: HashMap<number, number> = m.buildMapValues(value => value.length)\n"))),(0,t.yg)("h4",m({},{id:"overrides-6"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#buildMapValues"}),"Builder.buildMapValues"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"checklock"}),(0,t.yg)("inlineCode",{parentName:"h3"},"checkLock")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-25"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"checkLock(): void;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"foreach-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"forEach")),(0,t.yg)("p",null,"Performs given function ",(0,t.yg)("inlineCode",{parentName:"p"},"f")," for each entry of the builder.")),(0,t.yg)("h4",m({},{id:"definition-26"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"forEach(f: (entry: readonly [K, V], index: number, halt: () => void) => void, options?: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"state?: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"TraverseState")),(0,t.yg)("inlineCode",{parentName:"p"},";"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): void;"))),(0,t.yg)("h4",m({},{id:"parameters-3"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"f")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"(entry: readonly [K, V], index: number, halt: () => void) => void")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),"the function to perform for each element, receiving:",(0,t.yg)("br",null)," - ",(0,t.yg)("inlineCode",{parentName:"td"},"entry"),": the next key-value entry",(0,t.yg)("br",null)," - ",(0,t.yg)("inlineCode",{parentName:"td"},"index"),": the index of the element",(0,t.yg)("br",null)," - ",(0,t.yg)("inlineCode",{parentName:"td"},"halt"),": a function that, if called, ensures that no new elements are passed")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"options")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"{"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"state?: "),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"TraverseState")),(0,t.yg)("inlineCode",{parentName:"td"},";"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"}")),(0,t.yg)("td",m({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",m({},{title:"throws",type:"note"}),(0,t.yg)("p",{parentName:"admonition"},"RibuError.ModifiedBuilderWhileLoopingOverItError if the builder is modified while looping over it")),(0,t.yg)("admonition",m({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"HashMap.of([1, 'a'], [2, 'b'], [3, 'c']).toBuilder().forEach((entry, i, halt) => {\nconsole.log([entry[1], entry[0]]);\nif (i >= 1) halt();\n})\n// => logs ['a', 1]  ['b', 2]\n"))),(0,t.yg)("admonition",m({},{title:"note",type:"note"}),(0,t.yg)("p",{parentName:"admonition"},"O(N)")),(0,t.yg)("h4",m({},{id:"overrides-7"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#forEach"}),"Builder.forEach"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"get-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"get")),(0,t.yg)("p",null,"Returns the value associated with the given ",(0,t.yg)("inlineCode",{parentName:"p"},"key"),", or given ",(0,t.yg)("inlineCode",{parentName:"p"},"otherwise")," value if the key is not in the collection.")),(0,t.yg)("h4",m({},{id:"definitions"}),"Definitions"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get<UK = K>(key: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>): V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined;"))),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get<UK, O>(key: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>, otherwise: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,t.yg)("inlineCode",{parentName:"p"},"<O>): V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;"))),(0,t.yg)("h4",m({},{id:"type-parameters-2"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),"UK"),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",m({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",m({},{id:"parameters-4"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),"the key to look for")))),(0,t.yg)("admonition",m({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.get(2)          // => 'b'\nm.get(3)          // => undefined\nm.get(2, 'none')  // => 'b'\nm.get(3, 'none')  // => 'none'\n"))),(0,t.yg)("h4",m({},{id:"overrides-8"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#get"}),"Builder.get"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"haskey-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"hasKey")),(0,t.yg)("p",null,"Returns true if the given ",(0,t.yg)("inlineCode",{parentName:"p"},"key")," is present in the builder.")),(0,t.yg)("h4",m({},{id:"definition-27"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"hasKey<UK = K>(key: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>): boolean;"))),(0,t.yg)("h4",m({},{id:"type-parameters-3"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),"UK"),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",m({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",m({},{id:"parameters-5"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),"the key to look for")))),(0,t.yg)("admonition",m({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.hasKey(2)    // => true\nm.hasKey(3)    // => false\n"))),(0,t.yg)("h4",m({},{id:"overrides-9"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#hasKey"}),"Builder.hasKey"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"modifyat-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"modifyAt")),(0,t.yg)("p",null,"Modifies or creates the builder entry with given ",(0,t.yg)("inlineCode",{parentName:"p"},"atKey")," as its key according to given ",(0,t.yg)("inlineCode",{parentName:"p"},"options"),".")),(0,t.yg)("h4",m({},{id:"definition-28"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"modifyAt(key: K, options: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"ifNew?: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/OptLazyOr/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazyOr")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, Token>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"ifExists?: (<V2 extends V = V>(currentValue: V & V2, remove: Token) => V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"},"Token)"),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," V;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): boolean;"))),(0,t.yg)("h4",m({},{id:"parameters-6"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",m({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"options")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"{"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"ifNew?: "),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/common/OptLazyOr/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazyOr")),(0,t.yg)("inlineCode",{parentName:"td"},"<V, Token>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"ifExists?: (<V2 extends V = V>(currentValue: V & V2, remove: Token) => V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"td"},"Token)"),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"td"}," V;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"}")),(0,t.yg)("td",m({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",m({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.modifyAt(1, { ifNew: 'd' })\n// => false\nm.modifyAt(3, { ifNew: 'c' })\n// => true\nm.modifyAt(3, { ifNew: (none) => 1 < 2 ? none : 'c' })\n// => false\nm.modifyAt(2, { ifExists: () => 'c' })\n// => true\nm.modifyAt(1, { ifExists: (v) => v + 'z' })\n// => true\nm.modifyAt(2, { ifExists: (v, remove) => v === 'a' ? v : remove })\n// => true\n"))),(0,t.yg)("h4",m({},{id:"overrides-10"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#modifyAt"}),"Builder.modifyAt"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"preparemutate"}),(0,t.yg)("inlineCode",{parentName:"h3"},"prepareMutate")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-29"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"prepareMutate(): void;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"removefromkeyorderinternal"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeFromKeyOrderInternal")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",m({},{id:"definition-30"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeFromKeyOrderInternal(key: K): void;"))),(0,t.yg)("h4",m({},{id:"parameters-7"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",m({parentName:"tr"},{align:null})))))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"removekey-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeKey")),(0,t.yg)("p",null,"Removes the entry with given ",(0,t.yg)("inlineCode",{parentName:"p"},"key")," from the builder.")),(0,t.yg)("h4",m({},{id:"definitions-1"}),"Definitions"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeKey<UK = K>(key: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>): V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined;"))),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeKey<UK, O>(key: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>, otherwise: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,t.yg)("inlineCode",{parentName:"p"},"<O>): V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;"))),(0,t.yg)("h4",m({},{id:"type-parameters-4"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),"UK"),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",m({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",m({},{id:"parameters-8"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),"the key of the entry to remove")))),(0,t.yg)("admonition",m({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeKey(2)        // => 'b'\nm.removeKey(3)        // => undefined\nm.removeKey(3, 'c')   // => 'c'\n"))),(0,t.yg)("h4",m({},{id:"overrides-11"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#removeKey"}),"Builder.removeKey"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"removekeys-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeKeys")),(0,t.yg)("p",null,"Removes the entries in the given ",(0,t.yg)("inlineCode",{parentName:"p"},"keys")," ",(0,t.yg)("inlineCode",{parentName:"p"},"StreamSource")," from the builder.")),(0,t.yg)("h4",m({},{id:"definition-31"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeKeys<UK = K>(keys: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<"),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>>): boolean;"))),(0,t.yg)("h4",m({},{id:"type-parameters-5"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),"UK"),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",m({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",m({},{id:"parameters-9"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"keys")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"td"},"<"),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<K, UK>>")),(0,t.yg)("td",m({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",m({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeKeys([3, 4, 5])  // => false\nm.removeKeys([1, 10])    // => true\n"))),(0,t.yg)("h4",m({},{id:"overrides-12"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#removeKeys"}),"Builder.removeKeys"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"set-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"set")),(0,t.yg)("p",null,"Associates given ",(0,t.yg)("inlineCode",{parentName:"p"},"key")," with given ",(0,t.yg)("inlineCode",{parentName:"p"},"value")," in the builder.")),(0,t.yg)("h4",m({},{id:"definition-32"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"set(key: K, value: V): boolean;"))),(0,t.yg)("h4",m({},{id:"parameters-10"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),"the entry key")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"value")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"V")),(0,t.yg)("td",m({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",m({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.set(3, 'c')   // => true\nm.set(1, 'a')   // => false\n"))),(0,t.yg)("h4",m({},{id:"overrides-13"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#set"}),"Builder.set"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"updateat-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"updateAt")),(0,t.yg)("p",null,"Updates the value in the builder associated with given ",(0,t.yg)("inlineCode",{parentName:"p"},"key")," according to given ",(0,t.yg)("inlineCode",{parentName:"p"},"update")," value or function.")),(0,t.yg)("h4",m({},{id:"definitions-2"}),"Definitions"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"updateAt(key: K, update: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Update/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RMapBase.Update")),(0,t.yg)("inlineCode",{parentName:"p"},"<V>): V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined;"))),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"updateAt<O>(key: K, update: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Update/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RMapBase.Update")),(0,t.yg)("inlineCode",{parentName:"p"},"<V>, otherwise: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,t.yg)("inlineCode",{parentName:"p"},"<O>): V "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;"))),(0,t.yg)("h4",m({},{id:"parameters-11"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),"the key of the entry to update")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"update")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),(0,t.yg)("a",m({parentName:"td"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Update/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RMapBase.Update")),(0,t.yg)("inlineCode",{parentName:"td"},"<V>")),(0,t.yg)("td",m({parentName:"tr"},{align:null}),"a new value or function taking the previous value and returning a new value")))),(0,t.yg)("admonition",m({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.updateAt(1, 'a')           // => 'a'\nm.updateAt(1, 'b')           // => 'b'\nm.updateAt(2, v => v + 'z')  // => 'b'\n"))),(0,t.yg)("h4",m({},{id:"overrides-14"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#updateAt"}),"Builder.updateAt"))))}C.isMDXComponent=!0}}]);