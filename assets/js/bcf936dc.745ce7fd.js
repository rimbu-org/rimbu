"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[98189],{15680:(e,a,t)=>{t.d(a,{xA:()=>c,yg:()=>y});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),p=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},c=function(e){var a=p(e.components);return n.createElement(s.Provider,{value:a},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(t),u=r,y=m["".concat(s,".").concat(u)]||m[u]||d[u]||l;return t?n.createElement(y,o(o({ref:a},c),{},{components:t})):n.createElement(y,o({ref:a},c))}));function y(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=u;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},10684:(e,a,t)=>{t.d(a,{P:()=>l});var n=t(96540);function r(e){return e.replace(/</g,"%3C").replace(/>/g,"%3E")}function l(e){const a=r(`https://g.gravizo.com/svg?\n  @startuml;\n  skinparam monochrome true;\n  skinparam backgroundColor none;\n  skinparam classBackgroundColor darkslategrey;\n  skinparam classBorderColor gray;\n  skinparam classFontColor lightgray;\n  skinparam classStereotypeFontColor darkgray;\n  skinparam arrowColor lightgray;\n  skinparam linetype ortho;\n  ${e.contents}\n  @enduml;`);return n.createElement("img",{src:a,className:"diagram"})}},7738:(e,a,t)=>{t.d(a,{G:()=>y});var n=t(96540),r=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,a,t)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,m=(e,a)=>{for(var t in a||(a={}))s.call(a,t)&&c(e,t,a[t]);if(i)for(var t of i(a))p.call(a,t)&&c(e,t,a[t]);return e},d=(e,a)=>l(e,o(a));const u={previewwindow:"console",view:"split",editorsize:"60",codemirror:"1",moduleview:"1"};function y(e){const a=function(e){let a="",t="";for(const n in e)a+=`${t}${n}=${e[n]}`,t="&";return""===a?"":`?${a}`}(d(m({},u),{module:`/src/${e.path}`})),t=`https://codesandbox.io/embed/github/vitoke/rimbu-sandbox/tree/main${a}`,r=`https://codesandbox.io/s/github/vitoke/rimbu-sandbox/tree/main${a}`;return n.createElement(n.Fragment,null,n.createElement("a",{target:"_blank",className:"button button--secondary",href:r,style:{marginBottom:10}},"Open file below in new window with full type-check"),n.createElement("iframe",{src:t,className:"codesandbox-iframe",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}))}},85322:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>v,contentTitle:()=>f,default:()=>O,frontMatter:()=>h,metadata:()=>w,toc:()=>C});var n=t(15680),r=t(10684);const l="\ninterface Streamable<[R, C, V]>;\ninterface VariantTable<R, C, V>;\nabstract Table<R, C, V>;\nclass HashTableHashColumn<R, C, V>;\nclass HashTableSortedColumn<R, C, V>;\nclass SortedTableHashColumn<R, C, V>;\nclass SortedTableSortedColumn<R, C, V>;\n\nStreamable <|.. VariantTable;\nVariantTable <|-- Table;\nTable <|-- HashTableHashColumn;\nTable <|-- HashTableSortedColumn;\nTable <|-- SortedTableHashColumn;\nTable <|-- SortedTableSortedColumn;\n";var o=t(7738),i=Object.defineProperty,s=Object.defineProperties,p=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,u=(e,a,t)=>a in e?i(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,y=(e,a)=>{for(var t in a||(a={}))m.call(a,t)&&u(e,t,a[t]);if(c)for(var t of c(a))d.call(a,t)&&u(e,t,a[t]);return e},b=(e,a)=>s(e,p(a)),g=(e,a)=>{var t={};for(var n in e)m.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&c)for(var n of c(e))a.indexOf(n)<0&&d.call(e,n)&&(t[n]=e[n]);return t};const h={id:"table",slug:"./table",title:"Table"},f="Table",w={unversionedId:"collections/table",id:"collections/table",title:"Table",description:"A Table is an immutable 2-dimensional Map, containing row keys and column keys, where a combination of a row and column key can contain one value.",source:"@site/docs/collections/table.mdx",sourceDirName:"collections",slug:"/collections/table",permalink:"/docs/collections/table",draft:!1,editUrl:"https://github.com/rimbu-org/rimbu/edit/master/website/docs/collections/table.mdx",tags:[],version:"current",frontMatter:{id:"table",slug:"./table",title:"Table"},sidebar:"sidebar",previous:{title:"Stream",permalink:"/docs/collections/stream"},next:{title:"Overview",permalink:"/docs/deep/overview"}},v={},C=[{value:"When to use",id:"when-to-use",level:2},{value:"Exports",id:"exports",level:2},{value:"Inheritance",id:"inheritance",level:2},{value:"Usage",id:"usage",level:2},{value:"Creation",id:"creation",level:3},{value:"Query",id:"query",level:3},{value:"Builder",id:"builder",level:3}],T={toc:C},N="wrapper";function O(e){var a=e,{components:t}=a,i=g(a,["components"]);return(0,n.yg)(N,b(y(y({},T),i),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",y({},{id:"table"}),"Table"),(0,n.yg)("p",null,"A ",(0,n.yg)("inlineCode",{parentName:"p"},"Table")," is an immutable 2-dimensional Map, containing row keys and column keys, where a combination of a row and column key can contain one value."),(0,n.yg)("h2",y({},{id:"when-to-use"}),"When to use"),(0,n.yg)("p",null,"The Table structure is useful in cases where there are two properties that in combination have some value. For example, a school with students needs to store a grade for each class the student takes. The school is only interested in the last grade. In this case, a Table with the student as row key, the class as column key, and the grade as value would allow easy access to all the grades."),(0,n.yg)("admonition",y({},{type:"tip"}),(0,n.yg)("p",{parentName:"admonition"},"Internally, a ",(0,n.yg)("inlineCode",{parentName:"p"},"Table<R, C, V>")," is built on: ",(0,n.yg)("inlineCode",{parentName:"p"},"RMap<R, RMap<C, V>>"),". So it is a Map of Maps. The ",(0,n.yg)("inlineCode",{parentName:"p"},".rowMap")," property gives direct access to this Map, and can sometimes provide more convenient ways to access the contained data.")),(0,n.yg)("h2",y({},{id:"exports"}),"Exports"),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"@rimbu/core")," package exports the following ",(0,n.yg)("em",{parentName:"p"},"abstract")," Table TypeScript types:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),(0,n.yg)("a",y({parentName:"td"},{href:"/api/rimbu/table/VariantTable/namespace"}),(0,n.yg)("inlineCode",{parentName:"a"},"VariantTable<R, C, V>"))),(0,n.yg)("td",y({parentName:"tr"},{align:null}),"a type-variant ",(0,n.yg)("inlineCode",{parentName:"td"},"Table")," with row keys R, column keys C, and values V")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),(0,n.yg)("a",y({parentName:"td"},{href:"/api/rimbu/table/Table/namespace"}),(0,n.yg)("inlineCode",{parentName:"a"},"Table<R, C, V>"))),(0,n.yg)("td",y({parentName:"tr"},{align:null}),"a generic ",(0,n.yg)("inlineCode",{parentName:"td"},"Table")," with row keys R, column keys C, and values V")))),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"@rimbu/core")," package exports the following ",(0,n.yg)("em",{parentName:"p"},"concrete")," Table types:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),(0,n.yg)("a",y({parentName:"td"},{href:"/api/rimbu/table/HashTableSortedColumn/namespace"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashTableHashColumn<R, C, V>"))),(0,n.yg)("td",y({parentName:"tr"},{align:null}),"a ",(0,n.yg)("inlineCode",{parentName:"td"},"Table")," where the row keys and column keys are hashed")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),(0,n.yg)("a",y({parentName:"td"},{href:"/api/rimbu/table/HashTableHashColumn/namespace"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashTableSortedColumn<R, C, V>"))),(0,n.yg)("td",y({parentName:"tr"},{align:null}),"a ",(0,n.yg)("inlineCode",{parentName:"td"},"Table")," where the row keys are hashed and the column keys are sorted")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),(0,n.yg)("a",y({parentName:"td"},{href:"/api/rimbu/table/SortedTableHashColumn/namespace"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedTableHashColumn<R, C, V>"))),(0,n.yg)("td",y({parentName:"tr"},{align:null}),"a ",(0,n.yg)("inlineCode",{parentName:"td"},"Table")," where the row keys are sorted and the column keys are hashed")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),(0,n.yg)("a",y({parentName:"td"},{href:"/api/rimbu/table/SortedTableSortedColumn/namespace"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedTableSortedColumn<R, C, V>"))),(0,n.yg)("td",y({parentName:"tr"},{align:null}),"a ",(0,n.yg)("inlineCode",{parentName:"td"},"Table")," where the row keys and column keys are sorted")))),(0,n.yg)("h2",y({},{id:"inheritance"}),"Inheritance"),(0,n.yg)(r.P,{contents:l,mdxType:"UmlGraph"}),(0,n.yg)("h2",y({},{id:"usage"}),"Usage"),(0,n.yg)("h3",y({},{id:"creation"}),"Creation"),(0,n.yg)(o.G,{path:"table/create.ts",mdxType:"SandBox"}),(0,n.yg)("h3",y({},{id:"query"}),"Query"),(0,n.yg)(o.G,{path:"table/query.ts",mdxType:"SandBox"}),(0,n.yg)("h3",y({},{id:"builder"}),"Builder"),(0,n.yg)(o.G,{path:"table/build.ts",mdxType:"SandBox"}))}O.isMDXComponent=!0}}]);