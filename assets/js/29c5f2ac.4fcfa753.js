"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[12768],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var i=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},l=Object.keys(e);for(i=0;i<l.length;i++)a=l[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)a=l[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=i.createContext({}),u=function(e){var t=i.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},d=function(e){var t=u(e.components);return i.createElement(o.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=u(a),k=n,c=s["".concat(o,".").concat(k)]||s[k]||m[k]||l;return a?i.createElement(c,r(r({ref:t},d),{},{components:a})):i.createElement(c,r({ref:t},d))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,r=new Array(l);r[0]=k;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[s]="string"==typeof e?e:n,r[1]=p;for(var u=2;u<l;u++)r[u]=a[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}k.displayName="MDXCreateElement"},34397:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>f,contentTitle:()=>h,default:()=>b,frontMatter:()=>c,metadata:()=>y,toc:()=>v});var i=a(3905),n=Object.defineProperty,l=Object.defineProperties,r=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,d=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,s=(e,t)=>{for(var a in t||(t={}))o.call(t,a)&&d(e,a,t[a]);if(p)for(var a of p(t))u.call(t,a)&&d(e,a,t[a]);return e},m=(e,t)=>l(e,r(t)),k=(e,t)=>{var a={};for(var i in e)o.call(e,i)&&t.indexOf(i)<0&&(a[i]=e[i]);if(null!=e&&p)for(var i of p(e))t.indexOf(i)<0&&u.call(e,i)&&(a[i]=e[i]);return a};const c={title:"HashMultiMapHashValue.Types",slug:"/rimbu/core/HashMultiMapHashValue/Types/interface"},h="interface HashMultiMapHashValue.Types",y={unversionedId:"rimbu_core/HashMultiMapHashValue/Types.interface",id:"rimbu_core/HashMultiMapHashValue/Types.interface",title:"HashMultiMapHashValue.Types",description:"Utility interface that provides higher-kinded types for this collection.",source:"@site/api/rimbu_core/HashMultiMapHashValue/Types.interface.mdx",sourceDirName:"rimbu_core/HashMultiMapHashValue",slug:"/rimbu/core/HashMultiMapHashValue/Types/interface",permalink:"/api/rimbu/core/HashMultiMapHashValue/Types/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"HashMultiMapHashValue.Types",slug:"/rimbu/core/HashMultiMapHashValue/Types/interface"},sidebar:"defaultSidebar",previous:{title:"HashMultiMapHashValue.NonEmpty<K,V>",permalink:"/api/rimbu/core/HashMultiMapHashValue/NonEmpty/interface"},next:{title:"HashMultiMapHashValue<K,V>",permalink:"/api/rimbu/core/HashMultiMapHashValue/interface"}},f={},v=[{value:"Properties",id:"properties",level:2},{value:"<code>_K</code>",id:"_k",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>_V</code>",id:"_v",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>builder</code>",id:"builder",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>keyMap</code>",id:"keymap",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"<code>keyMapContext</code>",id:"keymapcontext",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"<code>keyMapNonEmpty</code>",id:"keymapnonempty",level:3},{value:"Definition",id:"definition-6",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"<code>keyMapValues</code>",id:"keymapvalues",level:3},{value:"Definition",id:"definition-7",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"<code>keyMapValuesContext</code>",id:"keymapvaluescontext",level:3},{value:"Definition",id:"definition-8",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"<code>keyMapValuesNonEmpty</code>",id:"keymapvaluesnonempty",level:3},{value:"Definition",id:"definition-9",level:4},{value:"Overrides",id:"overrides-9",level:4},{value:"<code>nonEmpty</code>",id:"nonempty",level:3},{value:"Definition",id:"definition-10",level:4},{value:"Overrides",id:"overrides-10",level:4},{value:"<code>normal</code>",id:"normal",level:3},{value:"Definition",id:"definition-11",level:4},{value:"Overrides",id:"overrides-11",level:4}],M={toc:v},N="wrapper";function b(e){var t=e,{components:a}=t,n=k(t,["components"]);return(0,i.kt)(N,m(s(s({},M),n),{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",s({},{id:"interface-hashmultimaphashvaluetypes"}),(0,i.kt)("inlineCode",{parentName:"h1"},"interface HashMultiMapHashValue.Types")),(0,i.kt)("p",null,"Utility interface that provides higher-kinded types for this collection."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Extends:")," ",(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"MultiMapBase.Types"))),(0,i.kt)("h2",s({},{id:"properties"}),"Properties"),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",s({},{id:"_k"}),(0,i.kt)("inlineCode",{parentName:"h3"},"_K")),(0,i.kt)("p",null,"The key type.")),(0,i.kt)("h4",s({},{id:"definition"}),"Definition"),(0,i.kt)("code",null,(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"readonly _K: K;"))),(0,i.kt)("h4",s({},{id:"overrides"}),"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/KeyValue/interface#_K"}),"KeyValue._K"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",s({},{id:"_v"}),(0,i.kt)("inlineCode",{parentName:"h3"},"_V")),(0,i.kt)("p",null,"The value type.")),(0,i.kt)("h4",s({},{id:"definition-1"}),"Definition"),(0,i.kt)("code",null,(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"readonly _V: V;"))),(0,i.kt)("h4",s({},{id:"overrides-1"}),"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/KeyValue/interface#_V"}),"KeyValue._V"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",s({},{id:"builder"}),(0,i.kt)("inlineCode",{parentName:"h3"},"builder")),(0,i.kt)("p",null,"undocumented")),(0,i.kt)("h4",s({},{id:"definition-2"}),"Definition"),(0,i.kt)("code",null,(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"readonly builder: "),(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/core/HashMultiMapHashValue/Builder/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashMultiMapHashValue.Builder")),(0,i.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;"))),(0,i.kt)("h4",s({},{id:"overrides-2"}),"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface#builder"}),"Types.builder"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",s({},{id:"context"}),(0,i.kt)("inlineCode",{parentName:"h3"},"context")),(0,i.kt)("p",null,"undocumented")),(0,i.kt)("h4",s({},{id:"definition-3"}),"Definition"),(0,i.kt)("code",null,(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"readonly context: "),(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/core/HashMultiMapHashValue/Context/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashMultiMapHashValue.Context")),(0,i.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;"))),(0,i.kt)("h4",s({},{id:"overrides-3"}),"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface#context"}),"Types.context"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",s({},{id:"keymap"}),(0,i.kt)("inlineCode",{parentName:"h3"},"keyMap")),(0,i.kt)("p",null,"undocumented")),(0,i.kt)("h4",s({},{id:"definition-4"}),"Definition"),(0,i.kt)("code",null,(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"readonly keyMap: "),(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/hashed/map/HashMap/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashMap")),(0,i.kt)("inlineCode",{parentName:"p"},"<this['_K'], "),(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/NonEmpty/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashSet.NonEmpty")),(0,i.kt)("inlineCode",{parentName:"p"},"<this['_V']>>;"))),(0,i.kt)("h4",s({},{id:"overrides-4"}),"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface#keyMap"}),"Types.keyMap"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",s({},{id:"keymapcontext"}),(0,i.kt)("inlineCode",{parentName:"h3"},"keyMapContext")),(0,i.kt)("p",null,"undocumented")),(0,i.kt)("h4",s({},{id:"definition-5"}),"Definition"),(0,i.kt)("code",null,(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"readonly keyMapContext: "),(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/hashed/map/HashMap/Context/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashMap.Context")),(0,i.kt)("inlineCode",{parentName:"p"},"<this['_K']>;"))),(0,i.kt)("h4",s({},{id:"overrides-5"}),"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface#keyMapContext"}),"Types.keyMapContext"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",s({},{id:"keymapnonempty"}),(0,i.kt)("inlineCode",{parentName:"h3"},"keyMapNonEmpty")),(0,i.kt)("p",null,"undocumented")),(0,i.kt)("h4",s({},{id:"definition-6"}),"Definition"),(0,i.kt)("code",null,(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"readonly keyMapNonEmpty: "),(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/hashed/map/HashMap/NonEmpty/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashMap.NonEmpty")),(0,i.kt)("inlineCode",{parentName:"p"},"<this['_K'], "),(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/NonEmpty/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashSet.NonEmpty")),(0,i.kt)("inlineCode",{parentName:"p"},"<this['_V']>>;"))),(0,i.kt)("h4",s({},{id:"overrides-6"}),"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface#keyMapNonEmpty"}),"Types.keyMapNonEmpty"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",s({},{id:"keymapvalues"}),(0,i.kt)("inlineCode",{parentName:"h3"},"keyMapValues")),(0,i.kt)("p",null,"undocumented")),(0,i.kt)("h4",s({},{id:"definition-7"}),"Definition"),(0,i.kt)("code",null,(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"readonly keyMapValues: "),(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashSet")),(0,i.kt)("inlineCode",{parentName:"p"},"<this['_V']>;"))),(0,i.kt)("h4",s({},{id:"overrides-7"}),"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface#keyMapValues"}),"Types.keyMapValues"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",s({},{id:"keymapvaluescontext"}),(0,i.kt)("inlineCode",{parentName:"h3"},"keyMapValuesContext")),(0,i.kt)("p",null,"undocumented")),(0,i.kt)("h4",s({},{id:"definition-8"}),"Definition"),(0,i.kt)("code",null,(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"readonly keyMapValuesContext: "),(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/Context/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashSet.Context")),(0,i.kt)("inlineCode",{parentName:"p"},"<this['_V']>;"))),(0,i.kt)("h4",s({},{id:"overrides-8"}),"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface#keyMapValuesContext"}),"Types.keyMapValuesContext"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",s({},{id:"keymapvaluesnonempty"}),(0,i.kt)("inlineCode",{parentName:"h3"},"keyMapValuesNonEmpty")),(0,i.kt)("p",null,"undocumented")),(0,i.kt)("h4",s({},{id:"definition-9"}),"Definition"),(0,i.kt)("code",null,(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"readonly keyMapValuesNonEmpty: "),(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/NonEmpty/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashSet.NonEmpty")),(0,i.kt)("inlineCode",{parentName:"p"},"<this['_V']>;"))),(0,i.kt)("h4",s({},{id:"overrides-9"}),"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface#keyMapValuesNonEmpty"}),"Types.keyMapValuesNonEmpty"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",s({},{id:"nonempty"}),(0,i.kt)("inlineCode",{parentName:"h3"},"nonEmpty")),(0,i.kt)("p",null,"undocumented")),(0,i.kt)("h4",s({},{id:"definition-10"}),"Definition"),(0,i.kt)("code",null,(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"readonly nonEmpty: "),(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/core/HashMultiMapHashValue/NonEmpty/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashMultiMapHashValue.NonEmpty")),(0,i.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;"))),(0,i.kt)("h4",s({},{id:"overrides-10"}),"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface#nonEmpty"}),"Types.nonEmpty"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h3",s({},{id:"normal"}),(0,i.kt)("inlineCode",{parentName:"h3"},"normal")),(0,i.kt)("p",null,"undocumented")),(0,i.kt)("h4",s({},{id:"definition-11"}),"Definition"),(0,i.kt)("code",null,(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"readonly normal: "),(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/core/HashMultiMapHashValue/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashMultiMapHashValue")),(0,i.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;"))),(0,i.kt)("h4",s({},{id:"overrides-11"}),"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",s({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface#normal"}),"Types.normal"))))}b.isMDXComponent=!0}}]);