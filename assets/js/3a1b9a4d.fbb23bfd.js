"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[43084],{15680:(e,t,r)=>{r.d(t,{xA:()=>d,yg:()=>y});var a=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=c(r),g=n,y=s["".concat(l,".").concat(g)]||s[g]||u[g]||i;return r?a.createElement(y,o(o({ref:t},d),{},{components:r})):a.createElement(y,o({ref:t},d))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=g;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[s]="string"==typeof e?e:n,o[1]=p;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},35989:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>h,default:()=>E,frontMatter:()=>y,metadata:()=>f,toc:()=>b});var a=r(15680),n=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,d=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,s=(e,t)=>{for(var r in t||(t={}))l.call(t,r)&&d(e,r,t[r]);if(p)for(var r of p(t))c.call(t,r)&&d(e,r,t[r]);return e},u=(e,t)=>i(e,o(t)),g=(e,t)=>{var r={};for(var a in e)l.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&p)for(var a of p(e))t.indexOf(a)<0&&c.call(e,a)&&(r[a]=e[a]);return r};const y={title:"EdgeGraphHashed.Context<UN>",slug:"/rimbu/graph/EdgeGraphHashed/Context/interface"},h="interface EdgeGraphHashed.Context<UN>",f={unversionedId:"rimbu_graph/EdgeGraphHashed/Context.interface",id:"rimbu_graph/EdgeGraphHashed/Context.interface",title:"EdgeGraphHashed.Context<UN>",description:"The EdgeGraphHashed's Context instance that serves as a factory for all related immutable instances and builders.",source:"@site/api/rimbu_graph/EdgeGraphHashed/Context.interface.mdx",sourceDirName:"rimbu_graph/EdgeGraphHashed",slug:"/rimbu/graph/EdgeGraphHashed/Context/interface",permalink:"/api/rimbu/graph/EdgeGraphHashed/Context/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"EdgeGraphHashed.Context<UN>",slug:"/rimbu/graph/EdgeGraphHashed/Context/interface"},sidebar:"defaultSidebar",previous:{title:"EdgeGraphHashed.Builder<N>",permalink:"/api/rimbu/graph/EdgeGraphHashed/Builder/interface"},next:{title:"EdgeGraphHashed.NonEmpty<N>",permalink:"/api/rimbu/graph/EdgeGraphHashed/NonEmpty/interface"}},m={},b=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>typeTag</code>",id:"typetag",level:3},{value:"Definition",id:"definition",level:4}],v={toc:b},O="wrapper";function E(e){var t=e,{components:r}=t,n=g(t,["components"]);return(0,a.yg)(O,u(s(s({},v),n),{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",s({},{id:"interface-edgegraphhashedcontextun"}),(0,a.yg)("inlineCode",{parentName:"h1"},"interface EdgeGraphHashed.Context<UN>")),(0,a.yg)("p",null,"The EdgeGraphHashed's Context instance that serves as a factory for all related immutable instances and builders."),(0,a.yg)("h2",s({},{id:"type-parameters"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",s({parentName:"tr"},{align:null}),"UN"),(0,a.yg)("td",s({parentName:"tr"},{align:null}),"the upper type limit for node types for which this context can create instances")))),(0,a.yg)("h2",s({},{id:"properties"}),"Properties"),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",s({},{id:"typetag"}),(0,a.yg)("inlineCode",{parentName:"h3"},"typeTag")),(0,a.yg)("p",null,"undocumented")),(0,a.yg)("h4",s({},{id:"definition"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"readonly typeTag: 'EdgeGraphHashed';")))))}E.isMDXComponent=!0}}]);