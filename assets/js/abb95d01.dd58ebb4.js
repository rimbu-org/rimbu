"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[96239],{15680:(e,n,r)=>{r.d(n,{xA:()=>m,yg:()=>g});var t=r(96540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},m=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=p(r),y=a,g=s["".concat(c,".").concat(y)]||s[y]||u[y]||o;return r?t.createElement(g,l(l({ref:n},m),{},{components:r})):t.createElement(g,l({ref:n},m))}));function g(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=y;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[s]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},27824:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>O,frontMatter:()=>g,metadata:()=>f,toc:()=>b});var t=r(15680),a=Object.defineProperty,o=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,m=(e,n,r)=>n in e?a(e,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[n]=r,s=(e,n)=>{for(var r in n||(n={}))c.call(n,r)&&m(e,r,n[r]);if(i)for(var r of i(n))p.call(n,r)&&m(e,r,n[r]);return e},u=(e,n)=>o(e,l(n)),y=(e,n)=>{var r={};for(var t in e)c.call(e,t)&&n.indexOf(t)<0&&(r[t]=e[t]);if(null!=e&&i)for(var t of i(e))n.indexOf(t)<0&&p.call(e,t)&&(r[t]=e[t]);return r};const g={title:"RemoteChannelServer.Constructors",slug:"/rimbu/channel/RemoteChannelServer/Constructors/interface"},d="interface RemoteChannelServer.Constructors",f={unversionedId:"rimbu_channel/RemoteChannelServer/Constructors.interface",id:"rimbu_channel/RemoteChannelServer/Constructors.interface",title:"RemoteChannelServer.Constructors",description:"Defines the static RemoteChannelServer API.",source:"@site/api/rimbu_channel/RemoteChannelServer/Constructors.interface.mdx",sourceDirName:"rimbu_channel/RemoteChannelServer",slug:"/rimbu/channel/RemoteChannelServer/Constructors/interface",permalink:"/api/rimbu/channel/RemoteChannelServer/Constructors/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"RemoteChannelServer.Constructors",slug:"/rimbu/channel/RemoteChannelServer/Constructors/interface"},sidebar:"defaultSidebar",previous:{title:"RemoteChannelServer (namespace)",permalink:"/api/rimbu/channel/RemoteChannelServer/namespace"},next:{title:"RemoteChannelServer",permalink:"/api/rimbu/channel/RemoteChannelServer/interface"}},h={},b=[{value:"Methods",id:"methods",level:2},{value:"<code>create</code>",id:"create",level:3},{value:"Definition",id:"definition",level:4},{value:"Parameters",id:"parameters",level:4}],C={toc:b},v="wrapper";function O(e){var n=e,{components:r}=n,a=y(n,["components"]);return(0,t.yg)(v,u(s(s({},C),a),{components:r,mdxType:"MDXLayout"}),(0,t.yg)("h1",s({},{id:"interface-remotechannelserverconstructors"}),(0,t.yg)("inlineCode",{parentName:"h1"},"interface RemoteChannelServer.Constructors")),(0,t.yg)("p",null,"Defines the static ",(0,t.yg)("inlineCode",{parentName:"p"},"RemoteChannelServer")," API."),(0,t.yg)("h2",s({},{id:"methods"}),"Methods"),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",s({},{id:"create"}),(0,t.yg)("inlineCode",{parentName:"h3"},"create")),(0,t.yg)("p",null,"Resolves, if succesful, to a new RemoteChannelServer that can listen to client requests to create new channels.")),(0,t.yg)("h4",s({},{id:"definition"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"create(config: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"port: "),(0,t.yg)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort")),(0,t.yg)("inlineCode",{parentName:"p"},";"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"rcsChannelId?: string;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): Promise<"),(0,t.yg)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannelServer/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannelServer")),(0,t.yg)("inlineCode",{parentName:"p"},">;"))),(0,t.yg)("h4",s({},{id:"parameters"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",s({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",s({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"config")),(0,t.yg)("td",s({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"{"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"port: "),(0,t.yg)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort")),(0,t.yg)("inlineCode",{parentName:"td"},";"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"rcsChannelId?: string;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"}")),(0,t.yg)("td",s({parentName:"tr"},{align:null}),"the configuration for the RemoteChannelServer to be created:",(0,t.yg)("br",null)," - port: the message port to communicate with the client - rcsChannelId: (optional) an alternative channel id to use for communication with the client"))))))}O.isMDXComponent=!0}}]);