"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[94251],{15680:(e,n,r)=>{r.d(n,{xA:()=>y,yg:()=>f});var t=r(96540);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),c=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},y=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,y=p(e,["components","mdxType","originalType","parentName"]),s=c(r),m=o,f=s["".concat(l,".").concat(m)]||s[m]||u[m]||a;return r?t.createElement(f,i(i({ref:n},y),{},{components:r})):t.createElement(f,i({ref:n},y))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[s]="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},44373:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>g,contentTitle:()=>b,default:()=>v,frontMatter:()=>f,metadata:()=>d,toc:()=>h});var t=r(15680),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,y=(e,n,r)=>n in e?o(e,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[n]=r,s=(e,n)=>{for(var r in n||(n={}))l.call(n,r)&&y(e,r,n[r]);if(p)for(var r of p(n))c.call(n,r)&&y(e,r,n[r]);return e},u=(e,n)=>a(e,i(n)),m=(e,n)=>{var r={};for(var t in e)l.call(e,t)&&n.indexOf(t)<0&&(r[t]=e[t]);if(null!=e&&p)for(var t of p(e))n.indexOf(t)<0&&c.call(e,t)&&(r[t]=e[t]);return r};const f={title:"Unpromise",slug:"/rimbu/channel/RpcProxy/Unpromise/type"},b="type Unpromise<T>",d={unversionedId:"rimbu_channel/RpcProxy/Unpromise.type",id:"rimbu_channel/RpcProxy/Unpromise.type",title:"Unpromise",description:"Utility type to transform an object/API with potentially asynchronous calls into a synchronous one. This is used to allow RPC calls to act as though they are synchronous, but have only the resulting return type be asynchronous.",source:"@site/api/rimbu_channel/RpcProxy/Unpromise.type.mdx",sourceDirName:"rimbu_channel/RpcProxy",slug:"/rimbu/channel/RpcProxy/Unpromise/type",permalink:"/api/rimbu/channel/RpcProxy/Unpromise/type",draft:!1,tags:[],version:"current",frontMatter:{title:"Unpromise",slug:"/rimbu/channel/RpcProxy/Unpromise/type"},sidebar:"defaultSidebar",previous:{title:"PathPart",permalink:"/api/rimbu/channel/RpcProxy/PathPart/type"},next:{title:"RpcProxy<T>",permalink:"/api/rimbu/channel/RpcProxy/interface"}},g={},h=[{value:"Definition",id:"definition",level:2}],P={toc:h},O="wrapper";function v(e){var n=e,{components:r}=n,o=m(n,["components"]);return(0,t.yg)(O,u(s(s({},P),o),{components:r,mdxType:"MDXLayout"}),(0,t.yg)("h1",s({},{id:"type-unpromiset"}),(0,t.yg)("inlineCode",{parentName:"h1"},"type Unpromise<T>")),(0,t.yg)("p",null,"Utility type to transform an object/API with potentially asynchronous calls into a synchronous one. This is used to allow RPC calls to act as though they are synchronous, but have only the resulting return type be asynchronous."),(0,t.yg)("h2",s({},{id:"definition"}),"Definition"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"type Unpromise<T> = T extends Promise<infer R> ? "),(0,t.yg)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RpcProxy/Unpromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Unpromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<R> : T extends (...args: infer A) => infer R ? (...args: A) => "),(0,t.yg)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RpcProxy/Unpromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Unpromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<R> : T extends readonly any[] ? {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"readonly [K in keyof T]: "),(0,t.yg)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RpcProxy/Unpromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Unpromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<T[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"} : T extends Record<any, any> ? {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"readonly [K in keyof T]: "),(0,t.yg)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RpcProxy/Unpromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Unpromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<T[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"} : T;")))}v.isMDXComponent=!0}}]);