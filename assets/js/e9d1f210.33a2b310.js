"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[83007],{15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>s});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},y="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),y=m(n),u=r,s=y["".concat(p,".").concat(u)]||y[u]||g[u]||i;return n?a.createElement(s,l(l({ref:t},d),{},{components:n})):a.createElement(s,l({ref:t},d))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[y]="string"==typeof e?e:r,l[1]=o;for(var m=2;m<i;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},31311:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>c,default:()=>v,frontMatter:()=>s,metadata:()=>N,toc:()=>b});var a=n(15680),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,y=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&d(e,n,t[n]);if(o)for(var n of o(t))m.call(t,n)&&d(e,n,t[n]);return e},g=(e,t)=>i(e,l(t)),u=(e,t)=>{var n={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&m.call(e,a)&&(n[a]=e[a]);return n};const s={title:"SortedSet.NonEmpty<T>",slug:"/rimbu/sorted/set/SortedSet/NonEmpty/interface"},c="interface SortedSet.NonEmpty<T>",N={unversionedId:"rimbu_sorted/set/SortedSet/NonEmpty.interface",id:"rimbu_sorted/set/SortedSet/NonEmpty.interface",title:"SortedSet.NonEmpty<T>",description:"A non-empty type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the SortedSet API documentation",source:"@site/api/rimbu_sorted/set/SortedSet/NonEmpty.interface.mdx",sourceDirName:"rimbu_sorted/set/SortedSet",slug:"/rimbu/sorted/set/SortedSet/NonEmpty/interface",permalink:"/api/rimbu/sorted/set/SortedSet/NonEmpty/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"SortedSet.NonEmpty<T>",slug:"/rimbu/sorted/set/SortedSet/NonEmpty/interface"},sidebar:"defaultSidebar",previous:{title:"SortedSet.Context<UT>",permalink:"/api/rimbu/sorted/set/SortedSet/Context/interface"},next:{title:"SortedSet.Types",permalink:"/api/rimbu/sorted/set/SortedSet/Types/interface"}},f={},b=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>max</code>",id:"max",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>min</code>",id:"min",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>take</code>",id:"take",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4}],h={toc:b},S="wrapper";function v(e){var t=e,{components:n}=t,r=u(t,["components"]);return(0,a.yg)(S,g(y(y({},h),r),{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",y({},{id:"interface-sortedsetnonemptyt"}),(0,a.yg)("inlineCode",{parentName:"h1"},"interface SortedSet.NonEmpty<T>")),(0,a.yg)("p",null,"A non-empty type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,a.yg)("a",y({parentName:"p"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,a.yg)("a",y({parentName:"p"},{href:"https://rimbu.org/api/rimbu/ordered/set/SortedSet/interface"}),"SortedSet API documentation")),(0,a.yg)("h2",y({},{id:"type-parameters"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),"T"),(0,a.yg)("td",y({parentName:"tr"},{align:null}),"the value type")))),(0,a.yg)("admonition",y({},{title:"note",type:"note"}),(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},"The ",(0,a.yg)("inlineCode",{parentName:"li"},"SortedSet")," keeps the inserted values in sorted order according to the context's ",(0,a.yg)("inlineCode",{parentName:"li"},"comp")," ",(0,a.yg)("inlineCode",{parentName:"li"},"Comp")," instance."))),(0,a.yg)("admonition",y({},{title:"example",type:"note"}),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"const s1 = SortedSet.empty<string>()\nconst s2 = SortedSet.of('a', 'b', 'c')\n"))),(0,a.yg)("h2",y({},{id:"methods"}),"Methods"),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",y({},{id:"max"}),(0,a.yg)("inlineCode",{parentName:"h3"},"max")),(0,a.yg)("p",null,"Returns the maximum value of the SortedSet.")),(0,a.yg)("h4",y({},{id:"definition"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"max(): T;"))),(0,a.yg)("admonition",y({},{title:"example",type:"note"}),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"const m = SortedSet.of('b', 'd', 'a', 'c');\nconsole.log(m.max())\n// => 'd'\n")))),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",y({},{id:"min"}),(0,a.yg)("inlineCode",{parentName:"h3"},"min")),(0,a.yg)("p",null,"Returns the minimum value of the SortedSet.")),(0,a.yg)("h4",y({},{id:"definition-1"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"min(): T;"))),(0,a.yg)("admonition",y({},{title:"example",type:"note"}),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"const m = SortedSet.of('b', 'd', 'a', 'c');\nconsole.log(m.min())\n// => 'a'\n")))),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",y({},{id:"stream"}),(0,a.yg)("inlineCode",{parentName:"h3"},"stream")),(0,a.yg)("p",null,"undocumented")),(0,a.yg)("h4",y({},{id:"definition-2"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"stream(options?: {"),(0,a.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,a.yg)("inlineCode",{parentName:"p"},"reversed?: boolean;"),(0,a.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.yg)("inlineCode",{parentName:"p"},"}): "),(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,a.yg)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.yg)("h4",y({},{id:"parameters"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"options")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"{"),(0,a.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,a.yg)("inlineCode",{parentName:"td"},"reversed?: boolean;"),(0,a.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.yg)("inlineCode",{parentName:"td"},"}")),(0,a.yg)("td",y({parentName:"tr"},{align:null})))))),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",y({},{id:"take"}),(0,a.yg)("inlineCode",{parentName:"h3"},"take")),(0,a.yg)("p",null,"undocumented")),(0,a.yg)("h4",y({},{id:"definition-3"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"take<N extends number>(amount: N): 0 extends N ? "),(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"SortedSet")),(0,a.yg)("inlineCode",{parentName:"p"},"<T> : "),(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/NonEmpty/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"SortedSet.NonEmpty")),(0,a.yg)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.yg)("h4",y({},{id:"type-parameters-1"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Constraints"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),"N"),(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"number")),(0,a.yg)("td",y({parentName:"tr"},{align:null}))))),(0,a.yg)("h4",y({},{id:"parameters-1"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"amount")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"N")),(0,a.yg)("td",y({parentName:"tr"},{align:null})))))))}v.isMDXComponent=!0}}]);