"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[38756],{15680:(e,a,r)=>{r.d(a,{xA:()=>y,yg:()=>d});var t=r(96540);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function o(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=t.createContext({}),m=function(e){var a=t.useContext(l),r=a;return e&&(r="function"==typeof e?e(a):p(p({},a),e)),r},y=function(e){var a=m(e.components);return t.createElement(l.Provider,{value:a},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},s=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,y=o(e,["components","mdxType","originalType","parentName"]),c=m(r),s=n,d=c["".concat(l,".").concat(s)]||c[s]||u[s]||i;return r?t.createElement(d,p(p({ref:a},y),{},{components:r})):t.createElement(d,p({ref:a},y))}));function d(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=r.length,p=new Array(i);p[0]=s;var o={};for(var l in a)hasOwnProperty.call(a,l)&&(o[l]=a[l]);o.originalType=e,o[c]="string"==typeof e?e:n,p[1]=o;for(var m=2;m<i;m++)p[m]=r[m];return t.createElement.apply(null,p)}return t.createElement.apply(null,r)}s.displayName="MDXCreateElement"},415:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>f,contentTitle:()=>g,default:()=>O,frontMatter:()=>d,metadata:()=>h,toc:()=>N});var t=r(15680),n=Object.defineProperty,i=Object.defineProperties,p=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,y=(e,a,r)=>a in e?n(e,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[a]=r,c=(e,a)=>{for(var r in a||(a={}))l.call(a,r)&&y(e,r,a[r]);if(o)for(var r of o(a))m.call(a,r)&&y(e,r,a[r]);return e},u=(e,a)=>i(e,p(a)),s=(e,a)=>{var r={};for(var t in e)l.call(e,t)&&a.indexOf(t)<0&&(r[t]=e[t]);if(null!=e&&o)for(var t of o(e))a.indexOf(t)<0&&m.call(e,t)&&(r[t]=e[t]);return r};const d={title:"VariantGraph.NonEmpty<N>",slug:"/rimbu/graph/VariantGraph/NonEmpty/interface"},g="interface VariantGraph.NonEmpty<N>",h={unversionedId:"rimbu_graph/VariantGraph/NonEmpty.interface",id:"rimbu_graph/VariantGraph/NonEmpty.interface",title:"VariantGraph.NonEmpty<N>",description:"A non-empty type-variant immutable graph. See the Graph documentation and the VariantGraph API documentation",source:"@site/api/rimbu_graph/VariantGraph/NonEmpty.interface.mdx",sourceDirName:"rimbu_graph/VariantGraph",slug:"/rimbu/graph/VariantGraph/NonEmpty/interface",permalink:"/api/rimbu/graph/VariantGraph/NonEmpty/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"VariantGraph.NonEmpty<N>",slug:"/rimbu/graph/VariantGraph/NonEmpty/interface"},sidebar:"defaultSidebar",previous:{title:"VariantGraph (namespace)",permalink:"/api/rimbu/graph/VariantGraph/namespace"},next:{title:"VariantGraph.Types",permalink:"/api/rimbu/graph/VariantGraph/Types/interface"}},f={},N=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>linkMap</code>",id:"linkmap",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Overrides",id:"overrides-1",level:4}],b={toc:N},v="wrapper";function O(e){var a=e,{components:r}=a,n=s(a,["components"]);return(0,t.yg)(v,u(c(c({},b),n),{components:r,mdxType:"MDXLayout"}),(0,t.yg)("h1",c({},{id:"interface-variantgraphnonemptyn"}),(0,t.yg)("inlineCode",{parentName:"h1"},"interface VariantGraph.NonEmpty<N>")),(0,t.yg)("p",null,"A non-empty type-variant immutable graph. See the ",(0,t.yg)("a",c({parentName:"p"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,t.yg)("a",c({parentName:"p"},{href:"https://rimbu.org/api/rimbu/graph/VariantGraph/interface"}),"VariantGraph API documentation")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Extends:")," ",(0,t.yg)("a",c({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"Streamable.NonEmpty<T>")),", ",(0,t.yg)("a",c({parentName:"p"},{href:"/api/rimbu/graph/VariantGraph/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"VariantGraph<N>"))),(0,t.yg)("h2",c({},{id:"type-parameters"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",c({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",c({parentName:"tr"},{align:null}),"N"),(0,t.yg)("td",c({parentName:"tr"},{align:null}),"the node type")))),(0,t.yg)("h2",c({},{id:"properties"}),"Properties"),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",c({},{id:"linkmap"}),(0,t.yg)("inlineCode",{parentName:"h3"},"linkMap")),(0,t.yg)("p",null,"Returns the nested Map representation of the graph connections.")),(0,t.yg)("h4",c({},{id:"definition"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly linkMap: "),(0,t.yg)("a",c({parentName:"p"},{href:"/api/rimbu/collection-types/map/VariantMap/NonEmpty/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"VariantMap.NonEmpty")),(0,t.yg)("inlineCode",{parentName:"p"},"<N, "),(0,t.yg)("a",c({parentName:"p"},{href:"/api/rimbu/collection-types/VariantSet/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"VariantSet")),(0,t.yg)("inlineCode",{parentName:"p"},"<N>>;"))),(0,t.yg)("admonition",c({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",c({parentName:"pre"},{className:"language-ts"}),"ArrowValuedGraphHashed.of([1, 2, 'a'], [2, 3, 'b']).linkMap.toArray()\n// => [[1, HashMap(2 -> 'a')], [2, HashMap(3 -> 'b')]]\n"))),(0,t.yg)("h4",c({},{id:"overrides"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",c({parentName:"p"},{href:"/api/rimbu/graph/VariantGraph/interface#linkMap"}),"VariantGraph.linkMap"))),(0,t.yg)("h2",c({},{id:"methods"}),"Methods"),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",c({},{id:"stream"}),(0,t.yg)("inlineCode",{parentName:"h3"},"stream")),(0,t.yg)("p",null,"Returns a non-empty ",(0,t.yg)("inlineCode",{parentName:"p"},"Stream")," containing all graph elements of this collection as single tuples for isolated nodes and 2-valued tuples of nodes for connections.")),(0,t.yg)("h4",c({},{id:"definition-1"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"stream(): "),(0,t.yg)("a",c({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,t.yg)("inlineCode",{parentName:"p"},"<[N] "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," Link<N>>;"))),(0,t.yg)("admonition",c({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",c({parentName:"pre"},{className:"language-ts"}),"ArrowGraphHashed.of([1], [2, 3]).stream().toArray()  // => [[1], [2, 3]]\n"))),(0,t.yg)("h4",c({},{id:"overrides-1"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",c({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface#stream"}),"NonEmpty.stream"))))}O.isMDXComponent=!0}}]);