"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[46046],{15680:(e,n,i)=>{i.d(n,{xA:()=>u,yg:()=>c});var l=i(96540);function a(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function t(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,l)}return i}function d(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?t(Object(i),!0).forEach((function(n){a(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):t(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function o(e,n){if(null==e)return{};var i,l,a=function(e,n){if(null==e)return{};var i,l,a={},t=Object.keys(e);for(l=0;l<t.length;l++)i=t[l],n.indexOf(i)>=0||(a[i]=e[i]);return a}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(l=0;l<t.length;l++)i=t[l],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var r=l.createContext({}),y=function(e){var n=l.useContext(r),i=n;return e&&(i="function"==typeof e?e(n):d(d({},n),e)),i},u=function(e){var n=y(e.components);return l.createElement(r.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},m=l.forwardRef((function(e,n){var i=e.components,a=e.mdxType,t=e.originalType,r=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=y(i),m=a,c=p["".concat(r,".").concat(m)]||p[m]||g[m]||t;return i?l.createElement(c,d(d({ref:n},u),{},{components:i})):l.createElement(c,d({ref:n},u))}));function c(e,n){var i=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var t=i.length,d=new Array(t);d[0]=m;var o={};for(var r in n)hasOwnProperty.call(n,r)&&(o[r]=n[r]);o.originalType=e,o[p]="string"==typeof e?e:a,d[1]=o;for(var y=2;y<t;y++)d[y]=i[y];return l.createElement.apply(null,d)}return l.createElement.apply(null,i)}m.displayName="MDXCreateElement"},75300:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>f,contentTitle:()=>s,default:()=>C,frontMatter:()=>c,metadata:()=>h,toc:()=>v});var l=i(15680),a=Object.defineProperty,t=Object.defineProperties,d=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable,u=(e,n,i)=>n in e?a(e,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[n]=i,p=(e,n)=>{for(var i in n||(n={}))r.call(n,i)&&u(e,i,n[i]);if(o)for(var i of o(n))y.call(n,i)&&u(e,i,n[i]);return e},g=(e,n)=>t(e,d(n)),m=(e,n)=>{var i={};for(var l in e)r.call(e,l)&&n.indexOf(l)<0&&(i[l]=e[l]);if(null!=e&&o)for(var l of o(e))n.indexOf(l)<0&&y.call(e,l)&&(i[l]=e[l]);return i};const c={title:"HashMapBlockBuilder<K,V>",slug:"/rimbu/hashed/map-custom/HashMapBlockBuilder/class"},s="class HashMapBlockBuilder<K,V>",h={unversionedId:"rimbu_hashed/map-custom/HashMapBlockBuilder.class",id:"rimbu_hashed/map-custom/HashMapBlockBuilder.class",title:"HashMapBlockBuilder<K,V>",description:"undocumented",source:"@site/api/rimbu_hashed/map-custom/HashMapBlockBuilder.class.mdx",sourceDirName:"rimbu_hashed/map-custom",slug:"/rimbu/hashed/map-custom/HashMapBlockBuilder/class",permalink:"/api/rimbu/hashed/map-custom/HashMapBlockBuilder/class",draft:!1,tags:[],version:"current",frontMatter:{title:"HashMapBlockBuilder<K,V>",slug:"/rimbu/hashed/map-custom/HashMapBlockBuilder/class"},sidebar:"defaultSidebar",previous:{title:"HashMapBlock<K,V>",permalink:"/api/rimbu/hashed/map-custom/HashMapBlock/class"},next:{title:"HashMapCollision<K,V>",permalink:"/api/rimbu/hashed/map-custom/HashMapCollision/class"}},f={},v=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>_entries</code>",id:"_entries",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>_entrySets</code>",id:"_entrysets",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>_lock</code>",id:"_lock",level:3},{value:"Definition",id:"definition-2",level:4},{value:"<code>addEntries</code>",id:"addentries",level:3},{value:"Definition",id:"definition-3",level:4},{value:"<code>addEntry</code>",id:"addentry",level:3},{value:"Definition",id:"definition-4",level:4},{value:"<code>build</code>",id:"build",level:3},{value:"Definition",id:"definition-5",level:4},{value:"<code>buildMapValues</code>",id:"buildmapvalues",level:3},{value:"Definition",id:"definition-6",level:4},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition-7",level:4},{value:"<code>entries</code>",id:"entries",level:3},{value:"Definition",id:"definition-8",level:4},{value:"<code>entrySets</code>",id:"entrysets",level:3},{value:"Definition",id:"definition-9",level:4},{value:"<code>forEach</code>",id:"foreach",level:3},{value:"Definition",id:"definition-10",level:4},{value:"<code>get</code>",id:"get",level:3},{value:"Definition",id:"definition-11",level:4},{value:"<code>hasKey</code>",id:"haskey",level:3},{value:"Definition",id:"definition-12",level:4},{value:"<code>level</code>",id:"level",level:3},{value:"Definition",id:"definition-13",level:4},{value:"<code>modifyAt</code>",id:"modifyat",level:3},{value:"Definition",id:"definition-14",level:4},{value:"<code>removeKey</code>",id:"removekey",level:3},{value:"Definition",id:"definition-15",level:4},{value:"<code>removeKeys</code>",id:"removekeys",level:3},{value:"Definition",id:"definition-16",level:4},{value:"<code>set</code>",id:"set",level:3},{value:"Definition",id:"definition-17",level:4},{value:"<code>size</code>",id:"size",level:3},{value:"Definition",id:"definition-18",level:4},{value:"<code>source</code>",id:"source",level:3},{value:"Definition",id:"definition-19",level:4},{value:"<code>updateAt</code>",id:"updateat",level:3},{value:"Definition",id:"definition-20",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>addEntryInternal</code>",id:"addentryinternal",level:3},{value:"Definition",id:"definition-21",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>buildNE</code>",id:"buildne",level:3},{value:"Definition",id:"definition-22",level:4},{value:"<code>checkLock</code>",id:"checklock",level:3},{value:"Definition",id:"definition-23",level:4},{value:"<code>prepareMutate</code>",id:"preparemutate",level:3},{value:"Definition",id:"definition-24",level:4}],N={toc:v},b="wrapper";function C(e){var n=e,{components:i}=n,a=m(n,["components"]);return(0,l.yg)(b,g(p(p({},N),a),{components:i,mdxType:"MDXLayout"}),(0,l.yg)("h1",p({},{id:"class-hashmapblockbuilderkv"}),(0,l.yg)("inlineCode",{parentName:"h1"},"class HashMapBlockBuilder<K,V>")),(0,l.yg)("p",null,"undocumented"),(0,l.yg)("h2",p({},{id:"type-parameters"}),"Type parameters"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",p({parentName:"tr"},{align:null}),"Name"),(0,l.yg)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",p({parentName:"tr"},{align:null}),"K"),(0,l.yg)("td",p({parentName:"tr"},{align:null}),"undocumented")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",p({parentName:"tr"},{align:null}),"V"),(0,l.yg)("td",p({parentName:"tr"},{align:null}),"undocumented")))),(0,l.yg)("h2",p({},{id:"properties"}),"Properties"),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"_entries"}),(0,l.yg)("inlineCode",{parentName:"h3"},"_entries")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"_entries?: undefined "),(0,l.yg)("code",null,"|"),(0,l.yg)("inlineCode",{parentName:"p"}," (readonly [K, V])[];")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"_entrysets"}),(0,l.yg)("inlineCode",{parentName:"h3"},"_entrySets")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-1"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"_entrySets?: undefined "),(0,l.yg)("code",null,"|"),(0,l.yg)("inlineCode",{parentName:"p"}," "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/hashed/map-custom/MapBlockBuilderEntry/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"MapBlockBuilderEntry")),(0,l.yg)("inlineCode",{parentName:"p"},"<K, V>[];")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"_lock"}),(0,l.yg)("inlineCode",{parentName:"h3"},"_lock")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-2"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"_lock: number;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"addentries"}),(0,l.yg)("inlineCode",{parentName:"h3"},"addEntries")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-3"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"addEntries: (source: "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,l.yg)("inlineCode",{parentName:"p"},"<readonly [K, V]>) => boolean;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"addentry"}),(0,l.yg)("inlineCode",{parentName:"h3"},"addEntry")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-4"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"addEntry: (entry: readonly [K, V]) => boolean;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"build"}),(0,l.yg)("inlineCode",{parentName:"h3"},"build")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-5"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"build: () => HashMap<K, V>;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"buildmapvalues"}),(0,l.yg)("inlineCode",{parentName:"h3"},"buildMapValues")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-6"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"buildMapValues: <V2>(f: (value: V, key: K) => V2) => HashMap<K, V2>;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"context"}),(0,l.yg)("inlineCode",{parentName:"h3"},"context")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-7"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"readonly context: "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/hashed/map-custom/HashMapContext/class"}),(0,l.yg)("inlineCode",{parentName:"a"},"HashMapContext")),(0,l.yg)("inlineCode",{parentName:"p"},"<K>;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"entries"}),(0,l.yg)("inlineCode",{parentName:"h3"},"entries")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-8"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"get entries(): (readonly [K, V])[];")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"entrysets"}),(0,l.yg)("inlineCode",{parentName:"h3"},"entrySets")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-9"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"get entrySets(): "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/hashed/map-custom/MapBlockBuilderEntry/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"MapBlockBuilderEntry")),(0,l.yg)("inlineCode",{parentName:"p"},"<K, V>[];")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"foreach"}),(0,l.yg)("inlineCode",{parentName:"h3"},"forEach")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-10"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"forEach: (f: (entry: readonly [K, V], index: number, halt: () => void) => void, options?: {"),(0,l.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,l.yg)("inlineCode",{parentName:"p"},"state?: "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,l.yg)("inlineCode",{parentName:"a"},"TraverseState")),(0,l.yg)("inlineCode",{parentName:"p"},";"),(0,l.yg)("br",null),"\xa0","\xa0",(0,l.yg)("inlineCode",{parentName:"p"},"}) => void;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"get"}),(0,l.yg)("inlineCode",{parentName:"h3"},"get")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-11"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"get: <UK, O>(key: "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,l.yg)("inlineCode",{parentName:"p"},"<K, UK>, otherwise?: "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,l.yg)("inlineCode",{parentName:"p"},"<O>, hash?: number) => V "),(0,l.yg)("code",null,"|"),(0,l.yg)("inlineCode",{parentName:"p"}," O;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"haskey"}),(0,l.yg)("inlineCode",{parentName:"h3"},"hasKey")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-12"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"hasKey: <UK>(key: "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,l.yg)("inlineCode",{parentName:"p"},"<K, UK>) => boolean;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"level"}),(0,l.yg)("inlineCode",{parentName:"h3"},"level")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-13"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"level: number;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"modifyat"}),(0,l.yg)("inlineCode",{parentName:"h3"},"modifyAt")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-14"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"modifyAt: (key: K, options: {"),(0,l.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,l.yg)("inlineCode",{parentName:"p"},"ifNew?: "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/common/OptLazyOr/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"OptLazyOr")),(0,l.yg)("inlineCode",{parentName:"p"},"<V, Token>;"),(0,l.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,l.yg)("inlineCode",{parentName:"p"},"ifExists?: ((currentValue: V, remove: Token) => V "),(0,l.yg)("code",null,"|"),(0,l.yg)("inlineCode",{parentName:"p"},"Token)"),(0,l.yg)("code",null,"|"),(0,l.yg)("inlineCode",{parentName:"p"}," V;"),(0,l.yg)("br",null),"\xa0","\xa0",(0,l.yg)("inlineCode",{parentName:"p"},"}, keyHash?: number) => boolean;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"removekey"}),(0,l.yg)("inlineCode",{parentName:"h3"},"removeKey")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-15"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"removeKey: <UK, O>(key: "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,l.yg)("inlineCode",{parentName:"p"},"<K, UK>, otherwise?: "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,l.yg)("inlineCode",{parentName:"p"},"<O>) => V "),(0,l.yg)("code",null,"|"),(0,l.yg)("inlineCode",{parentName:"p"}," O;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"removekeys"}),(0,l.yg)("inlineCode",{parentName:"h3"},"removeKeys")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-16"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"removeKeys: <UK>(keys: "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,l.yg)("inlineCode",{parentName:"p"},"<"),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,l.yg)("inlineCode",{parentName:"p"},"<K, UK>>) => boolean;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"set"}),(0,l.yg)("inlineCode",{parentName:"h3"},"set")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-17"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"set: (key: K, value: V) => boolean;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"size"}),(0,l.yg)("inlineCode",{parentName:"h3"},"size")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-18"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"size: number;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"source"}),(0,l.yg)("inlineCode",{parentName:"h3"},"source")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-19"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"source?: undefined "),(0,l.yg)("code",null,"|"),(0,l.yg)("inlineCode",{parentName:"p"}," "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/hashed/map-custom/HashMapBlock/class"}),(0,l.yg)("inlineCode",{parentName:"a"},"HashMapBlock")),(0,l.yg)("inlineCode",{parentName:"p"},"<K, V>;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"updateat"}),(0,l.yg)("inlineCode",{parentName:"h3"},"updateAt")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-20"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"updateAt: <O>(key: K, update: "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/common/Update/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"Update")),(0,l.yg)("inlineCode",{parentName:"p"},"<V>, otherwise?: "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,l.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,l.yg)("inlineCode",{parentName:"p"},"<O>) => V "),(0,l.yg)("code",null,"|"),(0,l.yg)("inlineCode",{parentName:"p"}," O;")))),(0,l.yg)("h2",p({},{id:"methods"}),"Methods"),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"addentryinternal"}),(0,l.yg)("inlineCode",{parentName:"h3"},"addEntryInternal")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-21"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"addEntryInternal(entry: readonly [K, V], hash?: number): boolean;"))),(0,l.yg)("h4",p({},{id:"parameters"}),"Parameters"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",p({parentName:"tr"},{align:null}),"Name"),(0,l.yg)("th",p({parentName:"tr"},{align:null}),"Type"),(0,l.yg)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",p({parentName:"tr"},{align:null}),(0,l.yg)("inlineCode",{parentName:"td"},"entry")),(0,l.yg)("td",p({parentName:"tr"},{align:null}),(0,l.yg)("inlineCode",{parentName:"td"},"readonly [K, V]")),(0,l.yg)("td",p({parentName:"tr"},{align:null}))),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",p({parentName:"tr"},{align:null}),(0,l.yg)("inlineCode",{parentName:"td"},"hash")),(0,l.yg)("td",p({parentName:"tr"},{align:null}),(0,l.yg)("inlineCode",{parentName:"td"},"number")),(0,l.yg)("td",p({parentName:"tr"},{align:null})))))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"buildne"}),(0,l.yg)("inlineCode",{parentName:"h3"},"buildNE")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-22"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"buildNE(): "),(0,l.yg)("a",p({parentName:"p"},{href:"/api/rimbu/hashed/map-custom/HashMapBlock/class"}),(0,l.yg)("inlineCode",{parentName:"a"},"HashMapBlock")),(0,l.yg)("inlineCode",{parentName:"p"},"<K, V>;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"checklock"}),(0,l.yg)("inlineCode",{parentName:"h3"},"checkLock")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-23"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"checkLock(): void;")))),(0,l.yg)("details",null,(0,l.yg)("summary",null,(0,l.yg)("h3",p({},{id:"preparemutate"}),(0,l.yg)("inlineCode",{parentName:"h3"},"prepareMutate")),(0,l.yg)("p",null,"undocumented")),(0,l.yg)("h4",p({},{id:"definition-24"}),"Definition"),(0,l.yg)("code",null,(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"prepareMutate(): void;")))))}C.isMDXComponent=!0}}]);