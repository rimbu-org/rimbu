"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[48573],{15680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>h});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),m=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},g=function(e){var n=m(e.components);return a.createElement(p.Provider,{value:n},e.children)},y="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),y=m(t),d=r,h=y["".concat(p,".").concat(d)]||y[d]||c[d]||l;return t?a.createElement(h,i(i({ref:n},g),{},{components:t})):a.createElement(h,i({ref:n},g))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[y]="string"==typeof e?e:r,i[1]=o;for(var m=2;m<l;m++)i[m]=t[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},28664:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>C,contentTitle:()=>u,default:()=>v,frontMatter:()=>h,metadata:()=>s,toc:()=>f});var a=t(15680),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,g=(e,n,t)=>n in e?r(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,y=(e,n)=>{for(var t in n||(n={}))p.call(n,t)&&g(e,t,n[t]);if(o)for(var t of o(n))m.call(n,t)&&g(e,t,n[t]);return e},c=(e,n)=>l(e,i(n)),d=(e,n)=>{var t={};for(var a in e)p.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&o)for(var a of o(e))n.indexOf(a)<0&&m.call(e,a)&&(t[a]=e[a]);return t};const h={title:"RemoteChannelClient",slug:"/rimbu/channel/RemoteChannelClient/interface"},u="interface RemoteChannelClient",s={unversionedId:"rimbu_channel/RemoteChannelClient.interface",id:"rimbu_channel/RemoteChannelClient.interface",title:"RemoteChannelClient",description:"A RemoteChannelClient allows creating channels to communicate with a RemoteChannelServer. The server should be configured to listen to channels with the channel ids provided to the channel creation functions in the client.",source:"@site/api/rimbu_channel/RemoteChannelClient.interface.mdx",sourceDirName:"rimbu_channel",slug:"/rimbu/channel/RemoteChannelClient/interface",permalink:"/api/rimbu/channel/RemoteChannelClient/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"RemoteChannelClient",slug:"/rimbu/channel/RemoteChannelClient/interface"},sidebar:"defaultSidebar",previous:{title:"RemoteChannelClient.WriteChannelConfig",permalink:"/api/rimbu/channel/RemoteChannelClient/WriteChannelConfig/interface"},next:{title:"RemoteChannelServer (namespace)",permalink:"/api/rimbu/channel/RemoteChannelServer/namespace"}},C={},f=[{value:"Methods",id:"methods",level:2},{value:"<code>createCross</code>",id:"createcross",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>createRead</code>",id:"createread",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>createWrite</code>",id:"createwrite",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-2",level:4}],N={toc:f},b="wrapper";function v(e){var n=e,{components:t}=n,r=d(n,["components"]);return(0,a.yg)(b,c(y(y({},N),r),{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",y({},{id:"interface-remotechannelclient"}),(0,a.yg)("inlineCode",{parentName:"h1"},"interface RemoteChannelClient")),(0,a.yg)("p",null,"A RemoteChannelClient allows creating channels to communicate with a RemoteChannelServer. The server should be configured to listen to channels with the channel ids provided to the channel creation functions in the client."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Companion namespace:")," ",(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannelClient/namespace"}),"RemoteChannelClient")),(0,a.yg)("h2",y({},{id:"methods"}),"Methods"),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",y({},{id:"createcross"}),(0,a.yg)("inlineCode",{parentName:"h3"},"createCross")),(0,a.yg)("p",null,"Resolves, if succesful, to a new remote cross channel.")),(0,a.yg)("h4",y({},{id:"definition"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"createCross<TSend = void, TReceive = TSend>(config: "),(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannelClient/CrossChannelConfig/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.CrossChannelConfig")),(0,a.yg)("inlineCode",{parentName:"p"},"): Promise<"),(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/CrossChannel/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"CrossChannel")),(0,a.yg)("inlineCode",{parentName:"p"},"<TSend, TReceive>>;"))),(0,a.yg)("h4",y({},{id:"type-parameters"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Default"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),"TSend"),(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"void")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),"the send message type")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),"TReceive"),(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"TSend")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),"the receive message type")))),(0,a.yg)("h4",y({},{id:"parameters"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"config")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannelClient/CrossChannelConfig/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.CrossChannelConfig"))),(0,a.yg)("td",y({parentName:"tr"},{align:null}),"the remote channel configuration"))))),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",y({},{id:"createread"}),(0,a.yg)("inlineCode",{parentName:"h3"},"createRead")),(0,a.yg)("p",null,"Resolves, if succesful, to a new remote read channel.")),(0,a.yg)("h4",y({},{id:"definition-1"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"createRead<T>(config: "),(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannelClient/ReadChannelConfig/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.ReadChannelConfig")),(0,a.yg)("inlineCode",{parentName:"p"},"): Promise<"),(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/Channel/Read/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"Channel.Read")),(0,a.yg)("inlineCode",{parentName:"p"},"<T>>;"))),(0,a.yg)("h4",y({},{id:"type-parameters-1"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),"T"),(0,a.yg)("td",y({parentName:"tr"},{align:null}),"the channel message type")))),(0,a.yg)("h4",y({},{id:"parameters-1"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"config")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannelClient/ReadChannelConfig/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.ReadChannelConfig"))),(0,a.yg)("td",y({parentName:"tr"},{align:null}),"the remote channel configuration"))))),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",y({},{id:"createwrite"}),(0,a.yg)("inlineCode",{parentName:"h3"},"createWrite")),(0,a.yg)("p",null,"Resolves, if succesful, to a new remote write channel.")),(0,a.yg)("h4",y({},{id:"definition-2"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"createWrite<T>(config: "),(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannelClient/WriteChannelConfig/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.WriteChannelConfig")),(0,a.yg)("inlineCode",{parentName:"p"},"): Promise<"),(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/Channel/Write/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"Channel.Write")),(0,a.yg)("inlineCode",{parentName:"p"},"<T>>;"))),(0,a.yg)("h4",y({},{id:"type-parameters-2"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),"T"),(0,a.yg)("td",y({parentName:"tr"},{align:null}),"the channel message type")))),(0,a.yg)("h4",y({},{id:"parameters-2"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"config")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannelClient/WriteChannelConfig/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.WriteChannelConfig"))),(0,a.yg)("td",y({parentName:"tr"},{align:null}),"the remote channel configuration"))))))}v.isMDXComponent=!0}}]);