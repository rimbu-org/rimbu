"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[86736],{15680:(e,r,n)=>{n.d(r,{xA:()=>p,yg:()=>m});var t=n(96540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=t.createContext({}),u=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},p=function(e){var r=u(e.components);return t.createElement(c.Provider,{value:r},e.children)},s="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=u(n),d=a,m=s["".concat(c,".").concat(d)]||s[d]||y[d]||i;return n?t.createElement(m,o(o({ref:r},p),{},{components:n})):t.createElement(m,o({ref:r},p))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[s]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},20166:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>b,contentTitle:()=>f,default:()=>w,frontMatter:()=>m,metadata:()=>g,toc:()=>v});var t=n(15680),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,p=(e,r,n)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[r]=n,s=(e,r)=>{for(var n in r||(r={}))c.call(r,n)&&p(e,n,r[n]);if(l)for(var n of l(r))u.call(r,n)&&p(e,n,r[n]);return e},y=(e,r)=>i(e,o(r)),d=(e,r)=>{var n={};for(var t in e)c.call(e,t)&&r.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&l)for(var t of l(e))r.indexOf(t)<0&&u.call(e,t)&&(n[t]=e[t]);return n};const m={title:"single",slug:"/rimbu/stream/AsyncReducer/single/var"},f="type single",g={unversionedId:"rimbu_stream/AsyncReducer/single.var",id:"rimbu_stream/AsyncReducer/single.var",title:"single",description:"Returns an AsyncReducer that only produces an output value when having receives exactly one input value, otherwise will return the otherwise value or undefined.",source:"@site/api/rimbu_stream/AsyncReducer/single.var.mdx",sourceDirName:"rimbu_stream/AsyncReducer",slug:"/rimbu/stream/AsyncReducer/single/var",permalink:"/api/rimbu/stream/AsyncReducer/single/var",draft:!1,tags:[],version:"current",frontMatter:{title:"single",slug:"/rimbu/stream/AsyncReducer/single/var"},sidebar:"defaultSidebar",previous:{title:"race",permalink:"/api/rimbu/stream/AsyncReducer/race/var"},next:{title:"AsyncReducer",permalink:"/api/rimbu/stream/AsyncReducer/type"}},b={},v=[{value:"Definition",id:"definition",level:2}],O={toc:v},h="wrapper";function w(e){var r=e,{components:n}=r,a=d(r,["components"]);return(0,t.yg)(h,y(s(s({},O),a),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",s({},{id:"type-single"}),(0,t.yg)("inlineCode",{parentName:"h1"},"type single")),(0,t.yg)("p",null,"Returns an AsyncReducer that only produces an output value when having receives exactly one input value, otherwise will return the ",(0,t.yg)("inlineCode",{parentName:"p"},"otherwise")," value or undefined."),(0,t.yg)("h2",s({},{id:"definition"}),"Definition"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"single: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T>(): "),(0,t.yg)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, T "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T, O>(otherwise: AsyncOptLazy<O>): "),(0,t.yg)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, T "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}")))}w.isMDXComponent=!0}}]);