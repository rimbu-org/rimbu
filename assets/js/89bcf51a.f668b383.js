"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[20258],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>g});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),y=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=y(e.components);return r.createElement(o.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=y(n),d=a,g=p["".concat(o,".").concat(d)]||p[d]||c[d]||l;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var y=2;y<l;y++)i[y]=n[y];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},63053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>m,default:()=>N,frontMatter:()=>g,metadata:()=>f,toc:()=>h});var r=n(15680),a=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))o.call(t,n)&&u(e,n,t[n]);if(s)for(var n of s(t))y.call(t,n)&&u(e,n,t[n]);return e},c=(e,t)=>l(e,i(t)),d=(e,t)=>{var n={};for(var r in e)o.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&s)for(var r of s(e))t.indexOf(r)<0&&y.call(e,r)&&(n[r]=e[r]);return n};const g={title:"Spy.ClsMeta<C,A>",slug:"/rimbu/spy/Spy/ClsMeta/interface"},m="interface Spy.ClsMeta<C,A>",f={unversionedId:"rimbu_spy/Spy/ClsMeta.interface",id:"rimbu_spy/Spy/ClsMeta.interface",title:"Spy.ClsMeta<C,A>",description:"The metadata object type for a spied class.",source:"@site/api/rimbu_spy/Spy/ClsMeta.interface.mdx",sourceDirName:"rimbu_spy/Spy",slug:"/rimbu/spy/Spy/ClsMeta/interface",permalink:"/api/rimbu/spy/Spy/ClsMeta/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"Spy.ClsMeta<C,A>",slug:"/rimbu/spy/Spy/ClsMeta/interface"},sidebar:"defaultSidebar",previous:{title:"Cls",permalink:"/api/rimbu/spy/Spy/Cls/type"},next:{title:"ClsObj",permalink:"/api/rimbu/spy/Spy/ClsObj/type"}},b={},h=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>constructorCalls</code>",id:"constructorcalls",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>instances</code>",id:"instances",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>nrInstances</code>",id:"nrinstances",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>clearInstances</code>",id:"clearinstances",level:3},{value:"Definition",id:"definition-3",level:4},{value:"<code>resetAllStubs</code>",id:"resetallstubs",level:3},{value:"Definition",id:"definition-4",level:4},{value:"<code>resetConstructorStub</code>",id:"resetconstructorstub",level:3},{value:"Definition",id:"definition-5",level:4},{value:"<code>resetInstanceStubs</code>",id:"resetinstancestubs",level:3},{value:"Definition",id:"definition-6",level:4},{value:"<code>setConstructorStub</code>",id:"setconstructorstub",level:3},{value:"Definition",id:"definition-7",level:4},{value:"Parameters",id:"parameters",level:4}],v={toc:h},C="wrapper";function N(e){var t=e,{components:n}=t,a=d(t,["components"]);return(0,r.yg)(C,c(p(p({},v),a),{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",p({},{id:"interface-spyclsmetaca"}),(0,r.yg)("inlineCode",{parentName:"h1"},"interface Spy.ClsMeta<C,A>")),(0,r.yg)("p",null,"The metadata object type for a spied class."),(0,r.yg)("h2",p({},{id:"type-parameters"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",p({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",p({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",p({parentName:"tr"},{align:null}),"C"),(0,r.yg)("td",p({parentName:"tr"},{align:null})),(0,r.yg)("td",p({parentName:"tr"},{align:null}),"the class type")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",p({parentName:"tr"},{align:null}),"A"),(0,r.yg)("td",p({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"any[]")),(0,r.yg)("td",p({parentName:"tr"},{align:null}),"the class constructor parameter array type")))),(0,r.yg)("h2",p({},{id:"properties"}),"Properties"),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",p({},{id:"constructorcalls"}),(0,r.yg)("inlineCode",{parentName:"h3"},"constructorCalls")),(0,r.yg)("p",null,"Returns an array of received constructor call parameters.")),(0,r.yg)("h4",p({},{id:"definition"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"get constructorCalls(): A[];")))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",p({},{id:"instances"}),(0,r.yg)("inlineCode",{parentName:"h3"},"instances")),(0,r.yg)("p",null,"Returns an array of class instance metadata objects containing all instances created from the spy class.")),(0,r.yg)("h4",p({},{id:"definition-1"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"get instances(): "),(0,r.yg)("a",p({parentName:"p"},{href:"/api/rimbu/spy/Spy/ClsObj/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"Spy.ClsObj")),(0,r.yg)("inlineCode",{parentName:"p"},"<C, A>[];")))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",p({},{id:"nrinstances"}),(0,r.yg)("inlineCode",{parentName:"h3"},"nrInstances")),(0,r.yg)("p",null,"Returns the number of class instances created from the spy.")),(0,r.yg)("h4",p({},{id:"definition-2"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"get nrInstances(): number;")))),(0,r.yg)("h2",p({},{id:"methods"}),"Methods"),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",p({},{id:"clearinstances"}),(0,r.yg)("inlineCode",{parentName:"h3"},"clearInstances")),(0,r.yg)("p",null,"Empties the history of created spy class instances.")),(0,r.yg)("h4",p({},{id:"definition-3"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"clearInstances(): void;")))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",p({},{id:"resetallstubs"}),(0,r.yg)("inlineCode",{parentName:"h3"},"resetAllStubs")),(0,r.yg)("p",null,"Resets the current spy class constructor stub and all the instances method stubs.")),(0,r.yg)("h4",p({},{id:"definition-4"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"resetAllStubs(): void;")))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",p({},{id:"resetconstructorstub"}),(0,r.yg)("inlineCode",{parentName:"h3"},"resetConstructorStub")),(0,r.yg)("p",null,"Resets the used constructor to the originally given constructor.")),(0,r.yg)("h4",p({},{id:"definition-5"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"resetConstructorStub(): void;")))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",p({},{id:"resetinstancestubs"}),(0,r.yg)("inlineCode",{parentName:"h3"},"resetInstanceStubs")),(0,r.yg)("p",null,"Resets all the current instance method stubs.")),(0,r.yg)("h4",p({},{id:"definition-6"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"resetInstanceStubs(): void;")))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",p({},{id:"setconstructorstub"}),(0,r.yg)("inlineCode",{parentName:"h3"},"setConstructorStub")),(0,r.yg)("p",null,"Sets the used constructor stub function for new instances of the spy class.")),(0,r.yg)("h4",p({},{id:"definition-7"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"setConstructorStub(constructor: "),(0,r.yg)("a",p({parentName:"p"},{href:"/api/rimbu/spy/Func/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"Func")),(0,r.yg)("inlineCode",{parentName:"p"},"<A, C> "),(0,r.yg)("code",null,"|"),(0,r.yg)("inlineCode",{parentName:"p"}," undefined): void;"))),(0,r.yg)("h4",p({},{id:"parameters"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",p({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",p({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",p({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"constructor")),(0,r.yg)("td",p({parentName:"tr"},{align:null}),(0,r.yg)("a",p({parentName:"td"},{href:"/api/rimbu/spy/Func/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"Func")),(0,r.yg)("inlineCode",{parentName:"td"},"<A, C> "),(0,r.yg)("code",null,"|"),(0,r.yg)("inlineCode",{parentName:"td"}," undefined")),(0,r.yg)("td",p({parentName:"tr"},{align:null}),"the function to use as constructor of the class"))))))}N.isMDXComponent=!0}}]);