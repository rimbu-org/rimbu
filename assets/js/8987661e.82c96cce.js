"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[76931],{15680:(e,a,t)=>{t.d(a,{xA:()=>m,yg:()=>h});var r=t(96540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=r.createContext({}),d=function(e){var a=r.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},m=function(e){var a=d(e.components);return r.createElement(o.Provider,{value:a},e.children)},y="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),y=d(t),u=n,h=y["".concat(o,".").concat(u)]||y[u]||g[u]||l;return t?r.createElement(h,i(i({ref:a},m),{},{components:t})):r.createElement(h,i({ref:a},m))}));function h(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,i=new Array(l);i[0]=u;var p={};for(var o in a)hasOwnProperty.call(a,o)&&(p[o]=a[o]);p.originalType=e,p[y]="string"==typeof e?e:n,i[1]=p;for(var d=2;d<l;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},54630:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>C,frontMatter:()=>h,metadata:()=>N,toc:()=>b});var r=t(15680),n=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,m=(e,a,t)=>a in e?n(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,y=(e,a)=>{for(var t in a||(a={}))o.call(a,t)&&m(e,t,a[t]);if(p)for(var t of p(a))d.call(a,t)&&m(e,t,a[t]);return e},g=(e,a)=>l(e,i(a)),u=(e,a)=>{var t={};for(var r in e)o.call(e,r)&&a.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&p)for(var r of p(e))a.indexOf(r)<0&&d.call(e,r)&&(t[r]=e[r]);return t};const h={title:"ArrowValuedGraphHashed (namespace)",slug:"/rimbu/graph/ArrowValuedGraphHashed/namespace"},s="namespace ArrowValuedGraphHashed",N={unversionedId:"rimbu_graph/ArrowValuedGraphHashed/index",id:"rimbu_graph/ArrowValuedGraphHashed/index",title:"ArrowValuedGraphHashed (namespace)",description:"An type-invariant immutable valued arrow (directed) graph. The nodes are internally maintained using HashMaps See the Graph documentation and the ArrowValuedGraphHashed API documentation",source:"@site/api/rimbu_graph/ArrowValuedGraphHashed/index.mdx",sourceDirName:"rimbu_graph/ArrowValuedGraphHashed",slug:"/rimbu/graph/ArrowValuedGraphHashed/namespace",permalink:"/api/rimbu/graph/ArrowValuedGraphHashed/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"ArrowValuedGraphHashed (namespace)",slug:"/rimbu/graph/ArrowValuedGraphHashed/namespace"},sidebar:"defaultSidebar",previous:{title:"ArrowValuedGraph<N,V>",permalink:"/api/rimbu/graph/ArrowValuedGraph/interface"},next:{title:"ArrowValuedGraphHashed.Builder<N,V>",permalink:"/api/rimbu/graph/ArrowValuedGraphHashed/Builder/interface"}},c={},b=[{value:"Interfaces",id:"interfaces",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>builder</code>",id:"builder",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>createContext</code>",id:"createcontext",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>defaultContext</code>",id:"defaultcontext",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"<code>empty</code>",id:"empty",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>from</code>",id:"from",level:3},{value:"Definitions",id:"definitions",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>of</code>",id:"of",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>reducer</code>",id:"reducer",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-4",level:4}],f={toc:b},v="wrapper";function C(e){var a=e,{components:t}=a,n=u(a,["components"]);return(0,r.yg)(v,g(y(y({},f),n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",y({},{id:"namespace-arrowvaluedgraphhashed"}),(0,r.yg)("inlineCode",{parentName:"h1"},"namespace ArrowValuedGraphHashed")),(0,r.yg)("p",null,"An type-invariant immutable valued arrow (directed) graph. The nodes are internally maintained using HashMaps See the ",(0,r.yg)("a",y({parentName:"p"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,r.yg)("a",y({parentName:"p"},{href:"https://rimbu.org/api/rimbu/graph/ArrowValuedGraphHashed/interface"}),"ArrowValuedGraphHashed API documentation")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Companion interface:")," ",(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/ArrowValuedGraphHashed/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrowValuedGraphHashed<N,V>"))),(0,r.yg)("h2",y({},{id:"interfaces"}),"Interfaces"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/graph/ArrowValuedGraphHashed/Builder/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrowValuedGraphHashed.Builder<N,V>"))),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"A mutable ",(0,r.yg)("inlineCode",{parentName:"td"},"ArrowValuedGraphHashed")," builder used to efficiently create new immutable instances. See the ",(0,r.yg)("a",y({parentName:"td"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,r.yg)("a",y({parentName:"td"},{href:"https://rimbu.org/api/rimbu/graph/ArrowValuedGraphHashed/Builder/interface"}),"ArrowValuedGraphHashed.BuilderAPI documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/graph/ArrowValuedGraphHashed/Context/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrowValuedGraphHashed.Context<UN>"))),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"The ArrowValuedGraphHashed's Context instance that serves as a factory for all related immutable instances and builders.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/graph/ArrowValuedGraphHashed/NonEmpty/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrowValuedGraphHashed.NonEmpty<N,V>"))),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"A non-empty type-invariant immutable valued arrow (directed) graph. The nodes are internally maintained using HashMaps See the ",(0,r.yg)("a",y({parentName:"td"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,r.yg)("a",y({parentName:"td"},{href:"https://rimbu.org/api/rimbu/graph/ArrowValuedGraphHashed/interface"}),"ArrowValuedGraphHashed API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/graph/ArrowValuedGraphHashed/Types/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrowValuedGraphHashed.Types"))),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))),(0,r.yg)("h2",y({},{id:"static-methods"}),"Static Methods"),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"builder"}),(0,r.yg)("inlineCode",{parentName:"h3"},"builder")),(0,r.yg)("p",null,"Returns an empty builder instance.")),(0,r.yg)("h4",y({},{id:"definition"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"builder<N extends UN, V>(): "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, N, V>['builder'];"))),(0,r.yg)("h4",y({},{id:"type-parameters"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"N"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UN")),(0,r.yg)("td",y({parentName:"tr"},{align:null}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"V"),(0,r.yg)("td",y({parentName:"tr"},{align:null})),(0,r.yg)("td",y({parentName:"tr"},{align:null}))))),(0,r.yg)("admonition",y({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"ArrowValuedGraphHashed.builder<number, string>()    // => ArrowValuedGraphHashed.Builder<number, string>\n"))),(0,r.yg)("h4",y({},{id:"overrides"}),"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphBase/Factory/interface#builder"}),"Factory.builder"))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"createcontext"}),(0,r.yg)("inlineCode",{parentName:"h3"},"createContext")),(0,r.yg)("p",null,"Returns a new ArrowValuedGraphHashed context instance based on the given ",(0,r.yg)("inlineCode",{parentName:"p"},"options"),".")),(0,r.yg)("h4",y({},{id:"definition-1"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"createContext<UN>(options?: {"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"linkMapContext?: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/hashed/map/HashMap/Context/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMap.Context")),(0,r.yg)("inlineCode",{parentName:"p"},"<UN>;"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"linkConnectionsContext?: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/hashed/map/HashMap/Context/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMap.Context")),(0,r.yg)("inlineCode",{parentName:"p"},"<UN>;"),(0,r.yg)("br",null),"\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"}): ArrowValuedGraphHashed.Context<UN>;"))),(0,r.yg)("h4",y({},{id:"type-parameters-1"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"UN"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"the upper node type for which the context can create instances")))),(0,r.yg)("h4",y({},{id:"parameters"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"options")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"{"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"td"},"linkMapContext?: "),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/hashed/map/HashMap/Context/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMap.Context")),(0,r.yg)("inlineCode",{parentName:"td"},"<UN>;"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"td"},"linkConnectionsContext?: "),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/hashed/map/HashMap/Context/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMap.Context")),(0,r.yg)("inlineCode",{parentName:"td"},"<UN>;"),(0,r.yg)("br",null),"\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"td"},"}")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"(optional) an object containing the following properties:",(0,r.yg)("br",null)," - linkMapContext: (optional) the map context to use to maintain link maps",(0,r.yg)("br",null)," - linkConnectionsContext: (optional) the map context to use to maintain link connection maps"))))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"defaultcontext"}),(0,r.yg)("inlineCode",{parentName:"h3"},"defaultContext")),(0,r.yg)("p",null,"Returns the default context for this type of graph.")),(0,r.yg)("h4",y({},{id:"definition-2"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"defaultContext<UN>(): ArrowValuedGraphHashed.Context<UN>;"))),(0,r.yg)("h4",y({},{id:"type-parameters-2"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"UN"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"the upper node type that the context should accept"))))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"empty"}),(0,r.yg)("inlineCode",{parentName:"h3"},"empty")),(0,r.yg)("p",null,"Returns the (singleton) empty instance of this type and context with given key and value types.")),(0,r.yg)("h4",y({},{id:"definition-3"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"empty<N extends UN, V>(): "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, N, V>['normal'];"))),(0,r.yg)("h4",y({},{id:"type-parameters-3"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"N"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UN")),(0,r.yg)("td",y({parentName:"tr"},{align:null}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"V"),(0,r.yg)("td",y({parentName:"tr"},{align:null})),(0,r.yg)("td",y({parentName:"tr"},{align:null}))))),(0,r.yg)("admonition",y({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"ArrowValuedGraphHashed.empty<number, string>()    // => ArrowValuedGraphHashed<number, string>\nArrowValuedGraphHashed.empty<string, boolean>()   // => ArrowValuedGraphHashed<string, boolean>\n"))),(0,r.yg)("h4",y({},{id:"overrides-1"}),"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphBase/Factory/interface#empty"}),"Factory.empty"))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"from"}),(0,r.yg)("inlineCode",{parentName:"h3"},"from")),(0,r.yg)("p",null,"Returns an immutable valued Graph, containing the graph elements from each of the given ",(0,r.yg)("inlineCode",{parentName:"p"},"sources"),".")),(0,r.yg)("h4",y({},{id:"definitions"}),"Definitions"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"from<N extends UN, V>(...sources: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<"),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<ValuedGraphElement<N, V>>>): "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, N, V>['nonEmpty'];"))),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"from<N extends UN, V>(...sources: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<"),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,r.yg)("inlineCode",{parentName:"p"},"<ValuedGraphElement<N, V>>>): "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, N, V>['normal'];"))),(0,r.yg)("h4",y({},{id:"type-parameters-4"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"N"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UN")),(0,r.yg)("td",y({parentName:"tr"},{align:null}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"V"),(0,r.yg)("td",y({parentName:"tr"},{align:null})),(0,r.yg)("td",y({parentName:"tr"},{align:null}))))),(0,r.yg)("h4",y({},{id:"parameters-1"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"sources")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"td"},"<"),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,r.yg)("inlineCode",{parentName:"td"},"<ValuedGraphElement<N, V>>>")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"an array of ",(0,r.yg)("inlineCode",{parentName:"td"},"StreamSource")," instances containing graph elements to add")))),(0,r.yg)("admonition",y({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"ArrowValuedGraphHashed.from([[1], [2]], [[3, 4, 'c']])  // => ArrowValuedGraphHashed.NonEmpty<number, string>\n"))),(0,r.yg)("h4",y({},{id:"overrides-2"}),"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphBase/Factory/interface#from"}),"Factory.from"))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"of"}),(0,r.yg)("inlineCode",{parentName:"h3"},"of")),(0,r.yg)("p",null,"Returns an immutable valued Graph instance containing the graph elements from the given ",(0,r.yg)("inlineCode",{parentName:"p"},"graphElements"),".")),(0,r.yg)("h4",y({},{id:"definition-4"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"of<N extends UN, V>(...graphElements: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<ValuedGraphElement<N, V>>): "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, N, V>['nonEmpty'];"))),(0,r.yg)("h4",y({},{id:"type-parameters-5"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"N"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UN")),(0,r.yg)("td",y({parentName:"tr"},{align:null}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"V"),(0,r.yg)("td",y({parentName:"tr"},{align:null})),(0,r.yg)("td",y({parentName:"tr"},{align:null}))))),(0,r.yg)("h4",y({},{id:"parameters-2"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"graphElements")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"td"},"<ValuedGraphElement<N, V>>")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"a non-empty array of graph elements that are either a single tuple containing a node, or a triplet containing two connection nodes and the connection value.")))),(0,r.yg)("admonition",y({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"ArrowValuedGraphHashed.of([1], [2], [3, 4, 'a']) // => ArrowValuedGraphHashed.NonEmpty<number, string>\n"))),(0,r.yg)("h4",y({},{id:"overrides-3"}),"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphBase/Factory/interface#of"}),"Factory.of"))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"reducer"}),(0,r.yg)("inlineCode",{parentName:"h3"},"reducer")),(0,r.yg)("p",null,"Returns a ",(0,r.yg)("inlineCode",{parentName:"p"},"Reducer")," that adds valued received graph elements to a ValuedGraph and returns the ValuedGraph as a result. When a ",(0,r.yg)("inlineCode",{parentName:"p"},"source")," is given, the reducer will first create a graph from the source, and then add graph elements to it.")),(0,r.yg)("h4",y({},{id:"definition-5"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"reducer<N extends UN, V>(source?: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<ValuedGraphElement<N, V>>): Reducer<ValuedGraphElement<N, V>, "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, N, V>['normal']>;"))),(0,r.yg)("h4",y({},{id:"type-parameters-6"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"N"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UN")),(0,r.yg)("td",y({parentName:"tr"},{align:null}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"V"),(0,r.yg)("td",y({parentName:"tr"},{align:null})),(0,r.yg)("td",y({parentName:"tr"},{align:null}))))),(0,r.yg)("h4",y({},{id:"parameters-3"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"source")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,r.yg)("inlineCode",{parentName:"td"},"<ValuedGraphElement<N, V>>")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"(optional) an initial source of graph elements to add to")))),(0,r.yg)("admonition",y({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"const someSource: ValuedGraphElement<number, string>[] = [[1, 2, 'a'], [3], [5]];\nconst result = Stream.of([1, 3, 'b'], [4, 3, 'c']).reduce(ArrowGraphSorted.reducer(someSource))\nresult.toArray()   // => [[1, 2, 'a'], [1, 3, 'b'], [4, 3, 'c'], [5]]\n"))),(0,r.yg)("admonition",y({},{title:"note",type:"note"}),(0,r.yg)("p",{parentName:"admonition"},"uses a builder under the hood. If the given ",(0,r.yg)("inlineCode",{parentName:"p"},"source")," is a ValuedGraph in the same context, it will directly call ",(0,r.yg)("inlineCode",{parentName:"p"},".toBuilder()"),".")),(0,r.yg)("h4",y({},{id:"overrides-4"}),"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphBase/Factory/interface#reducer"}),"Factory.reducer"))))}C.isMDXComponent=!0}}]);