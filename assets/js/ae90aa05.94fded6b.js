"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[81701],{15680:(e,r,a)=>{a.d(r,{xA:()=>m,yg:()=>d});var t=a(96540);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function p(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?p(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function o(e,r){if(null==e)return{};var a,t,n=function(e,r){if(null==e)return{};var a,t,n={},p=Object.keys(e);for(t=0;t<p.length;t++)a=p[t],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(t=0;t<p.length;t++)a=p[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=t.createContext({}),c=function(e){var r=t.useContext(l),a=r;return e&&(a="function"==typeof e?e(r):i(i({},r),e)),a},m=function(e){var r=c(e.components);return t.createElement(l.Provider,{value:r},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},g=t.forwardRef((function(e,r){var a=e.components,n=e.mdxType,p=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=c(a),g=n,d=u["".concat(l,".").concat(g)]||u[g]||h[g]||p;return a?t.createElement(d,i(i({ref:r},m),{},{components:a})):t.createElement(d,i({ref:r},m))}));function d(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var p=a.length,i=new Array(p);i[0]=g;var o={};for(var l in r)hasOwnProperty.call(r,l)&&(o[l]=r[l]);o.originalType=e,o[u]="string"==typeof e?e:n,i[1]=o;for(var c=2;c<p;c++)i[c]=a[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},7153:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>f,contentTitle:()=>y,default:()=>v,frontMatter:()=>d,metadata:()=>s,toc:()=>b});var t=a(15680),n=Object.defineProperty,p=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,m=(e,r,a)=>r in e?n(e,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[r]=a,u=(e,r)=>{for(var a in r||(r={}))l.call(r,a)&&m(e,a,r[a]);if(o)for(var a of o(r))c.call(r,a)&&m(e,a,r[a]);return e},h=(e,r)=>p(e,i(r)),g=(e,r)=>{var a={};for(var t in e)l.call(e,t)&&r.indexOf(t)<0&&(a[t]=e[t]);if(null!=e&&o)for(var t of o(e))r.indexOf(t)<0&&c.call(e,t)&&(a[t]=e[t]);return a};const d={title:"Graph (namespace)",slug:"/rimbu/graph/Graph/namespace"},y="namespace Graph",s={unversionedId:"rimbu_graph/Graph/index",id:"rimbu_graph/Graph/index",title:"Graph (namespace)",description:"An type-invariant immutable graph. See the Graph documentation and the Graph API documentation",source:"@site/api/rimbu_graph/Graph/index.mdx",sourceDirName:"rimbu_graph/Graph",slug:"/rimbu/graph/Graph/namespace",permalink:"/api/rimbu/graph/Graph/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"Graph (namespace)",slug:"/rimbu/graph/Graph/namespace"},sidebar:"defaultSidebar",previous:{title:"EdgeValuedGraphSorted<N,V>",permalink:"/api/rimbu/graph/EdgeValuedGraphSorted/interface"},next:{title:"Graph.Builder<N>",permalink:"/api/rimbu/graph/Graph/Builder/interface"}},f={},b=[{value:"Interfaces",id:"interfaces",level:2}],N={toc:b},G="wrapper";function v(e){var r=e,{components:a}=r,n=g(r,["components"]);return(0,t.yg)(G,h(u(u({},N),n),{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h1",u({},{id:"namespace-graph"}),(0,t.yg)("inlineCode",{parentName:"h1"},"namespace Graph")),(0,t.yg)("p",null,"An type-invariant immutable graph. See the ",(0,t.yg)("a",u({parentName:"p"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,t.yg)("a",u({parentName:"p"},{href:"https://rimbu.org/api/rimbu/graph/Graph/interface"}),"Graph API documentation")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Companion interface:")," ",(0,t.yg)("a",u({parentName:"p"},{href:"/api/rimbu/graph/Graph/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"Graph<N>"))),(0,t.yg)("h2",u({},{id:"interfaces"}),"Interfaces"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",u({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",u({parentName:"tr"},{align:null}),(0,t.yg)("a",u({parentName:"td"},{href:"/api/rimbu/graph/Graph/Builder/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"Graph.Builder<N>"))),(0,t.yg)("td",u({parentName:"tr"},{align:null}),"A mutable ",(0,t.yg)("inlineCode",{parentName:"td"},"Graph")," builder used to efficiently create new immutable instances. See the ",(0,t.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,t.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/graph/Graph/Builder/interface"}),"Graph.Builder API documentation"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",u({parentName:"tr"},{align:null}),(0,t.yg)("a",u({parentName:"td"},{href:"/api/rimbu/graph/Graph/Context/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"Graph.Context<UN>"))),(0,t.yg)("td",u({parentName:"tr"},{align:null}),"The EdgeValuedGraGraphphSorted's Context instance that serves as a factory for all related immutable instances and builders.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",u({parentName:"tr"},{align:null}),(0,t.yg)("a",u({parentName:"td"},{href:"/api/rimbu/graph/Graph/NonEmpty/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"Graph.NonEmpty<N>"))),(0,t.yg)("td",u({parentName:"tr"},{align:null}),"A non-empty type-invariant immutable graph. See the ",(0,t.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,t.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/graph/Graph/interface"}),"Graph API documentation"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",u({parentName:"tr"},{align:null}),(0,t.yg)("a",u({parentName:"td"},{href:"/api/rimbu/graph/Graph/Types/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"Graph.Types"))),(0,t.yg)("td",u({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))))}v.isMDXComponent=!0}}]);