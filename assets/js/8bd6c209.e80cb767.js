"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[91537],{15680:(e,t,a)=>{a.d(t,{xA:()=>o,yg:()=>d});var i=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,i,r=function(e,t){if(null==e)return{};var a,i,r={},n=Object.keys(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=i.createContext({}),u=function(e){var t=i.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},o=function(e){var t=u(e.components);return i.createElement(l.Provider,{value:t},e.children)},c="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},s=i.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,l=e.parentName,o=m(e,["components","mdxType","originalType","parentName"]),c=u(a),s=r,d=c["".concat(l,".").concat(s)]||c[s]||b[s]||n;return a?i.createElement(d,p(p({ref:t},o),{},{components:a})):i.createElement(d,p({ref:t},o))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,p=new Array(n);p[0]=s;var m={};for(var l in t)hasOwnProperty.call(t,l)&&(m[l]=t[l]);m.originalType=e,m[c]="string"==typeof e?e:r,p[1]=m;for(var u=2;u<n;u++)p[u]=a[u];return i.createElement.apply(null,p)}return i.createElement.apply(null,a)}s.displayName="MDXCreateElement"},97668:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>y,default:()=>v,frontMatter:()=>d,metadata:()=>g,toc:()=>f});var i=a(15680),r=Object.defineProperty,n=Object.defineProperties,p=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,o=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,c=(e,t)=>{for(var a in t||(t={}))l.call(t,a)&&o(e,a,t[a]);if(m)for(var a of m(t))u.call(t,a)&&o(e,a,t[a]);return e},b=(e,t)=>n(e,p(t)),s=(e,t)=>{var a={};for(var i in e)l.call(e,i)&&t.indexOf(i)<0&&(a[i]=e[i]);if(null!=e&&m)for(var i of m(e))t.indexOf(i)<0&&u.call(e,i)&&(a[i]=e[i]);return a};const d={title:"@rimbu/bimultimap",slug:"/rimbu/bimultimap"},y="package @rimbu/bimultimap",g={unversionedId:"rimbu_bimultimap/index",id:"rimbu_bimultimap/index",title:"@rimbu/bimultimap",description:"The @rimbu/bimultimap package provides BiMultiMap implementations.",source:"@site/api/rimbu_bimultimap/index.mdx",sourceDirName:"rimbu_bimultimap",slug:"/rimbu/bimultimap",permalink:"/api/rimbu/bimultimap",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/bimultimap",slug:"/rimbu/bimultimap"},sidebar:"defaultSidebar",previous:{title:"BiMapNonEmptyImpl<K,V>",permalink:"/api/rimbu/bimap/custom/BiMapNonEmptyImpl/class"},next:{title:"BiMultiMap (namespace)",permalink:"/api/rimbu/bimultimap/BiMultiMap/namespace"}},h={},f=[{value:"Interfaces",id:"interfaces",level:2},{value:"Namespaces",id:"namespaces",level:2}],M={toc:f},N="wrapper";function v(e){var t=e,{components:a}=t,r=s(t,["components"]);return(0,i.yg)(N,b(c(c({},M),r),{components:a,mdxType:"MDXLayout"}),(0,i.yg)("h1",c({},{id:"package-rimbubimultimap"}),(0,i.yg)("inlineCode",{parentName:"h1"},"package @rimbu/bimultimap")),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"@rimbu/bimultimap")," package provides BiMultiMap implementations."),(0,i.yg)("p",null," See the ",(0,i.yg)("a",c({parentName:"p"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"Rimbu docs BiMultiMap page")," for more information."),(0,i.yg)("h2",c({},{id:"interfaces"}),"Interfaces"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",c({parentName:"tr"},{align:null}),"Name"),(0,i.yg)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",c({parentName:"tr"},{align:null}),(0,i.yg)("a",c({parentName:"td"},{href:"/api/rimbu/bimultimap/BiMultiMap/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"BiMultiMap<K,V>"))),(0,i.yg)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. See the ",(0,i.yg)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.yg)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/bimultimap/BiMultiMap/interface"}),"BiMultiMap API documentation"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",c({parentName:"tr"},{align:null}),(0,i.yg)("a",c({parentName:"td"},{href:"/api/rimbu/bimultimap/HashBiMultiMap/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashBiMultiMap<K,V>"))),(0,i.yg)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are hashed. See the ",(0,i.yg)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.yg)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/bimultimap/HashBiMultiMap/interface"}),"HashBiMultiMap API documentation"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",c({parentName:"tr"},{align:null}),(0,i.yg)("a",c({parentName:"td"},{href:"/api/rimbu/bimultimap/SortedBiMultiMap/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"SortedBiMultiMap<K,V>"))),(0,i.yg)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are sorted. See the ",(0,i.yg)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.yg)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/bimultimap/SortedBiMultiMap/interface"}),"HashBiMultiMap API documentation"))))),(0,i.yg)("h2",c({},{id:"namespaces"}),"Namespaces"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",c({parentName:"tr"},{align:null}),"Name"),(0,i.yg)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",c({parentName:"tr"},{align:null}),(0,i.yg)("a",c({parentName:"td"},{href:"/api/rimbu/bimultimap/BiMultiMap/namespace"}),(0,i.yg)("inlineCode",{parentName:"a"},"BiMultiMap"))),(0,i.yg)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. See the ",(0,i.yg)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.yg)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/bimultimap/BiMultiMap/interface"}),"BiMultiMap API documentation"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",c({parentName:"tr"},{align:null}),(0,i.yg)("a",c({parentName:"td"},{href:"/api/rimbu/bimultimap/HashBiMultiMap/namespace"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashBiMultiMap"))),(0,i.yg)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are hashed. See the ",(0,i.yg)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.yg)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/bimultimap/HashBiMultiMap/interface"}),"HashBiMultiMap API documentation"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",c({parentName:"tr"},{align:null}),(0,i.yg)("a",c({parentName:"td"},{href:"/api/rimbu/bimultimap/SortedBiMultiMap/namespace"}),(0,i.yg)("inlineCode",{parentName:"a"},"SortedBiMultiMap"))),(0,i.yg)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are sorted. See the ",(0,i.yg)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.yg)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/bimultimap/SortedBiMultiMap/interface"}),"HashBiMultiMap API documentation"))))))}v.isMDXComponent=!0}}]);