"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[71230],{15680:(e,a,t)=>{t.d(a,{xA:()=>c,yg:()=>d});var r=t(96540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function p(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?p(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},p=Object.keys(e);for(r=0;r<p.length;r++)t=p[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)t=p[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=r.createContext({}),m=function(e){var a=r.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},c=function(e){var a=m(e.components);return r.createElement(l.Provider,{value:a},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},h=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,p=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=m(t),h=n,d=s["".concat(l,".").concat(h)]||s[h]||u[h]||p;return t?r.createElement(d,i(i({ref:a},c),{},{components:t})):r.createElement(d,i({ref:a},c))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var p=t.length,i=new Array(p);i[0]=h;var o={};for(var l in a)hasOwnProperty.call(a,l)&&(o[l]=a[l]);o.originalType=e,o[s]="string"==typeof e?e:n,i[1]=o;for(var m=2;m<p;m++)i[m]=t[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},42088:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>g,contentTitle:()=>y,default:()=>N,frontMatter:()=>d,metadata:()=>b,toc:()=>f});var r=t(15680),n=Object.defineProperty,p=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,c=(e,a,t)=>a in e?n(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,s=(e,a)=>{for(var t in a||(a={}))l.call(a,t)&&c(e,t,a[t]);if(o)for(var t of o(a))m.call(a,t)&&c(e,t,a[t]);return e},u=(e,a)=>p(e,i(a)),h=(e,a)=>{var t={};for(var r in e)l.call(e,r)&&a.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&o)for(var r of o(e))a.indexOf(r)<0&&m.call(e,r)&&(t[r]=e[r]);return t};const d={title:"@rimbu/hashed/map",slug:"/rimbu/hashed/map"},y="package @rimbu/hashed/map",b={unversionedId:"rimbu_hashed/map/index",id:"rimbu_hashed/map/index",title:"@rimbu/hashed/map",description:"The @rimbu/hashed/map package provides the HashMap implementation.",source:"@site/api/rimbu_hashed/map/index.mdx",sourceDirName:"rimbu_hashed/map",slug:"/rimbu/hashed/map",permalink:"/api/rimbu/hashed/map",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/hashed/map",slug:"/rimbu/hashed/map"},sidebar:"defaultSidebar",previous:{title:"Hasher<UK>",permalink:"/api/rimbu/hashed/Hasher/interface"},next:{title:"HashMap (namespace)",permalink:"/api/rimbu/hashed/map/HashMap/namespace"}},g={},f=[{value:"Interfaces",id:"interfaces",level:2},{value:"Namespaces",id:"namespaces",level:2}],v={toc:f},O="wrapper";function N(e){var a=e,{components:t}=a,n=h(a,["components"]);return(0,r.yg)(O,u(s(s({},v),n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",s({},{id:"package-rimbuhashedmap"}),(0,r.yg)("inlineCode",{parentName:"h1"},"package @rimbu/hashed/map")),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"@rimbu/hashed/map")," package provides the ",(0,r.yg)("inlineCode",{parentName:"p"},"HashMap")," implementation."),(0,r.yg)("p",null," See the ",(0,r.yg)("a",s({parentName:"p"},{href:"/docs/collections/map"}),"Rimbu docs Map page")," for more information."),(0,r.yg)("h2",s({},{id:"interfaces"}),"Interfaces"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",s({parentName:"tr"},{align:null}),(0,r.yg)("a",s({parentName:"td"},{href:"/api/rimbu/hashed/map/HashMap/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMap<K,V>"))),(0,r.yg)("td",s({parentName:"tr"},{align:null}),"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,r.yg)("a",s({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,r.yg)("a",s({parentName:"td"},{href:"https://rimbu.org/api/rimbu/hashed/map/HashMap/interface"}),"HashMap API documentation"))))),(0,r.yg)("h2",s({},{id:"namespaces"}),"Namespaces"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",s({parentName:"tr"},{align:null}),(0,r.yg)("a",s({parentName:"td"},{href:"/api/rimbu/hashed/map/HashMap/namespace"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMap"))),(0,r.yg)("td",s({parentName:"tr"},{align:null}),"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,r.yg)("a",s({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,r.yg)("a",s({parentName:"td"},{href:"https://rimbu.org/api/rimbu/hashed/map/HashMap/interface"}),"HashMap API documentation"))))))}N.isMDXComponent=!0}}]);