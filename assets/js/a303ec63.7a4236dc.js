"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[24257],{15680:(e,n,a)=>{a.d(n,{xA:()=>y,yg:()=>h});var i=a(96540);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,i)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function p(e,n){if(null==e)return{};var a,i,t=function(e,n){if(null==e)return{};var a,i,t={},l=Object.keys(e);for(i=0;i<l.length;i++)a=l[i],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)a=l[i],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var o=i.createContext({}),u=function(e){var n=i.useContext(o),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},y=function(e){var n=u(e.components);return i.createElement(o.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},s=i.forwardRef((function(e,n){var a=e.components,t=e.mdxType,l=e.originalType,o=e.parentName,y=p(e,["components","mdxType","originalType","parentName"]),d=u(a),s=t,h=d["".concat(o,".").concat(s)]||d[s]||m[s]||l;return a?i.createElement(h,r(r({ref:n},y),{},{components:a})):i.createElement(h,r({ref:n},y))}));function h(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var l=a.length,r=new Array(l);r[0]=s;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p[d]="string"==typeof e?e:t,r[1]=p;for(var u=2;u<l;u++)r[u]=a[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}s.displayName="MDXCreateElement"},51200:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>f,contentTitle:()=>c,default:()=>b,frontMatter:()=>h,metadata:()=>g,toc:()=>v});var i=a(15680),t=Object.defineProperty,l=Object.defineProperties,r=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,y=(e,n,a)=>n in e?t(e,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[n]=a,d=(e,n)=>{for(var a in n||(n={}))o.call(n,a)&&y(e,a,n[a]);if(p)for(var a of p(n))u.call(n,a)&&y(e,a,n[a]);return e},m=(e,n)=>l(e,r(n)),s=(e,n)=>{var a={};for(var i in e)o.call(e,i)&&n.indexOf(i)<0&&(a[i]=e[i]);if(null!=e&&p)for(var i of p(e))n.indexOf(i)<0&&u.call(e,i)&&(a[i]=e[i]);return a};const h={title:"HashMultiMapHashValue.Types",slug:"/rimbu/multimap/HashMultiMapHashValue/Types/interface"},c="interface HashMultiMapHashValue.Types",g={unversionedId:"rimbu_multimap/HashMultiMapHashValue/Types.interface",id:"rimbu_multimap/HashMultiMapHashValue/Types.interface",title:"HashMultiMapHashValue.Types",description:"Utility interface that provides higher-kinded types for this collection.",source:"@site/api/rimbu_multimap/HashMultiMapHashValue/Types.interface.mdx",sourceDirName:"rimbu_multimap/HashMultiMapHashValue",slug:"/rimbu/multimap/HashMultiMapHashValue/Types/interface",permalink:"/api/rimbu/multimap/HashMultiMapHashValue/Types/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"HashMultiMapHashValue.Types",slug:"/rimbu/multimap/HashMultiMapHashValue/Types/interface"},sidebar:"defaultSidebar",previous:{title:"HashMultiMapHashValue.NonEmpty<K,V>",permalink:"/api/rimbu/multimap/HashMultiMapHashValue/NonEmpty/interface"},next:{title:"HashMultiMapHashValue<K,V>",permalink:"/api/rimbu/multimap/HashMultiMapHashValue/interface"}},f={},v=[{value:"Properties",id:"properties",level:2},{value:"<code>builder</code>",id:"builder",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>keyMap</code>",id:"keymap",level:3},{value:"Definition",id:"definition-2",level:4},{value:"<code>keyMapContext</code>",id:"keymapcontext",level:3},{value:"Definition",id:"definition-3",level:4},{value:"<code>keyMapNonEmpty</code>",id:"keymapnonempty",level:3},{value:"Definition",id:"definition-4",level:4},{value:"<code>keyMapValues</code>",id:"keymapvalues",level:3},{value:"Definition",id:"definition-5",level:4},{value:"<code>keyMapValuesContext</code>",id:"keymapvaluescontext",level:3},{value:"Definition",id:"definition-6",level:4},{value:"<code>keyMapValuesNonEmpty</code>",id:"keymapvaluesnonempty",level:3},{value:"Definition",id:"definition-7",level:4},{value:"<code>nonEmpty</code>",id:"nonempty",level:3},{value:"Definition",id:"definition-8",level:4},{value:"<code>normal</code>",id:"normal",level:3},{value:"Definition",id:"definition-9",level:4}],M={toc:v},N="wrapper";function b(e){var n=e,{components:a}=n,t=s(n,["components"]);return(0,i.yg)(N,m(d(d({},M),t),{components:a,mdxType:"MDXLayout"}),(0,i.yg)("h1",d({},{id:"interface-hashmultimaphashvaluetypes"}),(0,i.yg)("inlineCode",{parentName:"h1"},"interface HashMultiMapHashValue.Types")),(0,i.yg)("p",null,"Utility interface that provides higher-kinded types for this collection."),(0,i.yg)("h2",d({},{id:"properties"}),"Properties"),(0,i.yg)("details",null,(0,i.yg)("summary",null,(0,i.yg)("h3",d({},{id:"builder"}),(0,i.yg)("inlineCode",{parentName:"h3"},"builder")),(0,i.yg)("p",null,"undocumented")),(0,i.yg)("h4",d({},{id:"definition"}),"Definition"),(0,i.yg)("code",null,(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"readonly builder: "),(0,i.yg)("a",d({parentName:"p"},{href:"/api/rimbu/multimap/HashMultiMapHashValue/Builder/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashMultiMapHashValue.Builder")),(0,i.yg)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,i.yg)("details",null,(0,i.yg)("summary",null,(0,i.yg)("h3",d({},{id:"context"}),(0,i.yg)("inlineCode",{parentName:"h3"},"context")),(0,i.yg)("p",null,"undocumented")),(0,i.yg)("h4",d({},{id:"definition-1"}),"Definition"),(0,i.yg)("code",null,(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"readonly context: "),(0,i.yg)("a",d({parentName:"p"},{href:"/api/rimbu/multimap/HashMultiMapHashValue/Context/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashMultiMapHashValue.Context")),(0,i.yg)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,i.yg)("details",null,(0,i.yg)("summary",null,(0,i.yg)("h3",d({},{id:"keymap"}),(0,i.yg)("inlineCode",{parentName:"h3"},"keyMap")),(0,i.yg)("p",null,"undocumented")),(0,i.yg)("h4",d({},{id:"definition-2"}),"Definition"),(0,i.yg)("code",null,(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"readonly keyMap: "),(0,i.yg)("a",d({parentName:"p"},{href:"/api/rimbu/hashed/map/HashMap/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashMap")),(0,i.yg)("inlineCode",{parentName:"p"},"<this['_K'], "),(0,i.yg)("a",d({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/NonEmpty/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashSet.NonEmpty")),(0,i.yg)("inlineCode",{parentName:"p"},"<this['_V']>>;")))),(0,i.yg)("details",null,(0,i.yg)("summary",null,(0,i.yg)("h3",d({},{id:"keymapcontext"}),(0,i.yg)("inlineCode",{parentName:"h3"},"keyMapContext")),(0,i.yg)("p",null,"undocumented")),(0,i.yg)("h4",d({},{id:"definition-3"}),"Definition"),(0,i.yg)("code",null,(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"readonly keyMapContext: "),(0,i.yg)("a",d({parentName:"p"},{href:"/api/rimbu/hashed/map/HashMap/Context/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashMap.Context")),(0,i.yg)("inlineCode",{parentName:"p"},"<this['_K']>;")))),(0,i.yg)("details",null,(0,i.yg)("summary",null,(0,i.yg)("h3",d({},{id:"keymapnonempty"}),(0,i.yg)("inlineCode",{parentName:"h3"},"keyMapNonEmpty")),(0,i.yg)("p",null,"undocumented")),(0,i.yg)("h4",d({},{id:"definition-4"}),"Definition"),(0,i.yg)("code",null,(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"readonly keyMapNonEmpty: "),(0,i.yg)("a",d({parentName:"p"},{href:"/api/rimbu/hashed/map/HashMap/NonEmpty/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashMap.NonEmpty")),(0,i.yg)("inlineCode",{parentName:"p"},"<this['_K'], "),(0,i.yg)("a",d({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/NonEmpty/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashSet.NonEmpty")),(0,i.yg)("inlineCode",{parentName:"p"},"<this['_V']>>;")))),(0,i.yg)("details",null,(0,i.yg)("summary",null,(0,i.yg)("h3",d({},{id:"keymapvalues"}),(0,i.yg)("inlineCode",{parentName:"h3"},"keyMapValues")),(0,i.yg)("p",null,"undocumented")),(0,i.yg)("h4",d({},{id:"definition-5"}),"Definition"),(0,i.yg)("code",null,(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"readonly keyMapValues: "),(0,i.yg)("a",d({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashSet")),(0,i.yg)("inlineCode",{parentName:"p"},"<this['_V']>;")))),(0,i.yg)("details",null,(0,i.yg)("summary",null,(0,i.yg)("h3",d({},{id:"keymapvaluescontext"}),(0,i.yg)("inlineCode",{parentName:"h3"},"keyMapValuesContext")),(0,i.yg)("p",null,"undocumented")),(0,i.yg)("h4",d({},{id:"definition-6"}),"Definition"),(0,i.yg)("code",null,(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"readonly keyMapValuesContext: "),(0,i.yg)("a",d({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/Context/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashSet.Context")),(0,i.yg)("inlineCode",{parentName:"p"},"<this['_V']>;")))),(0,i.yg)("details",null,(0,i.yg)("summary",null,(0,i.yg)("h3",d({},{id:"keymapvaluesnonempty"}),(0,i.yg)("inlineCode",{parentName:"h3"},"keyMapValuesNonEmpty")),(0,i.yg)("p",null,"undocumented")),(0,i.yg)("h4",d({},{id:"definition-7"}),"Definition"),(0,i.yg)("code",null,(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"readonly keyMapValuesNonEmpty: "),(0,i.yg)("a",d({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/NonEmpty/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashSet.NonEmpty")),(0,i.yg)("inlineCode",{parentName:"p"},"<this['_V']>;")))),(0,i.yg)("details",null,(0,i.yg)("summary",null,(0,i.yg)("h3",d({},{id:"nonempty"}),(0,i.yg)("inlineCode",{parentName:"h3"},"nonEmpty")),(0,i.yg)("p",null,"undocumented")),(0,i.yg)("h4",d({},{id:"definition-8"}),"Definition"),(0,i.yg)("code",null,(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"readonly nonEmpty: "),(0,i.yg)("a",d({parentName:"p"},{href:"/api/rimbu/multimap/HashMultiMapHashValue/NonEmpty/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashMultiMapHashValue.NonEmpty")),(0,i.yg)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,i.yg)("details",null,(0,i.yg)("summary",null,(0,i.yg)("h3",d({},{id:"normal"}),(0,i.yg)("inlineCode",{parentName:"h3"},"normal")),(0,i.yg)("p",null,"undocumented")),(0,i.yg)("h4",d({},{id:"definition-9"}),"Definition"),(0,i.yg)("code",null,(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"readonly normal: "),(0,i.yg)("a",d({parentName:"p"},{href:"/api/rimbu/multimap/HashMultiMapHashValue/interface"}),(0,i.yg)("inlineCode",{parentName:"a"},"HashMultiMapHashValue")),(0,i.yg)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))))}b.isMDXComponent=!0}}]);