"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[4582],{15680:(e,t,n)=>{n.d(t,{xA:()=>m,yg:()=>d});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=u(n),y=a,d=s["".concat(p,".").concat(y)]||s[y]||c[y]||i;return n?r.createElement(d,l(l({ref:t},m),{},{components:n})):r.createElement(d,l({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=y;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[s]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},76958:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>f,default:()=>S,frontMatter:()=>d,metadata:()=>g,toc:()=>b});var r=n(15680),a=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&m(e,n,t[n]);if(o)for(var n of o(t))u.call(t,n)&&m(e,n,t[n]);return e},c=(e,t)=>i(e,l(t)),y=(e,t)=>{var n={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&o)for(var r of o(e))t.indexOf(r)<0&&u.call(e,r)&&(n[r]=e[r]);return n};const d={title:"HashMultiSet.NonEmpty<T>",slug:"/rimbu/multiset/HashMultiSet/NonEmpty/interface"},f="interface HashMultiSet.NonEmpty<T>",g={unversionedId:"rimbu_multiset/HashMultiSet/NonEmpty.interface",id:"rimbu_multiset/HashMultiSet/NonEmpty.interface",title:"HashMultiSet.NonEmpty<T>",description:"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the HashMultiSet API documentation",source:"@site/api/rimbu_multiset/HashMultiSet/NonEmpty.interface.mdx",sourceDirName:"rimbu_multiset/HashMultiSet",slug:"/rimbu/multiset/HashMultiSet/NonEmpty/interface",permalink:"/api/rimbu/multiset/HashMultiSet/NonEmpty/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"HashMultiSet.NonEmpty<T>",slug:"/rimbu/multiset/HashMultiSet/NonEmpty/interface"},sidebar:"defaultSidebar",previous:{title:"HashMultiSet.Context<UT>",permalink:"/api/rimbu/multiset/HashMultiSet/Context/interface"},next:{title:"HashMultiSet.Types",permalink:"/api/rimbu/multiset/HashMultiSet/Types/interface"}},h={},b=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4}],v={toc:b},N="wrapper";function S(e){var t=e,{components:n}=t,a=y(t,["components"]);return(0,r.yg)(N,c(s(s({},v),a),{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",s({},{id:"interface-hashmultisetnonemptyt"}),(0,r.yg)("inlineCode",{parentName:"h1"},"interface HashMultiSet.NonEmpty<T>")),(0,r.yg)("p",null,"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the ",(0,r.yg)("a",s({parentName:"p"},{href:"https://rimbu.org/docs/collections/multiset"}),"MultiSet documentation")," and the ",(0,r.yg)("a",s({parentName:"p"},{href:"https://rimbu.org/api/rimbu/multiset/HashMultiSet/interface"}),"HashMultiSet API documentation")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Extends:")," ",(0,r.yg)("a",s({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"Streamable.NonEmpty<T>")),", ",(0,r.yg)("a",s({parentName:"p"},{href:"/api/rimbu/multiset/HashMultiSet/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMultiSet<T>"))),(0,r.yg)("h2",s({},{id:"type-parameters"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",s({parentName:"tr"},{align:null}),"T"),(0,r.yg)("td",s({parentName:"tr"},{align:null}),"the value type")))),(0,r.yg)("admonition",s({},{title:"note",type:"note"}),(0,r.yg)("ul",{parentName:"admonition"},(0,r.yg)("li",{parentName:"ul"},"The ",(0,r.yg)("inlineCode",{parentName:"li"},"HashMultiSet")," uses the contexts' ",(0,r.yg)("inlineCode",{parentName:"li"},"HashMap")," ",(0,r.yg)("inlineCode",{parentName:"li"},"mapContext")," to hash the values."))),(0,r.yg)("admonition",s({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",s({parentName:"pre"},{className:"language-ts"}),"const m1 = HashMultiSet.empty<string>()\nconst m2 = HashMultiSet.of('a', 'b', 'a', 'c')\n"))),(0,r.yg)("h2",s({},{id:"methods"}),"Methods"),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",s({},{id:"stream"}),(0,r.yg)("inlineCode",{parentName:"h3"},"stream")),(0,r.yg)("p",null,"undocumented")),(0,r.yg)("h4",s({},{id:"definition"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"stream(): "),(0,r.yg)("a",s({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<T>;"))),(0,r.yg)("h4",s({},{id:"overrides"}),"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",s({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface#stream"}),"NonEmpty.stream"))))}S.isMDXComponent=!0}}]);