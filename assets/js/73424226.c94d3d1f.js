"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[66873],{15680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>c});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),m=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},g=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},y="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,g=p(e,["components","mdxType","originalType","parentName"]),y=m(n),d=r,c=y["".concat(o,".").concat(d)]||y[d]||u[d]||l;return n?a.createElement(c,i(i({ref:t},g),{},{components:n})):a.createElement(c,i({ref:t},g))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[y]="string"==typeof e?e:r,i[1]=p;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},61521:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>s,default:()=>k,frontMatter:()=>c,metadata:()=>N,toc:()=>h});var a=n(15680),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,g=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,y=(e,t)=>{for(var n in t||(t={}))o.call(t,n)&&g(e,n,t[n]);if(p)for(var n of p(t))m.call(t,n)&&g(e,n,t[n]);return e},u=(e,t)=>l(e,i(t)),d=(e,t)=>{var n={};for(var a in e)o.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&p)for(var a of p(e))t.indexOf(a)<0&&m.call(e,a)&&(n[a]=e[a]);return n};const c={title:"Link (namespace)",slug:"/rimbu/graph/custom/Link/namespace"},s="namespace Link",N={unversionedId:"rimbu_graph/custom/Link/index",id:"rimbu_graph/custom/Link/index",title:"Link (namespace)",description:"A potentially valued connection between two nodes, being a 2-valued or 3-valued tuple of which the first two elements are nodes",source:"@site/api/rimbu_graph/custom/Link/index.mdx",sourceDirName:"rimbu_graph/custom/Link",slug:"/rimbu/graph/custom/Link/namespace",permalink:"/api/rimbu/graph/custom/Link/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"Link (namespace)",slug:"/rimbu/graph/custom/Link/namespace"},sidebar:"defaultSidebar",previous:{title:"GraphValues<N,V>",permalink:"/api/rimbu/graph/custom/GraphValues/interface"},next:{title:"Target",permalink:"/api/rimbu/graph/custom/Link/Target/type"}},f={},h=[{value:"Functions",id:"functions",level:2},{value:"<code>fromArgs</code>",id:"fromargs",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:5},{value:"Parameters",id:"parameters",level:4},{value:"<code>fromTuple</code>",id:"fromtuple",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:5},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>toTuple</code>",id:"totuple",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-2",level:5},{value:"Parameters",id:"parameters-2",level:4}],b={toc:h},v="wrapper";function k(e){var t=e,{components:n}=t,r=d(t,["components"]);return(0,a.yg)(v,u(y(y({},b),r),{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",y({},{id:"namespace-link"}),(0,a.yg)("inlineCode",{parentName:"h1"},"namespace Link")),(0,a.yg)("p",null,"A potentially valued connection between two nodes, being a 2-valued or 3-valued tuple of which the first two elements are nodes"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Companion type:")," ",(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/Link/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"Link<N>"))),(0,a.yg)("h2",y({},{id:"functions"}),"Functions"),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",y({},{id:"fromargs"}),(0,a.yg)("inlineCode",{parentName:"h3"},"fromArgs")),(0,a.yg)("p",null,"Returns a graph ",(0,a.yg)("inlineCode",{parentName:"p"},"Link")," from the given ",(0,a.yg)("inlineCode",{parentName:"p"},"node1")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"node2")," nodes.")),(0,a.yg)("h4",y({},{id:"definition"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"function fromArgs<N>(node1: N, node2: N): "),(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/Link/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"Link")),(0,a.yg)("inlineCode",{parentName:"p"},"<N>;"))),(0,a.yg)("h5",y({},{id:"type-parameters"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),"N"),(0,a.yg)("td",y({parentName:"tr"},{align:null}))))),(0,a.yg)("h4",y({},{id:"parameters"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"node1")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"N")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),"the first connection node")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"node2")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"N")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),"the second connection node"))))),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",y({},{id:"fromtuple"}),(0,a.yg)("inlineCode",{parentName:"h3"},"fromTuple")),(0,a.yg)("p",null,"Returns a graph ",(0,a.yg)("inlineCode",{parentName:"p"},"Link")," from the given 2-tuple ",(0,a.yg)("inlineCode",{parentName:"p"},"tuple"),".")),(0,a.yg)("h4",y({},{id:"definition-1"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"function fromTuple<N>(tuple: [N, N]): "),(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/Link/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"Link")),(0,a.yg)("inlineCode",{parentName:"p"},"<N>;"))),(0,a.yg)("h5",y({},{id:"type-parameters-1"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),"N"),(0,a.yg)("td",y({parentName:"tr"},{align:null}))))),(0,a.yg)("h4",y({},{id:"parameters-1"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"tuple")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"[N, N]")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),"the tuple to convert"))))),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",y({},{id:"totuple"}),(0,a.yg)("inlineCode",{parentName:"h3"},"toTuple")),(0,a.yg)("p",null,"Returns the given potentially valued link ",(0,a.yg)("inlineCode",{parentName:"p"},"link")," as a 2-tuple")),(0,a.yg)("h4",y({},{id:"definition-2"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"function toTuple<N>(link: "),(0,a.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/custom/Link/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"Link")),(0,a.yg)("inlineCode",{parentName:"p"},"<N>): [N, N];"))),(0,a.yg)("h5",y({},{id:"type-parameters-2"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),"N"),(0,a.yg)("td",y({parentName:"tr"},{align:null}))))),(0,a.yg)("h4",y({},{id:"parameters-2"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"link")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),(0,a.yg)("a",y({parentName:"td"},{href:"/api/rimbu/graph/custom/Link/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"Link")),(0,a.yg)("inlineCode",{parentName:"td"},"<N>")),(0,a.yg)("td",y({parentName:"tr"},{align:null}),"the link to convert"))))))}k.isMDXComponent=!0}}]);