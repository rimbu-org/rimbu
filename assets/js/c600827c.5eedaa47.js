"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[25396],{15680:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>f});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),s=u(n),y=a,f=s["".concat(p,".").concat(y)]||s[y]||m[y]||i;return n?r.createElement(f,o(o({ref:t},l),{},{components:n})):r.createElement(f,o({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=y;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[s]="string"==typeof e?e:a,o[1]=c;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},94359:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>d,default:()=>x,frontMatter:()=>f,metadata:()=>b,toc:()=>O});var r=n(15680),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,l=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&l(e,n,t[n]);if(c)for(var n of c(t))u.call(t,n)&&l(e,n,t[n]);return e},m=(e,t)=>i(e,o(t)),y=(e,t)=>{var n={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&c)for(var r of c(e))t.indexOf(r)<0&&u.call(e,r)&&(n[r]=e[r]);return n};const f={title:"DistanceFunction (namespace)",slug:"/rimbu/proximity/DistanceFunction/namespace"},d="namespace DistanceFunction",b={unversionedId:"rimbu_proximity/DistanceFunction/index",id:"rimbu_proximity/DistanceFunction/index",title:"DistanceFunction (namespace)",description:"Returns The distance between its arguments, in a [0; Number.POSITIVE_INFINITY] range",source:"@site/api/rimbu_proximity/DistanceFunction/index.mdx",sourceDirName:"rimbu_proximity/DistanceFunction",slug:"/rimbu/proximity/DistanceFunction/namespace",permalink:"/api/rimbu/proximity/DistanceFunction/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"DistanceFunction (namespace)",slug:"/rimbu/proximity/DistanceFunction/namespace"},sidebar:"defaultSidebar",previous:{title:"Distance",permalink:"/api/rimbu/proximity/Distance/type"},next:{title:"defaultFunction",permalink:"/api/rimbu/proximity/DistanceFunction/defaultFunction/var"}},g={},O=[{value:"Constants",id:"constants",level:2}],v={toc:O},N="wrapper";function x(e){var t=e,{components:n}=t,a=y(t,["components"]);return(0,r.yg)(N,m(s(s({},v),a),{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",s({},{id:"namespace-distancefunction"}),(0,r.yg)("inlineCode",{parentName:"h1"},"namespace DistanceFunction")),(0,r.yg)("p",null,"Returns The distance between its arguments, in a ","[",(0,r.yg)("inlineCode",{parentName:"p"},"0"),"; ",(0,r.yg)("inlineCode",{parentName:"p"},"Number.POSITIVE_INFINITY"),"]"," range"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Companion type:")," ",(0,r.yg)("a",s({parentName:"p"},{href:"/api/rimbu/proximity/DistanceFunction/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"DistanceFunction<T>"))),(0,r.yg)("h2",s({},{id:"constants"}),"Constants"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",s({parentName:"tr"},{align:null}),"defaultFunction"),(0,r.yg)("td",s({parentName:"tr"},{align:null}),"Returns ",(0,r.yg)("inlineCode",{parentName:"td"},"0")," if the two values satisfy ",(0,r.yg)("inlineCode",{parentName:"td"},"==="),", ",(0,r.yg)("inlineCode",{parentName:"td"},"Number.POSITIVE_INFINITY")," otherwise")))))}x.isMDXComponent=!0}}]);