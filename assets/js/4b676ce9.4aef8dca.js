"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[77723],{15680:(e,a,t)=>{t.d(a,{xA:()=>o,yg:()=>s});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=n.createContext({}),y=function(e){var a=n.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},o=function(e){var a=y(e.components);return n.createElement(d.Provider,{value:a},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),m=y(t),u=r,s=m["".concat(d,".").concat(u)]||m[u]||g[u]||i;return t?n.createElement(s,l(l({ref:a},o),{},{components:t})):n.createElement(s,l({ref:a},o))}));function s(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=u;var p={};for(var d in a)hasOwnProperty.call(a,d)&&(p[d]=a[d]);p.originalType=e,p[m]="string"==typeof e?e:r,l[1]=p;for(var y=2;y<i;y++)l[y]=t[y];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},97017:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>h,contentTitle:()=>N,default:()=>C,frontMatter:()=>s,metadata:()=>c,toc:()=>v});var n=t(15680),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable,o=(e,a,t)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,m=(e,a)=>{for(var t in a||(a={}))d.call(a,t)&&o(e,t,a[t]);if(p)for(var t of p(a))y.call(a,t)&&o(e,t,a[t]);return e},g=(e,a)=>i(e,l(a)),u=(e,a)=>{var t={};for(var n in e)d.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&p)for(var n of p(e))a.indexOf(n)<0&&y.call(e,n)&&(t[n]=e[n]);return t};const s={title:"OrderedMapBase.Builder<K,V,Tp>",slug:"/rimbu/ordered/map-custom/OrderedMapBase/Builder/interface"},N="interface OrderedMapBase.Builder<K,V,Tp>",c={unversionedId:"rimbu_ordered/map-custom/OrderedMapBase/Builder.interface",id:"rimbu_ordered/map-custom/OrderedMapBase/Builder.interface",title:"OrderedMapBase.Builder<K,V,Tp>",description:"undocumented",source:"@site/api/rimbu_ordered/map-custom/OrderedMapBase/Builder.interface.mdx",sourceDirName:"rimbu_ordered/map-custom/OrderedMapBase",slug:"/rimbu/ordered/map-custom/OrderedMapBase/Builder/interface",permalink:"/api/rimbu/ordered/map-custom/OrderedMapBase/Builder/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"OrderedMapBase.Builder<K,V,Tp>",slug:"/rimbu/ordered/map-custom/OrderedMapBase/Builder/interface"},sidebar:"defaultSidebar",previous:{title:"OrderedMapBase (namespace)",permalink:"/api/rimbu/ordered/map-custom/OrderedMapBase/namespace"},next:{title:"OrderedMapBase.Context<UK,Tp>",permalink:"/api/rimbu/ordered/map-custom/OrderedMapBase/Context/interface"}},h={},v=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>isEmpty</code>",id:"isempty",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>size</code>",id:"size",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>addEntries</code>",id:"addentries",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>addEntry</code>",id:"addentry",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"<code>build</code>",id:"build",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"<code>buildMapValues</code>",id:"buildmapvalues",level:3},{value:"Definition",id:"definition-6",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"<code>forEach</code>",id:"foreach",level:3},{value:"Definition",id:"definition-7",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"<code>get</code>",id:"get",level:3},{value:"Definitions",id:"definitions",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"<code>hasKey</code>",id:"haskey",level:3},{value:"Definition",id:"definition-8",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Overrides",id:"overrides-9",level:4},{value:"<code>modifyAt</code>",id:"modifyat",level:3},{value:"Definition",id:"definition-9",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Overrides",id:"overrides-10",level:4},{value:"<code>removeKey</code>",id:"removekey",level:3},{value:"Definitions",id:"definitions-1",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Overrides",id:"overrides-11",level:4},{value:"<code>removeKeys</code>",id:"removekeys",level:3},{value:"Definition",id:"definition-10",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Overrides",id:"overrides-12",level:4},{value:"<code>set</code>",id:"set",level:3},{value:"Definition",id:"definition-11",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Overrides",id:"overrides-13",level:4},{value:"<code>updateAt</code>",id:"updateat",level:3},{value:"Definitions",id:"definitions-2",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Overrides",id:"overrides-14",level:4}],f={toc:v},b="wrapper";function C(e){var a=e,{components:t}=a,r=u(a,["components"]);return(0,n.yg)(b,g(m(m({},f),r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",m({},{id:"interface-orderedmapbasebuilderkvtp"}),(0,n.yg)("inlineCode",{parentName:"h1"},"interface OrderedMapBase.Builder<K,V,Tp>")),(0,n.yg)("p",null,"undocumented"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Extends:")," ",(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"RMapBase.Builder<K,V,Tp>"))),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Implemented by:")," ",(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/ordered/map-custom/OrderedMapBuilder/class"}),(0,n.yg)("inlineCode",{parentName:"a"},"OrderedMapBuilder<K,V,Tp,TpG>"))),(0,n.yg)("h2",m({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),"K"),(0,n.yg)("td",m({parentName:"tr"},{align:null})),(0,n.yg)("td",m({parentName:"tr"},{align:null})),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),"V"),(0,n.yg)("td",m({parentName:"tr"},{align:null})),(0,n.yg)("td",m({parentName:"tr"},{align:null})),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),"Tp"),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/ordered/map-custom/OrderedMapBase/Types/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"OrderedMapBase.Types"))),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/ordered/map-custom/OrderedMapBase/Types/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"OrderedMapBase.Types"))),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"undocumented")))),(0,n.yg)("h2",m({},{id:"properties"}),"Properties"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"context"}),(0,n.yg)("inlineCode",{parentName:"h3"},"context")),(0,n.yg)("p",null,"Returns the ",(0,n.yg)("inlineCode",{parentName:"p"},"context")," associated to this collection instance.")),(0,n.yg)("h4",m({},{id:"definition"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"readonly context: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, K, V>['context'];"))),(0,n.yg)("h4",m({},{id:"overrides"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#context"}),"Builder.context"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"isempty"}),(0,n.yg)("inlineCode",{parentName:"h3"},"isEmpty")),(0,n.yg)("p",null,"Returns true if there are no entries in the builder.")),(0,n.yg)("h4",m({},{id:"definition-1"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"readonly isEmpty: boolean;"))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"HashMap.of([[1, 'a'], [2, 'b']]).toBuilder().isEmpty\n// => false\n"))),(0,n.yg)("h4",m({},{id:"overrides-1"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#isEmpty"}),"Builder.isEmpty"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"size"}),(0,n.yg)("inlineCode",{parentName:"h3"},"size")),(0,n.yg)("p",null,"Returns the amount of entries in the builder.")),(0,n.yg)("h4",m({},{id:"definition-2"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"readonly size: number;"))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"HashMap.of([[1, 'a'], [2, 'b']]).toBuilder().size\n// => 2\n"))),(0,n.yg)("h4",m({},{id:"overrides-2"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#size"}),"Builder.size"))),(0,n.yg)("h2",m({},{id:"methods"}),"Methods"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"addentries"}),(0,n.yg)("inlineCode",{parentName:"h3"},"addEntries")),(0,n.yg)("p",null,"Adds given ",(0,n.yg)("inlineCode",{parentName:"p"},"entries")," to the builder.")),(0,n.yg)("h4",m({},{id:"definition-3"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"addEntries(entries: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"p"},"<readonly [K, V]>): boolean;"))),(0,n.yg)("h4",m({},{id:"parameters"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"entries")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"td"},"<readonly [K, V]>")),(0,n.yg)("td",m({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.addEntries([1, 'a'], [3, 'c']])   // => true\nm.addEntries([])                    // => false\n"))),(0,n.yg)("h4",m({},{id:"overrides-3"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#addEntries"}),"Builder.addEntries"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"addentry"}),(0,n.yg)("inlineCode",{parentName:"h3"},"addEntry")),(0,n.yg)("p",null,"Adds given ",(0,n.yg)("inlineCode",{parentName:"p"},"entry")," to the builder.")),(0,n.yg)("h4",m({},{id:"definition-4"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"addEntry(entry: readonly [K, V]): boolean;"))),(0,n.yg)("h4",m({},{id:"parameters-1"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"entry")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"readonly [K, V]")),(0,n.yg)("td",m({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.addEntry([3, 'c'])   // => true\nm.addEntry([1, 'a'])   // => false\n"))),(0,n.yg)("h4",m({},{id:"overrides-4"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#addEntry"}),"Builder.addEntry"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"build"}),(0,n.yg)("inlineCode",{parentName:"h3"},"build")),(0,n.yg)("p",null,"Returns an immutable collection instance containing the entries in this builder.")),(0,n.yg)("h4",m({},{id:"definition-5"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"build(): "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, K, V>['normal'];"))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nconst m2: HashMap<number, string> = m.build()\n"))),(0,n.yg)("h4",m({},{id:"overrides-5"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#build"}),"Builder.build"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"buildmapvalues"}),(0,n.yg)("inlineCode",{parentName:"h3"},"buildMapValues")),(0,n.yg)("p",null,"Returns an immutable instance of the entries in this builder, with given ",(0,n.yg)("inlineCode",{parentName:"p"},"mapValues")," function applied to all the values in the entries.")),(0,n.yg)("h4",m({},{id:"definition-6"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"buildMapValues<V2>(mapFun: (value: V, key: K) => V2): (Tp & "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/KeyValue/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"KeyValue")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, V2>)['normal'];"))),(0,n.yg)("h4",m({},{id:"type-parameters-1"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),"V2"),(0,n.yg)("td",m({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",m({},{id:"parameters-2"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"mapFun")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"(value: V, key: K) => V2")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"a function that takes an entry value and its key, and returns a new value")))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nconst m2: HashMap<number, number> = m.buildMapValues(value => value.length)\n"))),(0,n.yg)("h4",m({},{id:"overrides-6"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#buildMapValues"}),"Builder.buildMapValues"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"foreach"}),(0,n.yg)("inlineCode",{parentName:"h3"},"forEach")),(0,n.yg)("p",null,"Performs given function ",(0,n.yg)("inlineCode",{parentName:"p"},"f")," for each entry of the builder.")),(0,n.yg)("h4",m({},{id:"definition-7"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"forEach(f: (entry: readonly [K, V], index: number, halt: () => void) => void, options?: {"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"state?: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"TraverseState")),(0,n.yg)("inlineCode",{parentName:"p"},";"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"}): void;"))),(0,n.yg)("h4",m({},{id:"parameters-3"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"f")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"(entry: readonly [K, V], index: number, halt: () => void) => void")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"the function to perform for each element, receiving:",(0,n.yg)("br",null)," - ",(0,n.yg)("inlineCode",{parentName:"td"},"entry"),": the next key-value entry",(0,n.yg)("br",null)," - ",(0,n.yg)("inlineCode",{parentName:"td"},"index"),": the index of the element",(0,n.yg)("br",null)," - ",(0,n.yg)("inlineCode",{parentName:"td"},"halt"),": a function that, if called, ensures that no new elements are passed")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"options")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"{"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"state?: "),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"TraverseState")),(0,n.yg)("inlineCode",{parentName:"td"},";"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"}")),(0,n.yg)("td",m({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",m({},{title:"throws",type:"note"}),(0,n.yg)("p",{parentName:"admonition"},"RibuError.ModifiedBuilderWhileLoopingOverItError if the builder is modified while looping over it")),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"HashMap.of([1, 'a'], [2, 'b'], [3, 'c']).toBuilder().forEach((entry, i, halt) => {\nconsole.log([entry[1], entry[0]]);\nif (i >= 1) halt();\n})\n// => logs ['a', 1]  ['b', 2]\n"))),(0,n.yg)("admonition",m({},{title:"note",type:"note"}),(0,n.yg)("p",{parentName:"admonition"},"O(N)")),(0,n.yg)("h4",m({},{id:"overrides-7"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#forEach"}),"Builder.forEach"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"get"}),(0,n.yg)("inlineCode",{parentName:"h3"},"get")),(0,n.yg)("p",null,"Returns the value associated with the given ",(0,n.yg)("inlineCode",{parentName:"p"},"key"),", or given ",(0,n.yg)("inlineCode",{parentName:"p"},"otherwise")," value if the key is not in the collection.")),(0,n.yg)("h4",m({},{id:"definitions"}),"Definitions"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"get<UK = K>(key: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>): V "),(0,n.yg)("code",null,"|"),(0,n.yg)("inlineCode",{parentName:"p"}," undefined;"))),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"get<UK, O>(key: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>, otherwise: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,n.yg)("inlineCode",{parentName:"p"},"<O>): V "),(0,n.yg)("code",null,"|"),(0,n.yg)("inlineCode",{parentName:"p"}," O;"))),(0,n.yg)("h4",m({},{id:"type-parameters-2"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",m({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",m({},{id:"parameters-4"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"the key to look for")))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.get(2)          // => 'b'\nm.get(3)          // => undefined\nm.get(2, 'none')  // => 'b'\nm.get(3, 'none')  // => 'none'\n"))),(0,n.yg)("h4",m({},{id:"overrides-8"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#get"}),"Builder.get"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"haskey"}),(0,n.yg)("inlineCode",{parentName:"h3"},"hasKey")),(0,n.yg)("p",null,"Returns true if the given ",(0,n.yg)("inlineCode",{parentName:"p"},"key")," is present in the builder.")),(0,n.yg)("h4",m({},{id:"definition-8"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"hasKey<UK = K>(key: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>): boolean;"))),(0,n.yg)("h4",m({},{id:"type-parameters-3"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",m({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",m({},{id:"parameters-5"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"the key to look for")))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.hasKey(2)    // => true\nm.hasKey(3)    // => false\n"))),(0,n.yg)("h4",m({},{id:"overrides-9"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#hasKey"}),"Builder.hasKey"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"modifyat"}),(0,n.yg)("inlineCode",{parentName:"h3"},"modifyAt")),(0,n.yg)("p",null,"Modifies or creates the builder entry with given ",(0,n.yg)("inlineCode",{parentName:"p"},"atKey")," as its key according to given ",(0,n.yg)("inlineCode",{parentName:"p"},"options"),".")),(0,n.yg)("h4",m({},{id:"definition-9"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"modifyAt(key: K, options: {"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"ifNew?: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/OptLazyOr/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"OptLazyOr")),(0,n.yg)("inlineCode",{parentName:"p"},"<V, Token>;"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"ifExists?: (<V2 extends V = V>(currentValue: V & V2, remove: Token) => V "),(0,n.yg)("code",null,"|"),(0,n.yg)("inlineCode",{parentName:"p"},"Token)"),(0,n.yg)("code",null,"|"),(0,n.yg)("inlineCode",{parentName:"p"}," V;"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"}): boolean;"))),(0,n.yg)("h4",m({},{id:"parameters-6"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",m({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"options")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"{"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"ifNew?: "),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/common/OptLazyOr/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"OptLazyOr")),(0,n.yg)("inlineCode",{parentName:"td"},"<V, Token>;"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"ifExists?: (<V2 extends V = V>(currentValue: V & V2, remove: Token) => V "),(0,n.yg)("code",null,"|"),(0,n.yg)("inlineCode",{parentName:"td"},"Token)"),(0,n.yg)("code",null,"|"),(0,n.yg)("inlineCode",{parentName:"td"}," V;"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"}")),(0,n.yg)("td",m({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.modifyAt(1, { ifNew: 'd' })\n// => false\nm.modifyAt(3, { ifNew: 'c' })\n// => true\nm.modifyAt(3, { ifNew: (none) => 1 < 2 ? none : 'c' })\n// => false\nm.modifyAt(2, { ifExists: () => 'c' })\n// => true\nm.modifyAt(1, { ifExists: (v) => v + 'z' })\n// => true\nm.modifyAt(2, { ifExists: (v, remove) => v === 'a' ? v : remove })\n// => true\n"))),(0,n.yg)("h4",m({},{id:"overrides-10"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#modifyAt"}),"Builder.modifyAt"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"removekey"}),(0,n.yg)("inlineCode",{parentName:"h3"},"removeKey")),(0,n.yg)("p",null,"Removes the entry with given ",(0,n.yg)("inlineCode",{parentName:"p"},"key")," from the builder.")),(0,n.yg)("h4",m({},{id:"definitions-1"}),"Definitions"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"removeKey<UK = K>(key: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>): V "),(0,n.yg)("code",null,"|"),(0,n.yg)("inlineCode",{parentName:"p"}," undefined;"))),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"removeKey<UK, O>(key: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>, otherwise: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,n.yg)("inlineCode",{parentName:"p"},"<O>): V "),(0,n.yg)("code",null,"|"),(0,n.yg)("inlineCode",{parentName:"p"}," O;"))),(0,n.yg)("h4",m({},{id:"type-parameters-4"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",m({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",m({},{id:"parameters-7"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"the key of the entry to remove")))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeKey(2)        // => 'b'\nm.removeKey(3)        // => undefined\nm.removeKey(3, 'c')   // => 'c'\n"))),(0,n.yg)("h4",m({},{id:"overrides-11"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#removeKey"}),"Builder.removeKey"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"removekeys"}),(0,n.yg)("inlineCode",{parentName:"h3"},"removeKeys")),(0,n.yg)("p",null,"Removes the entries in the given ",(0,n.yg)("inlineCode",{parentName:"p"},"keys")," ",(0,n.yg)("inlineCode",{parentName:"p"},"StreamSource")," from the builder.")),(0,n.yg)("h4",m({},{id:"definition-10"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"removeKeys<UK = K>(keys: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>>): boolean;"))),(0,n.yg)("h4",m({},{id:"type-parameters-5"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",m({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",m({},{id:"parameters-8"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"keys")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"td"},"<"),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<K, UK>>")),(0,n.yg)("td",m({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeKeys([3, 4, 5])  // => false\nm.removeKeys([1, 10])    // => true\n"))),(0,n.yg)("h4",m({},{id:"overrides-12"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#removeKeys"}),"Builder.removeKeys"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"set"}),(0,n.yg)("inlineCode",{parentName:"h3"},"set")),(0,n.yg)("p",null,"Associates given ",(0,n.yg)("inlineCode",{parentName:"p"},"key")," with given ",(0,n.yg)("inlineCode",{parentName:"p"},"value")," in the builder.")),(0,n.yg)("h4",m({},{id:"definition-11"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"set(key: K, value: V): boolean;"))),(0,n.yg)("h4",m({},{id:"parameters-9"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"the entry key")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"value")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"V")),(0,n.yg)("td",m({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.set(3, 'c')   // => true\nm.set(1, 'a')   // => false\n"))),(0,n.yg)("h4",m({},{id:"overrides-13"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#set"}),"Builder.set"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",m({},{id:"updateat"}),(0,n.yg)("inlineCode",{parentName:"h3"},"updateAt")),(0,n.yg)("p",null,"Updates the value in the builder associated with given ",(0,n.yg)("inlineCode",{parentName:"p"},"key")," according to given ",(0,n.yg)("inlineCode",{parentName:"p"},"update")," value or function.")),(0,n.yg)("h4",m({},{id:"definitions-2"}),"Definitions"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"updateAt(key: K, update: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Update/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RMapBase.Update")),(0,n.yg)("inlineCode",{parentName:"p"},"<V>): V "),(0,n.yg)("code",null,"|"),(0,n.yg)("inlineCode",{parentName:"p"}," undefined;"))),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"updateAt<O>(key: K, update: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Update/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RMapBase.Update")),(0,n.yg)("inlineCode",{parentName:"p"},"<V>, otherwise: "),(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"OptLazy")),(0,n.yg)("inlineCode",{parentName:"p"},"<O>): V "),(0,n.yg)("code",null,"|"),(0,n.yg)("inlineCode",{parentName:"p"}," O;"))),(0,n.yg)("h4",m({},{id:"parameters-10"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"the key of the entry to update")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"update")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Update/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RMapBase.Update")),(0,n.yg)("inlineCode",{parentName:"td"},"<V>")),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"a new value or function taking the previous value and returning a new value")))),(0,n.yg)("admonition",m({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const m = HashMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.updateAt(1, 'a')           // => 'a'\nm.updateAt(1, 'b')           // => 'b'\nm.updateAt(2, v => v + 'z')  // => 'b'\n"))),(0,n.yg)("h4",m({},{id:"overrides-14"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface#updateAt"}),"Builder.updateAt"))))}C.isMDXComponent=!0}}]);