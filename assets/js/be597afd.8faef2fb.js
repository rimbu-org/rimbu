"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[62480],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>C});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),m=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=m(e.components);return a.createElement(c.Provider,{value:n},e.children)},g="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),g=m(t),u=r,C=g["".concat(c,".").concat(u)]||g[u]||h[u]||i;return t?a.createElement(C,l(l({ref:n},p),{},{components:t})):a.createElement(C,l({ref:n},p))}));function C(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=u;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[g]="string"==typeof e?e:r,l[1]=o;for(var m=2;m<i;m++)l[m]=t[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},45770:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>f,default:()=>v,frontMatter:()=>C,metadata:()=>y,toc:()=>s});var a=t(15680),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,p=(e,n,t)=>n in e?r(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,g=(e,n)=>{for(var t in n||(n={}))c.call(n,t)&&p(e,t,n[t]);if(o)for(var t of o(n))m.call(n,t)&&p(e,t,n[t]);return e},h=(e,n)=>i(e,l(n)),u=(e,n)=>{var t={};for(var a in e)c.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&o)for(var a of o(e))n.indexOf(a)<0&&m.call(e,a)&&(t[a]=e[a]);return t};const C={title:"RemoteChannelClient (namespace)",slug:"/rimbu/channel/RemoteChannelClient/namespace"},f="namespace RemoteChannelClient",y={unversionedId:"rimbu_channel/RemoteChannelClient/index",id:"rimbu_channel/RemoteChannelClient/index",title:"RemoteChannelClient (namespace)",description:"A RemoteChannelClient allows creating channels to communicate with a RemoteChannelServer. The server should be configured to listen to channels with the channel ids provided to the channel creation functions in the client.",source:"@site/api/rimbu_channel/RemoteChannelClient/index.mdx",sourceDirName:"rimbu_channel/RemoteChannelClient",slug:"/rimbu/channel/RemoteChannelClient/namespace",permalink:"/api/rimbu/channel/RemoteChannelClient/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"RemoteChannelClient (namespace)",slug:"/rimbu/channel/RemoteChannelClient/namespace"},sidebar:"defaultSidebar",previous:{title:"RemoteChannel.WriteConfig",permalink:"/api/rimbu/channel/RemoteChannel/WriteConfig/interface"},next:{title:"RemoteChannelClient.Config",permalink:"/api/rimbu/channel/RemoteChannelClient/Config/interface"}},d={},s=[{value:"Interfaces",id:"interfaces",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>create</code>",id:"create",level:3},{value:"Definition",id:"definition",level:4},{value:"Parameters",id:"parameters",level:4}],b={toc:s},N="wrapper";function v(e){var n=e,{components:t}=n,r=u(n,["components"]);return(0,a.yg)(N,h(g(g({},b),r),{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",g({},{id:"namespace-remotechannelclient"}),(0,a.yg)("inlineCode",{parentName:"h1"},"namespace RemoteChannelClient")),(0,a.yg)("p",null,"A RemoteChannelClient allows creating channels to communicate with a RemoteChannelServer. The server should be configured to listen to channels with the channel ids provided to the channel creation functions in the client."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Companion interface:")," ",(0,a.yg)("a",g({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannelClient/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient"))),(0,a.yg)("h2",g({},{id:"interfaces"}),"Interfaces"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",g({parentName:"tr"},{align:null}),(0,a.yg)("a",g({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannelClient/Config/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.Config"))),(0,a.yg)("td",g({parentName:"tr"},{align:null}),"Interface defining the confirgartion options for a RemoteChannelClient")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",g({parentName:"tr"},{align:null}),(0,a.yg)("a",g({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannelClient/Constructors/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.Constructors"))),(0,a.yg)("td",g({parentName:"tr"},{align:null}),"Defines the static ",(0,a.yg)("inlineCode",{parentName:"td"},"RemoteChannelClient")," API.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",g({parentName:"tr"},{align:null}),(0,a.yg)("a",g({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannelClient/CrossChannelConfig/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.CrossChannelConfig"))),(0,a.yg)("td",g({parentName:"tr"},{align:null}),"Interface defining the configuration options for creating a remote Channel.Cross channel")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",g({parentName:"tr"},{align:null}),(0,a.yg)("a",g({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannelClient/ReadChannelConfig/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.ReadChannelConfig"))),(0,a.yg)("td",g({parentName:"tr"},{align:null}),"Interface defining the configuration options for creating a remote Channel.Read channel")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",g({parentName:"tr"},{align:null}),(0,a.yg)("a",g({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannelClient/WriteChannelConfig/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.WriteChannelConfig"))),(0,a.yg)("td",g({parentName:"tr"},{align:null}),"Interface defining the configuration options for creating a remote Channel.Write channel")))),(0,a.yg)("h2",g({},{id:"static-methods"}),"Static Methods"),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",g({},{id:"create"}),(0,a.yg)("inlineCode",{parentName:"h3"},"create")),(0,a.yg)("p",null,"Creates a new RemoteChannelClient instance with the given configuration.")),(0,a.yg)("h4",g({},{id:"definition"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"create(config: "),(0,a.yg)("a",g({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannelClient/Config/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.Config")),(0,a.yg)("inlineCode",{parentName:"p"},"): Promise<"),(0,a.yg)("a",g({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannelClient/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient")),(0,a.yg)("inlineCode",{parentName:"p"},">;"))),(0,a.yg)("h4",g({},{id:"parameters"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",g({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",g({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"config")),(0,a.yg)("td",g({parentName:"tr"},{align:null}),(0,a.yg)("a",g({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannelClient/Config/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"RemoteChannelClient.Config"))),(0,a.yg)("td",g({parentName:"tr"},{align:null}),"the configuration for the client:",(0,a.yg)("br",null)))))))}v.isMDXComponent=!0}}]);