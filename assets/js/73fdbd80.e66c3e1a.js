"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[97601],{15680:(e,r,n)=>{n.d(r,{xA:()=>u,yg:()=>d});var t=n(96540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function p(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),c=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},u=function(e){var r=c(e.components);return t.createElement(l.Provider,{value:r},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},s=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),y=c(n),s=a,d=y["".concat(l,".").concat(s)]||y[s]||m[s]||o;return n?t.createElement(d,i(i({ref:r},u),{},{components:n})):t.createElement(d,i({ref:r},u))}));function d(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=s;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p[y]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}s.displayName="MDXCreateElement"},56372:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>b,contentTitle:()=>f,default:()=>N,frontMatter:()=>d,metadata:()=>g,toc:()=>v});var t=n(15680),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,r,n)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[r]=n,y=(e,r)=>{for(var n in r||(r={}))l.call(r,n)&&u(e,n,r[n]);if(p)for(var n of p(r))c.call(r,n)&&u(e,n,r[n]);return e},m=(e,r)=>o(e,i(r)),s=(e,r)=>{var n={};for(var t in e)l.call(e,t)&&r.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&p)for(var t of p(e))r.indexOf(t)<0&&c.call(e,t)&&(n[t]=e[t]);return n};const d={title:"groupBy",slug:"/rimbu/stream/AsyncReducer/groupBy/var"},f="type groupBy",g={unversionedId:"rimbu_stream/AsyncReducer/groupBy.var",id:"rimbu_stream/AsyncReducer/groupBy.var",title:"groupBy",description:"Returns an AsyncReducer that uses the valueToKey function to calculate a key for each value, and feeds the tuple of the key and the value to the collector reducer. Finally, it returns the output of the collector. If no collector is given, the default collector will return a JS multimap of the type Map.",source:"@site/api/rimbu_stream/AsyncReducer/groupBy.var.mdx",sourceDirName:"rimbu_stream/AsyncReducer",slug:"/rimbu/stream/AsyncReducer/groupBy/var",permalink:"/api/rimbu/stream/AsyncReducer/groupBy/var",draft:!1,tags:[],version:"current",frontMatter:{title:"groupBy",slug:"/rimbu/stream/AsyncReducer/groupBy/var"},sidebar:"defaultSidebar",previous:{title:"first",permalink:"/api/rimbu/stream/AsyncReducer/first/var"},next:{title:"isEmpty",permalink:"/api/rimbu/stream/AsyncReducer/isEmpty/var"}},b={},v=[{value:"Definition",id:"definition",level:2}],h={toc:v},O="wrapper";function N(e){var r=e,{components:n}=r,a=s(r,["components"]);return(0,t.yg)(O,m(y(y({},h),a),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",y({},{id:"type-groupby"}),(0,t.yg)("inlineCode",{parentName:"h1"},"type groupBy")),(0,t.yg)("p",null,"Returns an ",(0,t.yg)("inlineCode",{parentName:"p"},"AsyncReducer")," that uses the ",(0,t.yg)("inlineCode",{parentName:"p"},"valueToKey")," function to calculate a key for each value, and feeds the tuple of the key and the value to the ",(0,t.yg)("inlineCode",{parentName:"p"},"collector")," reducer. Finally, it returns the output of the ",(0,t.yg)("inlineCode",{parentName:"p"},"collector"),". If no collector is given, the default collector will return a JS multimap of the type ",(0,t.yg)("inlineCode",{parentName:"p"},"Map<K, V[]>"),"."),(0,t.yg)("h2",y({},{id:"definition"}),"Definition"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"groupBy: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T, K, R, T2 extends readonly [K, T] = [K, T]>(valueToKey: (value: T, index: number) => "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<K>, options: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"collector: "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,t.yg)("inlineCode",{parentName:"p"},"<[K, T] "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," T2, R>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, R>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T, K>(valueToKey: (value: T, index: number) => "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<K>, options?: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"collector?: undefined;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, Map<K, T[]>>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}")))}N.isMDXComponent=!0}}]);