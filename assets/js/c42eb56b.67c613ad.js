"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[56674],{15680:(e,t,r)=>{r.d(t,{xA:()=>s,yg:()=>c});var a=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=a.createContext({}),p=function(e){var t=a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},m="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(r),u=n,c=m["".concat(d,".").concat(u)]||m[u]||y[u]||i;return r?a.createElement(c,o(o({ref:t},s),{},{components:r})):a.createElement(c,o({ref:t},s))}));function c(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[m]="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},58913:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>f,contentTitle:()=>g,default:()=>v,frontMatter:()=>c,metadata:()=>h,toc:()=>b});var a=r(15680),n=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,s=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,m=(e,t)=>{for(var r in t||(t={}))d.call(t,r)&&s(e,r,t[r]);if(l)for(var r of l(t))p.call(t,r)&&s(e,r,t[r]);return e},y=(e,t)=>i(e,o(t)),u=(e,t)=>{var r={};for(var a in e)d.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&l)for(var a of l(e))t.indexOf(a)<0&&p.call(e,a)&&(r[a]=e[a]);return r};const c={title:"OrderedHashSet.NonEmpty<T>",slug:"/rimbu/ordered/set/OrderedHashSet/NonEmpty/interface"},g="interface OrderedHashSet.NonEmpty<T>",h={unversionedId:"rimbu_ordered/set/OrderedHashSet/NonEmpty.interface",id:"rimbu_ordered/set/OrderedHashSet/NonEmpty.interface",title:"OrderedHashSet.NonEmpty<T>",description:"A non-empty type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedHashSet API documentation",source:"@site/api/rimbu_ordered/set/OrderedHashSet/NonEmpty.interface.mdx",sourceDirName:"rimbu_ordered/set/OrderedHashSet",slug:"/rimbu/ordered/set/OrderedHashSet/NonEmpty/interface",permalink:"/api/rimbu/ordered/set/OrderedHashSet/NonEmpty/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"OrderedHashSet.NonEmpty<T>",slug:"/rimbu/ordered/set/OrderedHashSet/NonEmpty/interface"},sidebar:"defaultSidebar",previous:{title:"OrderedHashSet.Context<UT>",permalink:"/api/rimbu/ordered/set/OrderedHashSet/Context/interface"},next:{title:"OrderedHashSet.Types",permalink:"/api/rimbu/ordered/set/OrderedHashSet/Types/interface"}},f={},b=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides",level:4}],O={toc:b},N="wrapper";function v(e){var t=e,{components:r}=t,n=u(t,["components"]);return(0,a.yg)(N,y(m(m({},O),n),{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",m({},{id:"interface-orderedhashsetnonemptyt"}),(0,a.yg)("inlineCode",{parentName:"h1"},"interface OrderedHashSet.NonEmpty<T>")),(0,a.yg)("p",null,"A non-empty type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the ",(0,a.yg)("a",m({parentName:"p"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,a.yg)("a",m({parentName:"p"},{href:"https://rimbu.org/api/rimbu/ordered/set/OrderedHashSet/interface"}),"OrderedHashSet API documentation")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Extends:")," ",(0,a.yg)("a",m({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"Streamable.NonEmpty<T>")),", ",(0,a.yg)("a",m({parentName:"p"},{href:"/api/rimbu/ordered/set/OrderedHashSet/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"OrderedHashSet<T>"))),(0,a.yg)("h2",m({},{id:"type-parameters"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",m({parentName:"tr"},{align:null}),"T"),(0,a.yg)("td",m({parentName:"tr"},{align:null}),"the value type")))),(0,a.yg)("admonition",m({},{title:"note",type:"note"}),(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},"The OrderedHashSet keeps the insertion order of values, thus iterators and stream will also reflect this order. - The OrderedHashSet wraps around a HashSet instance, thus has the same time complexity as the HashSet. - The OrderedHashSet keeps the key insertion order in a List, thus its space complexity is higher than a regular HashSet."))),(0,a.yg)("admonition",m({},{title:"example",type:"note"}),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",m({parentName:"pre"},{className:"language-ts"}),"const s1 = OrderedHashSet.empty<string>()\nconst s2 = OrderedHashSet.of('a', 'b', 'c')\n"))),(0,a.yg)("h2",m({},{id:"methods"}),"Methods"),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",m({},{id:"stream"}),(0,a.yg)("inlineCode",{parentName:"h3"},"stream")),(0,a.yg)("p",null,"undocumented")),(0,a.yg)("h4",m({},{id:"definition"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"stream(options?: {"),(0,a.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,a.yg)("inlineCode",{parentName:"p"},"reverse?: boolean;"),(0,a.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.yg)("inlineCode",{parentName:"p"},"}): "),(0,a.yg)("a",m({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,a.yg)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.yg)("h4",m({},{id:"parameters"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",m({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",m({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"options")),(0,a.yg)("td",m({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"{"),(0,a.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,a.yg)("inlineCode",{parentName:"td"},"reverse?: boolean;"),(0,a.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.yg)("inlineCode",{parentName:"td"},"}")),(0,a.yg)("td",m({parentName:"tr"},{align:null}))))),(0,a.yg)("h4",m({},{id:"overrides"}),"Overrides"),(0,a.yg)("p",null,(0,a.yg)("a",m({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface#stream"}),"NonEmpty.stream"))))}v.isMDXComponent=!0}}]);