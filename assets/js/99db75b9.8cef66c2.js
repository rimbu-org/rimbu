"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[93260],{15680:(e,a,t)=>{t.d(a,{xA:()=>m,yg:()=>c});var r=t(96540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=r.createContext({}),s=function(e){var a=r.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},m=function(e){var a=s(e.components);return r.createElement(o.Provider,{value:a},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),d=s(t),u=n,c=d["".concat(o,".").concat(u)]||d[u]||h[u]||i;return t?r.createElement(c,l(l({ref:a},m),{},{components:t})):r.createElement(c,l({ref:a},m))}));function c(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,l=new Array(i);l[0]=u;var p={};for(var o in a)hasOwnProperty.call(a,o)&&(p[o]=a[o]);p.originalType=e,p[d]="string"==typeof e?e:n,l[1]=p;for(var s=2;s<i;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},24355:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>b,contentTitle:()=>y,default:()=>O,frontMatter:()=>c,metadata:()=>g,toc:()=>f});var r=t(15680),n=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,m=(e,a,t)=>a in e?n(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,d=(e,a)=>{for(var t in a||(a={}))o.call(a,t)&&m(e,t,a[t]);if(p)for(var t of p(a))s.call(a,t)&&m(e,t,a[t]);return e},h=(e,a)=>i(e,l(a)),u=(e,a)=>{var t={};for(var r in e)o.call(e,r)&&a.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&p)for(var r of p(e))a.indexOf(r)<0&&s.call(e,r)&&(t[r]=e[r]);return t};const c={title:"@rimbu/hashed",slug:"/rimbu/hashed"},y="package @rimbu/hashed",g={unversionedId:"rimbu_hashed/index",id:"rimbu_hashed/index",title:"@rimbu/hashed",description:"The @rimbu/hashed package provides implementations of the HashSet and HashMap.",source:"@site/api/rimbu_hashed/index.mdx",sourceDirName:"rimbu_hashed",slug:"/rimbu/hashed",permalink:"/api/rimbu/hashed",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/hashed",slug:"/rimbu/hashed"},sidebar:"defaultSidebar",previous:{title:"WithGraphValues",permalink:"/api/rimbu/graph/custom/WithGraphValues/type"},next:{title:"BlockBuilderBase<E>",permalink:"/api/rimbu/hashed/BlockBuilderBase/class"}},b={},f=[{value:"Interfaces",id:"interfaces",level:2},{value:"Namespaces",id:"namespaces",level:2},{value:"Classes",id:"classes",level:2}],N={toc:f},v="wrapper";function O(e){var a=e,{components:t}=a,n=u(a,["components"]);return(0,r.yg)(v,h(d(d({},N),n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",d({},{id:"package-rimbuhashed"}),(0,r.yg)("inlineCode",{parentName:"h1"},"package @rimbu/hashed")),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"@rimbu/hashed")," package provides implementations of the ",(0,r.yg)("inlineCode",{parentName:"p"},"HashSet")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"HashMap"),"."),(0,r.yg)("p",null," See the ",(0,r.yg)("a",d({parentName:"p"},{href:"/docs/collections/map"}),"Rimbu docs Map page")," and ",(0,r.yg)("a",d({parentName:"p"},{href:"/docs/collections/set"}),"Rimbu docs Set page")," for more information.\nThis is a convenience package that exports everything from the following sub-packages:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",d({parentName:"li"},{href:"./hashed/map"}),(0,r.yg)("inlineCode",{parentName:"a"},"@rimbu/hashed/map"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",d({parentName:"li"},{href:"./hashed/set"}),(0,r.yg)("inlineCode",{parentName:"a"},"@rimbu/hashed/set")))),(0,r.yg)("h2",d({},{id:"interfaces"}),"Interfaces"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/hashed/GenSource/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"GenSource<E>"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"undocumented")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/hashed/Hasher/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"Hasher<UK>"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"Interface used to hash objects for hashed collections.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/hashed/HashMap/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMap<K,V>"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/hashed/map/HashMap/interface"}),"HashMap API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/hashed/HashSet/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashSet<T>"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/hashed/HashSet/interface"}),"HashSet API documentation"))))),(0,r.yg)("h2",d({},{id:"namespaces"}),"Namespaces"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/hashed/Hasher/namespace"}),(0,r.yg)("inlineCode",{parentName:"a"},"Hasher"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"Interface used to hash objects for hashed collections.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/hashed/HashMap/namespace"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMap"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/hashed/map/HashMap/interface"}),"HashMap API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/hashed/HashSet/namespace"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashSet"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/hashed/HashSet/interface"}),"HashSet API documentation"))))),(0,r.yg)("h2",d({},{id:"classes"}),"Classes"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/hashed/BlockBuilderBase/class"}),(0,r.yg)("inlineCode",{parentName:"a"},"BlockBuilderBase"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"undocumented")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/hashed/CollisionBuilderBase/class"}),(0,r.yg)("inlineCode",{parentName:"a"},"CollisionBuilderBase"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"undocumented")))))}O.isMDXComponent=!0}}]);