"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[91413],{15680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>c});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),m=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},y="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),y=m(r),s=a,c=y["".concat(p,".").concat(s)]||y[s]||d[s]||i;return r?n.createElement(c,l(l({ref:t},u),{},{components:r})):n.createElement(c,l({ref:t},u))}));function c(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=s;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[y]="string"==typeof e?e:a,l[1]=o;for(var m=2;m<i;m++)l[m]=r[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},41311:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>b,contentTitle:()=>g,default:()=>h,frontMatter:()=>c,metadata:()=>f,toc:()=>S});var n=r(15680),a=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,y=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&u(e,r,t[r]);if(o)for(var r of o(t))m.call(t,r)&&u(e,r,t[r]);return e},d=(e,t)=>i(e,l(t)),s=(e,t)=>{var r={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&m.call(e,n)&&(r[n]=e[n]);return r};const c={title:"SortedMultiSet.NonEmpty<T>",slug:"/rimbu/multiset/SortedMultiSet/NonEmpty/interface"},g="interface SortedMultiSet.NonEmpty<T>",f={unversionedId:"rimbu_multiset/SortedMultiSet/NonEmpty.interface",id:"rimbu_multiset/SortedMultiSet/NonEmpty.interface",title:"SortedMultiSet.NonEmpty<T>",description:"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the SortedMultiSet API documentation",source:"@site/api/rimbu_multiset/SortedMultiSet/NonEmpty.interface.mdx",sourceDirName:"rimbu_multiset/SortedMultiSet",slug:"/rimbu/multiset/SortedMultiSet/NonEmpty/interface",permalink:"/api/rimbu/multiset/SortedMultiSet/NonEmpty/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"SortedMultiSet.NonEmpty<T>",slug:"/rimbu/multiset/SortedMultiSet/NonEmpty/interface"},sidebar:"defaultSidebar",previous:{title:"SortedMultiSet.Context<UT>",permalink:"/api/rimbu/multiset/SortedMultiSet/Context/interface"},next:{title:"SortedMultiSet.Types",permalink:"/api/rimbu/multiset/SortedMultiSet/Types/interface"}},b={},S=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides",level:4}],N={toc:S},v="wrapper";function h(e){var t=e,{components:r}=t,a=s(t,["components"]);return(0,n.yg)(v,d(y(y({},N),a),{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h1",y({},{id:"interface-sortedmultisetnonemptyt"}),(0,n.yg)("inlineCode",{parentName:"h1"},"interface SortedMultiSet.NonEmpty<T>")),(0,n.yg)("p",null,"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the ",(0,n.yg)("a",y({parentName:"p"},{href:"https://rimbu.org/docs/collections/multiset"}),"MultiSet documentation")," and the ",(0,n.yg)("a",y({parentName:"p"},{href:"https://rimbu.org/api/rimbu/multiset/SortedMultiSet/interface"}),"SortedMultiSet API documentation")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Extends:")," ",(0,n.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"Streamable.NonEmpty<T>")),", ",(0,n.yg)("a",y({parentName:"p"},{href:"/api/rimbu/multiset/SortedMultiSet/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedMultiSet<T>"))),(0,n.yg)("h2",y({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),"T"),(0,n.yg)("td",y({parentName:"tr"},{align:null}),"the value type")))),(0,n.yg)("admonition",y({},{title:"note",type:"note"}),(0,n.yg)("ul",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ul"},"The ",(0,n.yg)("inlineCode",{parentName:"li"},"SortedMultiSet")," uses the contexts' ",(0,n.yg)("inlineCode",{parentName:"li"},"SortedMap")," ",(0,n.yg)("inlineCode",{parentName:"li"},"mapContext")," to sort the values."))),(0,n.yg)("admonition",y({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"const s1 = SortedMultiSet.empty<string>()\nconst s2 = SortedMultiSet.of('a', 'b', 'a', 'c')\n"))),(0,n.yg)("h2",y({},{id:"methods"}),"Methods"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",y({},{id:"stream"}),(0,n.yg)("inlineCode",{parentName:"h3"},"stream")),(0,n.yg)("p",null,"undocumented")),(0,n.yg)("h4",y({},{id:"definition"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"stream(options?: {"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"reversed?: boolean;"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"}): "),(0,n.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.yg)("h4",y({},{id:"parameters"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"options")),(0,n.yg)("td",y({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"{"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"reversed?: boolean;"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"}")),(0,n.yg)("td",y({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",y({},{id:"overrides"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface#stream"}),"NonEmpty.stream"),", ",(0,n.yg)("a",y({parentName:"p"},{href:"/api/rimbu/multiset/SortedMultiSet/interface#stream"}),"SortedMultiSet.stream"))))}h.isMDXComponent=!0}}]);