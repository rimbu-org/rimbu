"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[99301],{15680:(e,a,t)=>{t.d(a,{xA:()=>o,yg:()=>s});var r=t(96540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var u=r.createContext({}),m=function(e){var a=r.useContext(u),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},o=function(e){var a=m(e.components);return r.createElement(u.Provider,{value:a},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},c=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),d=m(t),c=n,s=d["".concat(u,".").concat(c)]||d[c]||y[c]||i;return t?r.createElement(s,l(l({ref:a},o),{},{components:t})):r.createElement(s,l({ref:a},o))}));function s(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,l=new Array(i);l[0]=c;var p={};for(var u in a)hasOwnProperty.call(a,u)&&(p[u]=a[u]);p.originalType=e,p[d]="string"==typeof e?e:n,l[1]=p;for(var m=2;m<i;m++)l[m]=t[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1799:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>M,contentTitle:()=>g,default:()=>v,frontMatter:()=>s,metadata:()=>h,toc:()=>b});var r=t(15680),n=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,o=(e,a,t)=>a in e?n(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,d=(e,a)=>{for(var t in a||(a={}))u.call(a,t)&&o(e,t,a[t]);if(p)for(var t of p(a))m.call(a,t)&&o(e,t,a[t]);return e},y=(e,a)=>i(e,l(a)),c=(e,a)=>{var t={};for(var r in e)u.call(e,r)&&a.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&p)for(var r of p(e))a.indexOf(r)<0&&m.call(e,r)&&(t[r]=e[r]);return t};const s={title:"@rimbu/multimap",slug:"/rimbu/multimap"},g="package @rimbu/multimap",h={unversionedId:"rimbu_multimap/index",id:"rimbu_multimap/index",title:"@rimbu/multimap",description:"The @rimbu/multimap package provides implementations for various MultiMaps.",source:"@site/api/rimbu_multimap/index.mdx",sourceDirName:"rimbu_multimap",slug:"/rimbu/multimap",permalink:"/api/rimbu/multimap",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/multimap",slug:"/rimbu/multimap"},sidebar:"defaultSidebar",previous:{title:"Tree<T,TS,TB,C>",permalink:"/api/rimbu/list/custom/Tree/interface"},next:{title:"HashMultiMapHashValue (namespace)",permalink:"/api/rimbu/multimap/HashMultiMapHashValue/namespace"}},M={},b=[{value:"Interfaces",id:"interfaces",level:2},{value:"Namespaces",id:"namespaces",level:2}],f={toc:b},N="wrapper";function v(e){var a=e,{components:t}=a,n=c(a,["components"]);return(0,r.yg)(N,y(d(d({},f),n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",d({},{id:"package-rimbumultimap"}),(0,r.yg)("inlineCode",{parentName:"h1"},"package @rimbu/multimap")),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"@rimbu/multimap")," package provides implementations for various MultiMaps."),(0,r.yg)("p",null," See the ",(0,r.yg)("a",d({parentName:"p"},{href:"/docs/collections/multimap"}),"Rimbu docs MultiMap page")," for more information."),(0,r.yg)("h2",d({},{id:"interfaces"}),"Interfaces"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/multimap/HashMultiMapHashValue/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMultiMapHashValue<K,V>"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multimap/HashMultiMapHashValue/interface"}),"HashMultiMapHashValue API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/multimap/HashMultiMapSortedValue/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMultiMapSortedValue<K,V>"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multimap/HashMultiMapSortedValue/interface"}),"HashMultiMapSortedValue API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/multimap/MultiMap/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"MultiMap<K,V>"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable MultiMap of key type K, and value type V. In the Map, each key has at least one value. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multimap/MultiMap/interface"}),"MultiMap API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/multimap/SortedMultiMapHashValue/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"SortedMultiMapHashValue<K,V>"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multimap/SortedMultiMapHashValue/interface"}),"SortedMultiMapHashValue API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/multimap/SortedMultiMapSortedValue/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"SortedMultiMapSortedValue<K,V>"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multimap/SortedMultiMapSortedValue/interface"}),"SortedMultiMapSortedValue API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/multimap/VariantMultiMap/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"VariantMultiMap<K,V>"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-variant immutable MultiMap of key type K, and value type V. In the Map, each key has at least one value. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multimap/VariantMultiMap/interface"}),"VariantMultiMap API documentation"))))),(0,r.yg)("h2",d({},{id:"namespaces"}),"Namespaces"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",d({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/multimap/HashMultiMapHashValue/namespace"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMultiMapHashValue"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multimap/HashMultiMapHashValue/interface"}),"HashMultiMapHashValue API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/multimap/HashMultiMapSortedValue/namespace"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashMultiMapSortedValue"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multimap/HashMultiMapSortedValue/interface"}),"HashMultiMapSortedValue API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/multimap/MultiMap/namespace"}),(0,r.yg)("inlineCode",{parentName:"a"},"MultiMap"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable MultiMap of key type K, and value type V. In the Map, each key has at least one value. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multimap/MultiMap/interface"}),"MultiMap API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/multimap/SortedMultiMapHashValue/namespace"}),(0,r.yg)("inlineCode",{parentName:"a"},"SortedMultiMapHashValue"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multimap/SortedMultiMapHashValue/interface"}),"SortedMultiMapHashValue API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/multimap/SortedMultiMapSortedValue/namespace"}),(0,r.yg)("inlineCode",{parentName:"a"},"SortedMultiMapSortedValue"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multimap/SortedMultiMapSortedValue/interface"}),"SortedMultiMapSortedValue API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",d({parentName:"tr"},{align:null}),(0,r.yg)("a",d({parentName:"td"},{href:"/api/rimbu/multimap/VariantMultiMap/namespace"}),(0,r.yg)("inlineCode",{parentName:"a"},"VariantMultiMap"))),(0,r.yg)("td",d({parentName:"tr"},{align:null}),"A type-variant immutable MultiMap of key type K, and value type V. In the Map, each key has at least one value. See the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,r.yg)("a",d({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multimap/VariantMultiMap/interface"}),"VariantMultiMap API documentation"))))))}v.isMDXComponent=!0}}]);