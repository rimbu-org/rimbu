"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[36505],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>y});var a=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),o=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=o(r),d=n,y=m["".concat(p,".").concat(d)]||m[d]||f[d]||i;return r?a.createElement(y,l(l({ref:t},c),{},{components:r})):a.createElement(y,l({ref:t},c))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=d;var u={};for(var p in t)hasOwnProperty.call(t,p)&&(u[p]=t[p]);u.originalType=e,u[m]="string"==typeof e?e:n,l[1]=u;for(var o=2;o<i;o++)l[o]=r[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},58439:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>g,contentTitle:()=>s,default:()=>h,frontMatter:()=>y,metadata:()=>b,toc:()=>M});var a=r(15680),n=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,u=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,m=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&c(e,r,t[r]);if(u)for(var r of u(t))o.call(t,r)&&c(e,r,t[r]);return e},f=(e,t)=>i(e,l(t)),d=(e,t)=>{var r={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&u)for(var a of u(e))t.indexOf(a)<0&&o.call(e,a)&&(r[a]=e[a]);return r};const y={title:"MultiMap.Builder<K,V>",slug:"/rimbu/multimap/MultiMap/Builder/interface"},s="interface MultiMap.Builder<K,V>",b={unversionedId:"rimbu_multimap/MultiMap/Builder.interface",id:"rimbu_multimap/MultiMap/Builder.interface",title:"MultiMap.Builder<K,V>",description:"A mutable MultiMap builder used to efficiently create new immutable instances. See the MultiMap documentation and the MultiMap.Builder API documentation",source:"@site/api/rimbu_multimap/MultiMap/Builder.interface.mdx",sourceDirName:"rimbu_multimap/MultiMap",slug:"/rimbu/multimap/MultiMap/Builder/interface",permalink:"/api/rimbu/multimap/MultiMap/Builder/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"MultiMap.Builder<K,V>",slug:"/rimbu/multimap/MultiMap/Builder/interface"},sidebar:"defaultSidebar",previous:{title:"MultiMap (namespace)",permalink:"/api/rimbu/multimap/MultiMap/namespace"},next:{title:"MultiMap.Context<UK,UV>",permalink:"/api/rimbu/multimap/MultiMap/Context/interface"}},g={},M=[{value:"Type parameters",id:"type-parameters",level:2}],O={toc:M},v="wrapper";function h(e){var t=e,{components:r}=t,n=d(t,["components"]);return(0,a.yg)(v,f(m(m({},O),n),{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",m({},{id:"interface-multimapbuilderkv"}),(0,a.yg)("inlineCode",{parentName:"h1"},"interface MultiMap.Builder<K,V>")),(0,a.yg)("p",null,"A mutable ",(0,a.yg)("inlineCode",{parentName:"p"},"MultiMap")," builder used to efficiently create new immutable instances. See the ",(0,a.yg)("a",m({parentName:"p"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,a.yg)("a",m({parentName:"p"},{href:"https://rimbu.org/api/rimbu/multimap/MultiMap/Builder/interface"}),"MultiMap.Builder API documentation")),(0,a.yg)("h2",m({},{id:"type-parameters"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",m({parentName:"tr"},{align:null}),"K"),(0,a.yg)("td",m({parentName:"tr"},{align:null}),"the key type")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",m({parentName:"tr"},{align:null}),"V"),(0,a.yg)("td",m({parentName:"tr"},{align:null}),"the value type")))))}h.isMDXComponent=!0}}]);