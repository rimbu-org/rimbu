"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[89337],{15680:(e,r,n)=>{n.d(r,{xA:()=>u,yg:()=>c});var t=n(96540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=t.createContext({}),m=function(e){var r=t.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},u=function(e){var r=m(e.components);return t.createElement(p.Provider,{value:r},e.children)},f="mdxType",s={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},y=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=m(n),y=a,c=f["".concat(p,".").concat(y)]||f[y]||s[y]||i;return n?t.createElement(c,o(o({ref:r},u),{},{components:n})):t.createElement(c,o({ref:r},u))}));function c(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=y;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[f]="string"==typeof e?e:a,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},30213:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>g,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>b,toc:()=>v});var t=n(15680),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,u=(e,r,n)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[r]=n,f=(e,r)=>{for(var n in r||(r={}))p.call(r,n)&&u(e,n,r[n]);if(l)for(var n of l(r))m.call(r,n)&&u(e,n,r[n]);return e},s=(e,r)=>i(e,o(r)),y=(e,r)=>{var n={};for(var t in e)p.call(e,t)&&r.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&l)for(var t of l(e))r.indexOf(t)<0&&m.call(e,t)&&(n[t]=e[t]);return n};const c={title:"filter",slug:"/rimbu/stream/Transformer/filter/var"},d="type filter",b={unversionedId:"rimbu_stream/Transformer/filter.var",id:"rimbu_stream/Transformer/filter.var",title:"filter",description:"Returns a transformer that filters elements from the input stream based on the provided predicate function.",source:"@site/api/rimbu_stream/Transformer/filter.var.mdx",sourceDirName:"rimbu_stream/Transformer",slug:"/rimbu/stream/Transformer/filter/var",permalink:"/api/rimbu/stream/Transformer/filter/var",draft:!1,tags:[],version:"current",frontMatter:{title:"filter",slug:"/rimbu/stream/Transformer/filter/var"},sidebar:"defaultSidebar",previous:{title:"NonEmpty",permalink:"/api/rimbu/stream/Transformer/NonEmpty/type"},next:{title:"window",permalink:"/api/rimbu/stream/Transformer/window/var"}},g={},v=[{value:"Definition",id:"definition",level:2}],T={toc:v},O="wrapper";function h(e){var r=e,{components:n}=r,a=y(r,["components"]);return(0,t.yg)(O,s(f(f({},T),a),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",f({},{id:"type-filter"}),(0,t.yg)("inlineCode",{parentName:"h1"},"type filter")),(0,t.yg)("p",null,"Returns a transformer that filters elements from the input stream based on the provided predicate function."),(0,t.yg)("admonition",f({},{title:"note",type:"note"}),(0,t.yg)("p",{parentName:"admonition"},"if the predicate is a type guard, the return type is automatically inferred")),(0,t.yg)("h2",f({},{id:"definition"}),"Definition"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"filter: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T, TF extends T>(pred: (value: T, index: number, halt: () => void) => value is TF, options?: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"negate?: boolean "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): "),(0,t.yg)("a",f({parentName:"p"},{href:"/api/rimbu/stream/Transformer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Transformer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, TF>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T, TF extends T>(pred: (value: T, index: number, halt: () => void) => value is TF, options: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"negate: true;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): "),(0,t.yg)("a",f({parentName:"p"},{href:"/api/rimbu/stream/Transformer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Transformer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, Exclude<T, TF>>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T>(pred: (value: T, index: number, halt: () => void) => boolean, options?: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"negate?: boolean "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): "),(0,t.yg)("a",f({parentName:"p"},{href:"/api/rimbu/stream/Transformer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"Transformer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}")))}h.isMDXComponent=!0}}]);