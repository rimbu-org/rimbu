"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[14642],{15680:(e,n,r)=>{r.d(n,{xA:()=>p,yg:()=>s});var t=r(96540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=t.createContext({}),m=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=m(e.components);return t.createElement(u.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},b=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(r),b=a,s=c["".concat(u,".").concat(b)]||c[b]||d[b]||o;return r?t.createElement(s,i(i({ref:n},p),{},{components:r})):t.createElement(s,i({ref:n},p))}));function s(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=b;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var m=2;m<o;m++)i[m]=r[m];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}b.displayName="MDXCreateElement"},80344:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>f,contentTitle:()=>y,default:()=>h,frontMatter:()=>s,metadata:()=>g,toc:()=>v});var t=r(15680),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,p=(e,n,r)=>n in e?a(e,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[n]=r,c=(e,n)=>{for(var r in n||(n={}))u.call(n,r)&&p(e,r,n[r]);if(l)for(var r of l(n))m.call(n,r)&&p(e,r,n[r]);return e},d=(e,n)=>o(e,i(n)),b=(e,n)=>{var r={};for(var t in e)u.call(e,t)&&n.indexOf(t)<0&&(r[t]=e[t]);if(null!=e&&l)for(var t of l(e))n.indexOf(t)<0&&m.call(e,t)&&(r[t]=e[t]);return r};const s={title:"IndexRange",slug:"/rimbu/common/IndexRange/type"},y="type IndexRange",g={unversionedId:"rimbu_common/IndexRange.type",id:"rimbu_common/IndexRange.type",title:"IndexRange",description:"A flexible range specification for numeric indices. If a start or end is defined, a tuple can be used where the second item is a boolean indicating whether that end is inclusive or exclusive.",source:"@site/api/rimbu_common/IndexRange.type.mdx",sourceDirName:"rimbu_common",slug:"/rimbu/common/IndexRange/type",permalink:"/api/rimbu/common/IndexRange/type",draft:!1,tags:[],version:"current",frontMatter:{title:"IndexRange",slug:"/rimbu/common/IndexRange/type"},sidebar:"defaultSidebar",previous:{title:"IndexRange (namespace)",permalink:"/api/rimbu/common/IndexRange/namespace"},next:{title:"MaybePromise",permalink:"/api/rimbu/common/MaybePromise/type"}},f={},v=[{value:"Definition",id:"definition",level:2}],x={toc:v},O="wrapper";function h(e){var n=e,{components:r}=n,a=b(n,["components"]);return(0,t.yg)(O,d(c(c({},x),a),{components:r,mdxType:"MDXLayout"}),(0,t.yg)("h1",c({},{id:"type-indexrange"}),(0,t.yg)("inlineCode",{parentName:"h1"},"type IndexRange")),(0,t.yg)("p",null,"A flexible range specification for numeric indices. If a start or end is defined, a tuple can be used where the second item is a boolean indicating whether that end is inclusive or exclusive.\nAn IndexRange can have one of the following forms:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"{ amount: number }"),(0,t.yg)("li",{parentName:"ul"},"{ start: number }"),(0,t.yg)("li",{parentName:"ul"},"{ start: number, amount: number }"),(0,t.yg)("li",{parentName:"ul"},"{ start: number, end: number }"),(0,t.yg)("li",{parentName:"ul"},"{ start: number, end: ","[number, boolean]"," }"),(0,t.yg)("li",{parentName:"ul"},"{ start: ","[number, boolean]"," }"),(0,t.yg)("li",{parentName:"ul"},"{ start: ","[number, boolean]",", amount: number }"),(0,t.yg)("li",{parentName:"ul"},"{ start: ","[number, boolean]",", end: number }"),(0,t.yg)("li",{parentName:"ul"},"{ start: ","[number, boolean]",", end: ","[number, boolean]"," }"),(0,t.yg)("li",{parentName:"ul"},"{ end: number }"),(0,t.yg)("li",{parentName:"ul"},"{ end: ","[number, boolean]"," }")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Companion namespace:")," ",(0,t.yg)("a",c({parentName:"p"},{href:"/api/rimbu/common/IndexRange/namespace"}),"IndexRange")),(0,t.yg)("h2",c({},{id:"definition"}),"Definition"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"export type IndexRange = {"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"amount: number;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"start?: number "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," [number, boolean];"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"end?: undefined;"),(0,t.yg)("br",null),(0,t.yg)("inlineCode",{parentName:"p"},"} "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," Range<number>;")))}h.isMDXComponent=!0}}]);