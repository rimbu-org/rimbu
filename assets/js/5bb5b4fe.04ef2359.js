"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[37476],{15680:(e,a,t)=>{t.d(a,{xA:()=>y,yg:()=>s});var r=t(96540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var m=r.createContext({}),o=function(e){var a=r.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):p(p({},a),e)),t},y=function(e){var a=o(e.components);return r.createElement(m.Provider,{value:a},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,m=e.parentName,y=i(e,["components","mdxType","originalType","parentName"]),g=o(t),u=n,s=g["".concat(m,".").concat(u)]||g[u]||d[u]||l;return t?r.createElement(s,p(p({ref:a},y),{},{components:t})):r.createElement(s,p({ref:a},y))}));function s(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,p=new Array(l);p[0]=u;var i={};for(var m in a)hasOwnProperty.call(a,m)&&(i[m]=a[m]);i.originalType=e,i[g]="string"==typeof e?e:n,p[1]=i;for(var o=2;o<l;o++)p[o]=t[o];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},46630:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>N,default:()=>V,frontMatter:()=>s,metadata:()=>h,toc:()=>b});var r=t(15680),n=Object.defineProperty,l=Object.defineProperties,p=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,y=(e,a,t)=>a in e?n(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,g=(e,a)=>{for(var t in a||(a={}))m.call(a,t)&&y(e,t,a[t]);if(i)for(var t of i(a))o.call(a,t)&&y(e,t,a[t]);return e},d=(e,a)=>l(e,p(a)),u=(e,a)=>{var t={};for(var r in e)m.call(e,r)&&a.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&i)for(var r of i(e))a.indexOf(r)<0&&o.call(e,r)&&(t[r]=e[r]);return t};const s={title:"ValuedGraphBase.Factory<Tp,UN>",slug:"/rimbu/graph/custom/ValuedGraphBase/Factory/interface"},N="interface ValuedGraphBase.Factory<Tp,UN>",h={unversionedId:"rimbu_graph/custom/ValuedGraphBase/Factory.interface",id:"rimbu_graph/custom/ValuedGraphBase/Factory.interface",title:"ValuedGraphBase.Factory<Tp,UN>",description:"undocumented",source:"@site/api/rimbu_graph/custom/ValuedGraphBase/Factory.interface.mdx",sourceDirName:"rimbu_graph/custom/ValuedGraphBase",slug:"/rimbu/graph/custom/ValuedGraphBase/Factory/interface",permalink:"/api/rimbu/graph/custom/ValuedGraphBase/Factory/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"ValuedGraphBase.Factory<Tp,UN>",slug:"/rimbu/graph/custom/ValuedGraphBase/Factory/interface"},sidebar:"defaultSidebar",previous:{title:"ValuedGraphBase.Context<UN,Tp>",permalink:"/api/rimbu/graph/custom/ValuedGraphBase/Context/interface"},next:{title:"ValuedGraphBase.NonEmpty<N,V,Tp>",permalink:"/api/rimbu/graph/custom/ValuedGraphBase/NonEmpty/interface"}},c={},b=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>builder</code>",id:"builder",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"<code>empty</code>",id:"empty",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"<code>from</code>",id:"from",level:3},{value:"Definitions",id:"definitions",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>of</code>",id:"of",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>reducer</code>",id:"reducer",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-2",level:4}],f={toc:b},C="wrapper";function V(e){var a=e,{components:t}=a,n=u(a,["components"]);return(0,r.yg)(C,d(g(g({},f),n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",g({},{id:"interface-valuedgraphbasefactorytpun"}),(0,r.yg)("inlineCode",{parentName:"h1"},"interface ValuedGraphBase.Factory<Tp,UN>")),(0,r.yg)("p",null,"undocumented"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implemented by:")," ",(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/ValuedGraphBase/Context/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"ValuedGraphBase.Context<UN,Tp>")),", ",(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/ArrowValuedGraphHashedCreators/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrowValuedGraphHashedCreators")),", ",(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/EdgeValuedGraphHashedCreators/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"EdgeValuedGraphHashedCreators")),", ",(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/EdgeValuedGrapSortedCreators/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"EdgeValuedGrapSortedCreators")),", ",(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/ArrowValuedGraphSortedCreators/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrowValuedGraphSortedCreators"))),(0,r.yg)("h2",g({},{id:"type-parameters"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Default"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),"Tp"),(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("a",g({parentName:"td"},{href:"/api/rimbu/graph/custom/ValuedGraphBase/Types/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"ValuedGraphBase.Types"))),(0,r.yg)("td",g({parentName:"tr"},{align:null})),(0,r.yg)("td",g({parentName:"tr"},{align:null}),"undocumented")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),"UN"),(0,r.yg)("td",g({parentName:"tr"},{align:null})),(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"unknown")),(0,r.yg)("td",g({parentName:"tr"},{align:null}),"undocumented")))),(0,r.yg)("h2",g({},{id:"methods"}),"Methods"),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",g({},{id:"builder"}),(0,r.yg)("inlineCode",{parentName:"h3"},"builder")),(0,r.yg)("p",null,"Returns an empty builder instance.")),(0,r.yg)("h4",g({},{id:"definition"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"builder<N extends UN, V>(): "),(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, N, V>['builder'];"))),(0,r.yg)("h4",g({},{id:"type-parameters-1"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),"N"),(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UN")),(0,r.yg)("td",g({parentName:"tr"},{align:null}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),"V"),(0,r.yg)("td",g({parentName:"tr"},{align:null})),(0,r.yg)("td",g({parentName:"tr"},{align:null}))))),(0,r.yg)("admonition",g({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",g({parentName:"pre"},{className:"language-ts"}),"ArrowValuedGraphHashed.builder<number, string>()    // => ArrowValuedGraphHashed.Builder<number, string>\n")))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",g({},{id:"empty"}),(0,r.yg)("inlineCode",{parentName:"h3"},"empty")),(0,r.yg)("p",null,"Returns the (singleton) empty instance of this type and context with given key and value types.")),(0,r.yg)("h4",g({},{id:"definition-1"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"empty<N extends UN, V>(): "),(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, N, V>['normal'];"))),(0,r.yg)("h4",g({},{id:"type-parameters-2"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),"N"),(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UN")),(0,r.yg)("td",g({parentName:"tr"},{align:null}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),"V"),(0,r.yg)("td",g({parentName:"tr"},{align:null})),(0,r.yg)("td",g({parentName:"tr"},{align:null}))))),(0,r.yg)("admonition",g({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",g({parentName:"pre"},{className:"language-ts"}),"ArrowValuedGraphHashed.empty<number, string>()    // => ArrowValuedGraphHashed<number, string>\nArrowValuedGraphHashed.empty<string, boolean>()   // => ArrowValuedGraphHashed<string, boolean>\n")))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",g({},{id:"from"}),(0,r.yg)("inlineCode",{parentName:"h3"},"from")),(0,r.yg)("p",null,"Returns an immutable valued Graph, containing the graph elements from each of the given ",(0,r.yg)("inlineCode",{parentName:"p"},"sources"),".")),(0,r.yg)("h4",g({},{id:"definitions"}),"Definitions"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"from<N extends UN, V>(...sources: "),(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<"),(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<ValuedGraphElement<N, V>>>): "),(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, N, V>['nonEmpty'];"))),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"from<N extends UN, V>(...sources: "),(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<"),(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,r.yg)("inlineCode",{parentName:"p"},"<ValuedGraphElement<N, V>>>): "),(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, N, V>['normal'];"))),(0,r.yg)("h4",g({},{id:"type-parameters-3"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),"N"),(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UN")),(0,r.yg)("td",g({parentName:"tr"},{align:null}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),"V"),(0,r.yg)("td",g({parentName:"tr"},{align:null})),(0,r.yg)("td",g({parentName:"tr"},{align:null}))))),(0,r.yg)("h4",g({},{id:"parameters"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"sources")),(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("a",g({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"td"},"<"),(0,r.yg)("a",g({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,r.yg)("inlineCode",{parentName:"td"},"<ValuedGraphElement<N, V>>>")),(0,r.yg)("td",g({parentName:"tr"},{align:null}),"an array of ",(0,r.yg)("inlineCode",{parentName:"td"},"StreamSource")," instances containing graph elements to add")))),(0,r.yg)("admonition",g({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",g({parentName:"pre"},{className:"language-ts"}),"ArrowValuedGraphHashed.from([[1], [2]], [[3, 4, 'c']])  // => ArrowValuedGraphHashed.NonEmpty<number, string>\n")))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",g({},{id:"of"}),(0,r.yg)("inlineCode",{parentName:"h3"},"of")),(0,r.yg)("p",null,"Returns an immutable valued Graph instance containing the graph elements from the given ",(0,r.yg)("inlineCode",{parentName:"p"},"graphElements"),".")),(0,r.yg)("h4",g({},{id:"definition-2"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"of<N extends UN, V>(...graphElements: "),(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<ValuedGraphElement<N, V>>): "),(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, N, V>['nonEmpty'];"))),(0,r.yg)("h4",g({},{id:"type-parameters-4"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),"N"),(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UN")),(0,r.yg)("td",g({parentName:"tr"},{align:null}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),"V"),(0,r.yg)("td",g({parentName:"tr"},{align:null})),(0,r.yg)("td",g({parentName:"tr"},{align:null}))))),(0,r.yg)("h4",g({},{id:"parameters-1"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"graphElements")),(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("a",g({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"td"},"<ValuedGraphElement<N, V>>")),(0,r.yg)("td",g({parentName:"tr"},{align:null}),"a non-empty array of graph elements that are either a single tuple containing a node, or a triplet containing two connection nodes and the connection value.")))),(0,r.yg)("admonition",g({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",g({parentName:"pre"},{className:"language-ts"}),"ArrowValuedGraphHashed.of([1], [2], [3, 4, 'a']) // => ArrowValuedGraphHashed.NonEmpty<number, string>\n")))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",g({},{id:"reducer"}),(0,r.yg)("inlineCode",{parentName:"h3"},"reducer")),(0,r.yg)("p",null,"Returns a ",(0,r.yg)("inlineCode",{parentName:"p"},"Reducer")," that adds valued received graph elements to a ValuedGraph and returns the ValuedGraph as a result. When a ",(0,r.yg)("inlineCode",{parentName:"p"},"source")," is given, the reducer will first create a graph from the source, and then add graph elements to it.")),(0,r.yg)("h4",g({},{id:"definition-3"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"reducer<N extends UN, V>(source?: "),(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<ValuedGraphElement<N, V>>): Reducer<ValuedGraphElement<N, V>, "),(0,r.yg)("a",g({parentName:"p"},{href:"/api/rimbu/graph/custom/WithGraphValues/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithGraphValues")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, N, V>['normal']>;"))),(0,r.yg)("h4",g({},{id:"type-parameters-5"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),"N"),(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UN")),(0,r.yg)("td",g({parentName:"tr"},{align:null}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),"V"),(0,r.yg)("td",g({parentName:"tr"},{align:null})),(0,r.yg)("td",g({parentName:"tr"},{align:null}))))),(0,r.yg)("h4",g({},{id:"parameters-2"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",g({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"source")),(0,r.yg)("td",g({parentName:"tr"},{align:null}),(0,r.yg)("a",g({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,r.yg)("inlineCode",{parentName:"td"},"<ValuedGraphElement<N, V>>")),(0,r.yg)("td",g({parentName:"tr"},{align:null}),"(optional) an initial source of graph elements to add to")))),(0,r.yg)("admonition",g({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",g({parentName:"pre"},{className:"language-ts"}),"const someSource: ValuedGraphElement<number, string>[] = [[1, 2, 'a'], [3], [5]];\nconst result = Stream.of([1, 3, 'b'], [4, 3, 'c']).reduce(ArrowGraphSorted.reducer(someSource))\nresult.toArray()   // => [[1, 2, 'a'], [1, 3, 'b'], [4, 3, 'c'], [5]]\n"))),(0,r.yg)("admonition",g({},{title:"note",type:"note"}),(0,r.yg)("p",{parentName:"admonition"},"uses a builder under the hood. If the given ",(0,r.yg)("inlineCode",{parentName:"p"},"source")," is a ValuedGraph in the same context, it will directly call ",(0,r.yg)("inlineCode",{parentName:"p"},".toBuilder()"),"."))))}V.isMDXComponent=!0}}]);