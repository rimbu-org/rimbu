"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[59749],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>f});var r=t(96540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),y=p(t),s=o,f=y["".concat(c,".").concat(s)]||y[s]||m[s]||i;return t?r.createElement(f,a(a({ref:n},u),{},{components:t})):r.createElement(f,a({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=s;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[y]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},17954:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>b,default:()=>h,frontMatter:()=>f,metadata:()=>d,toc:()=>O});var r=t(15680),o=Object.defineProperty,i=Object.defineProperties,a=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,n,t)=>n in e?o(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,y=(e,n)=>{for(var t in n||(n={}))c.call(n,t)&&u(e,t,n[t]);if(l)for(var t of l(n))p.call(n,t)&&u(e,t,n[t]);return e},m=(e,n)=>i(e,a(n)),s=(e,n)=>{var t={};for(var r in e)c.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&l)for(var r of l(e))n.indexOf(r)<0&&p.call(e,r)&&(t[r]=e[r]);return t};const f={title:"AsyncCollectFun",slug:"/rimbu/common/AsyncCollectFun/type"},b="type AsyncCollectFun<T,R>",d={unversionedId:"rimbu_common/AsyncCollectFun.type",id:"rimbu_common/AsyncCollectFun.type",title:"AsyncCollectFun",description:"A potentially asynchronous function used in collect methods to collect values from a collection. This is basically a single-pass map and filter.",source:"@site/api/rimbu_common/AsyncCollectFun.type.mdx",sourceDirName:"rimbu_common",slug:"/rimbu/common/AsyncCollectFun/type",permalink:"/api/rimbu/common/AsyncCollectFun/type",draft:!1,tags:[],version:"current",frontMatter:{title:"AsyncCollectFun",slug:"/rimbu/common/AsyncCollectFun/type"},sidebar:"defaultSidebar",previous:{title:"ArrayNonEmpty",permalink:"/api/rimbu/common/ArrayNonEmpty/type"},next:{title:"AsyncOptLazy (namespace)",permalink:"/api/rimbu/common/AsyncOptLazy/namespace"}},g={},O=[{value:"Definition",id:"definition",level:2}],v={toc:O},C="wrapper";function h(e){var n=e,{components:t}=n,o=s(n,["components"]);return(0,r.yg)(C,m(y(y({},v),o),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",y({},{id:"type-asynccollectfuntr"}),(0,r.yg)("inlineCode",{parentName:"h1"},"type AsyncCollectFun<T,R>")),(0,r.yg)("p",null,"A potentially asynchronous function used in ",(0,r.yg)("inlineCode",{parentName:"p"},"collect")," methods to collect values from a collection. This is basically a single-pass map and filter."),(0,r.yg)("h2",y({},{id:"definition"}),"Definition"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"export type AsyncCollectFun<T, R> = (value: T, index: number, skip: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/common/CollectFun/Skip/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"CollectFun.Skip")),(0,r.yg)("inlineCode",{parentName:"p"},", halt: () => void) => "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,r.yg)("inlineCode",{parentName:"p"},"<R "),(0,r.yg)("code",null,"|"),(0,r.yg)("inlineCode",{parentName:"p"}," "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/common/CollectFun/Skip/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"CollectFun.Skip")),(0,r.yg)("inlineCode",{parentName:"p"},">;")))}h.isMDXComponent=!0}}]);