"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[17360],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>g});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),m=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=m(e.components);return r.createElement(c.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=m(t),h=a,g=s["".concat(c,".").concat(h)]||s[h]||u[h]||l;return t?r.createElement(g,i(i({ref:n},p),{},{components:t})):r.createElement(g,i({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=h;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[s]="string"==typeof e?e:a,i[1]=o;for(var m=2;m<l;m++)i[m]=t[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},56902:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>f,contentTitle:()=>y,default:()=>N,frontMatter:()=>g,metadata:()=>d,toc:()=>v});var r=t(15680),a=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,p=(e,n,t)=>n in e?a(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,s=(e,n)=>{for(var t in n||(n={}))c.call(n,t)&&p(e,t,n[t]);if(o)for(var t of o(n))m.call(n,t)&&p(e,t,n[t]);return e},u=(e,n)=>l(e,i(n)),h=(e,n)=>{var t={};for(var r in e)c.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&o)for(var r of o(e))n.indexOf(r)<0&&m.call(e,r)&&(t[r]=e[r]);return t};const g={title:"RemoteChannelServer (namespace)",slug:"/rimbu/channel/RemoteChannelServer/namespace"},y="namespace RemoteChannelServer",d={unversionedId:"rimbu_channel/RemoteChannelServer/index",id:"rimbu_channel/RemoteChannelServer/index",title:"RemoteChannelServer (namespace)",description:"A RemoteChannel server communicates with a RemoteChannel client through the given message port, and allows clients to easily create new channels to communicate with processes in the server context. The server needs to set up handlers to deal with the created channels.",source:"@site/api/rimbu_channel/RemoteChannelServer/index.mdx",sourceDirName:"rimbu_channel/RemoteChannelServer",slug:"/rimbu/channel/RemoteChannelServer/namespace",permalink:"/api/rimbu/channel/RemoteChannelServer/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"RemoteChannelServer (namespace)",slug:"/rimbu/channel/RemoteChannelServer/namespace"},sidebar:"defaultSidebar",previous:{title:"RemoteChannelClient",permalink:"/api/rimbu/channel/RemoteChannelClient/interface"},next:{title:"RemoteChannelServer.Constructors",permalink:"/api/rimbu/channel/RemoteChannelServer/Constructors/interface"}},f={},v=[{value:"Interfaces",id:"interfaces",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>create</code>",id:"create",level:3},{value:"Definition",id:"definition",level:4},{value:"Parameters",id:"parameters",level:4}],b={toc:v},C="wrapper";function N(e){var n=e,{components:t}=n,a=h(n,["components"]);return(0,r.yg)(C,u(s(s({},b),a),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",s({},{id:"namespace-remotechannelserver"}),(0,r.yg)("inlineCode",{parentName:"h1"},"namespace RemoteChannelServer")),(0,r.yg)("p",null,"A RemoteChannel server communicates with a RemoteChannel client through the given message port, and allows clients to easily create new channels to communicate with processes in the server context. The server needs to set up handlers to deal with the created channels."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Companion interface:")," ",(0,r.yg)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannelServer/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"RemoteChannelServer"))),(0,r.yg)("h2",s({},{id:"interfaces"}),"Interfaces"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",s({parentName:"tr"},{align:null}),(0,r.yg)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannelServer/Constructors/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"RemoteChannelServer.Constructors"))),(0,r.yg)("td",s({parentName:"tr"},{align:null}),"Defines the static ",(0,r.yg)("inlineCode",{parentName:"td"},"RemoteChannelServer")," API.")))),(0,r.yg)("h2",s({},{id:"static-methods"}),"Static Methods"),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",s({},{id:"create"}),(0,r.yg)("inlineCode",{parentName:"h3"},"create")),(0,r.yg)("p",null,"Resolves, if succesful, to a new RemoteChannelServer that can listen to client requests to create new channels.")),(0,r.yg)("h4",s({},{id:"definition"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"create(config: {"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"port: "),(0,r.yg)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort")),(0,r.yg)("inlineCode",{parentName:"p"},";"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"rcsChannelId?: string;"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"}): Promise<"),(0,r.yg)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannelServer/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"RemoteChannelServer")),(0,r.yg)("inlineCode",{parentName:"p"},">;"))),(0,r.yg)("h4",s({},{id:"parameters"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",s({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"config")),(0,r.yg)("td",s({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"{"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"td"},"port: "),(0,r.yg)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort")),(0,r.yg)("inlineCode",{parentName:"td"},";"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"td"},"rcsChannelId?: string;"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"td"},"}")),(0,r.yg)("td",s({parentName:"tr"},{align:null}),"the configuration for the RemoteChannelServer to be created:",(0,r.yg)("br",null)," - port: the message port to communicate with the client - rcsChannelId: (optional) an alternative channel id to use for communication with the client"))))))}N.isMDXComponent=!0}}]);