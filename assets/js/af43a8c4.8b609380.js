"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[36843],{15680:(e,a,t)=>{t.d(a,{xA:()=>b,yg:()=>c});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var m=n.createContext({}),p=function(e){var a=n.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},b=function(e){var a=p(e.components);return n.createElement(m.Provider,{value:a},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),u=p(t),d=r,c=u["".concat(m,".").concat(d)]||u[d]||y[d]||l;return t?n.createElement(c,o(o({ref:a},b),{},{components:t})):n.createElement(c,o({ref:a},b))}));function c(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var m in a)hasOwnProperty.call(a,m)&&(i[m]=a[m]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},60640:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>h,contentTitle:()=>s,default:()=>v,frontMatter:()=>c,metadata:()=>g,toc:()=>f});var n=t(15680),r=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,b=(e,a,t)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,u=(e,a)=>{for(var t in a||(a={}))m.call(a,t)&&b(e,t,a[t]);if(i)for(var t of i(a))p.call(a,t)&&b(e,t,a[t]);return e},y=(e,a)=>l(e,o(a)),d=(e,a)=>{var t={};for(var n in e)m.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&i)for(var n of i(e))a.indexOf(n)<0&&p.call(e,n)&&(t[n]=e[n]);return t};const c={title:"@rimbu/table",slug:"/rimbu/table"},s="package @rimbu/table",g={unversionedId:"rimbu_table/index",id:"rimbu_table/index",title:"@rimbu/table",description:"The @rimbu/table package provides implementations for tables (2-dimensional maps).",source:"@site/api/rimbu_table/index.mdx",sourceDirName:"rimbu_table",slug:"/rimbu/table",permalink:"/api/rimbu/table",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/table",slug:"/rimbu/table"},sidebar:"defaultSidebar",previous:{title:"fromStreamSource",permalink:"/api/rimbu/stream/fromStreamSource/var"},next:{title:"HashTableHashColumn (namespace)",permalink:"/api/rimbu/table/HashTableHashColumn/namespace"}},h={},f=[{value:"Interfaces",id:"interfaces",level:2},{value:"Namespaces",id:"namespaces",level:2}],N={toc:f},T="wrapper";function v(e){var a=e,{components:t}=a,r=d(a,["components"]);return(0,n.yg)(T,y(u(u({},N),r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",u({},{id:"package-rimbutable"}),(0,n.yg)("inlineCode",{parentName:"h1"},"package @rimbu/table")),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"@rimbu/table")," package provides implementations for tables (2-dimensional maps)."),(0,n.yg)("p",null," See the ",(0,n.yg)("a",u({parentName:"p"},{href:"/docs/collections/table"}),"Rimbu docs Table page")," for more information."),(0,n.yg)("p",null," For convenience, this package also exports everything from the following sub-packages:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",u({parentName:"li"},{href:"./table/hash-row"}),(0,n.yg)("inlineCode",{parentName:"a"},"@rimbu/table/hash-row"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",u({parentName:"li"},{href:"./table/sorted-row"}),(0,n.yg)("inlineCode",{parentName:"a"},"@rimbu/table/sorted-row")))),(0,n.yg)("h2",u({},{id:"interfaces"}),"Interfaces"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",u({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),(0,n.yg)("a",u({parentName:"td"},{href:"/api/rimbu/table/HashTableHashColumn/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashTableHashColumn<R,C,V>"))),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/hash-row/HashTableHashColumn/interface"}),"HashTableHashColumn API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),(0,n.yg)("a",u({parentName:"td"},{href:"/api/rimbu/table/HashTableSortedColumn/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashTableSortedColumn<R,C,V>"))),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/hash-row/HashTableSortedColumn/interface"}),"HashTableSortedColumn API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),(0,n.yg)("a",u({parentName:"td"},{href:"/api/rimbu/table/SortedTableHashColumn/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedTableHashColumn<R,C,V>"))),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/sorted-row/SortedTableHashColumn/interface"}),"SortedTableHashColumn API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),(0,n.yg)("a",u({parentName:"td"},{href:"/api/rimbu/table/SortedTableSortedColumn/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedTableSortedColumn<R,C,V>"))),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/sorted-row/SortedTableSortedColumn/interface"}),"SortedTableSortedColumn API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),(0,n.yg)("a",u({parentName:"td"},{href:"/api/rimbu/table/Table/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"Table<R,C,V>"))),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/Table/interface"}),"Table API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),(0,n.yg)("a",u({parentName:"td"},{href:"/api/rimbu/table/VariantTable/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"VariantTable<R,C,V>"))),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"A type-variant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/VariantTable/interface"}),"VariantTable API documentation"))))),(0,n.yg)("h2",u({},{id:"namespaces"}),"Namespaces"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",u({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),(0,n.yg)("a",u({parentName:"td"},{href:"/api/rimbu/table/HashTableHashColumn/namespace"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashTableHashColumn"))),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/hash-row/HashTableHashColumn/interface"}),"HashTableHashColumn API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),(0,n.yg)("a",u({parentName:"td"},{href:"/api/rimbu/table/HashTableSortedColumn/namespace"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashTableSortedColumn"))),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/hash-row/HashTableSortedColumn/interface"}),"HashTableSortedColumn API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),(0,n.yg)("a",u({parentName:"td"},{href:"/api/rimbu/table/SortedTableHashColumn/namespace"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedTableHashColumn"))),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/sorted-row/SortedTableHashColumn/interface"}),"SortedTableHashColumn API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),(0,n.yg)("a",u({parentName:"td"},{href:"/api/rimbu/table/SortedTableSortedColumn/namespace"}),(0,n.yg)("inlineCode",{parentName:"a"},"SortedTableSortedColumn"))),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/sorted-row/SortedTableSortedColumn/interface"}),"SortedTableSortedColumn API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),(0,n.yg)("a",u({parentName:"td"},{href:"/api/rimbu/table/Table/namespace"}),(0,n.yg)("inlineCode",{parentName:"a"},"Table"))),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/Table/interface"}),"Table API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",u({parentName:"tr"},{align:null}),(0,n.yg)("a",u({parentName:"td"},{href:"/api/rimbu/table/VariantTable/namespace"}),(0,n.yg)("inlineCode",{parentName:"a"},"VariantTable"))),(0,n.yg)("td",u({parentName:"tr"},{align:null}),"A type-variant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/VariantTable/interface"}),"VariantTable API documentation"))))))}v.isMDXComponent=!0}}]);