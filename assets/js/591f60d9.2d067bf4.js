"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[24015],{15680:(e,n,a)=>{a.d(n,{xA:()=>g,yg:()=>s});var t=a(96540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function y(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=t.createContext({}),m=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},g=function(e){var n=m(e.components);return t.createElement(p.Provider,{value:n},e.children)},o="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,g=y(e,["components","mdxType","originalType","parentName"]),o=m(a),u=r,s=o["".concat(p,".").concat(u)]||o[u]||d[u]||l;return a?t.createElement(s,i(i({ref:n},g),{},{components:a})):t.createElement(s,i({ref:n},g))}));function s(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var y={};for(var p in n)hasOwnProperty.call(n,p)&&(y[p]=n[p]);y.originalType=e,y[o]="string"==typeof e?e:r,i[1]=y;for(var m=2;m<l;m++)i[m]=a[m];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},65352:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>b,contentTitle:()=>N,default:()=>v,frontMatter:()=>s,metadata:()=>c,toc:()=>h});var t=a(15680),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,y=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,g=(e,n,a)=>n in e?r(e,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[n]=a,o=(e,n)=>{for(var a in n||(n={}))p.call(n,a)&&g(e,a,n[a]);if(y)for(var a of y(n))m.call(n,a)&&g(e,a,n[a]);return e},d=(e,n)=>l(e,i(n)),u=(e,n)=>{var a={};for(var t in e)p.call(e,t)&&n.indexOf(t)<0&&(a[t]=e[t]);if(null!=e&&y)for(var t of y(e))n.indexOf(t)<0&&m.call(e,t)&&(a[t]=e[t]);return a};const s={title:"AsyncStream (namespace)",slug:"/rimbu/stream/async/AsyncStream/namespace"},N="namespace AsyncStream",c={unversionedId:"rimbu_stream/async/AsyncStream/index",id:"rimbu_stream/async/AsyncStream/index",title:"AsyncStream (namespace)",description:"A possibly infinite asynchronous sequence of elements of type T. See the Stream documentation and the AsyncStream API documentation",source:"@site/api/rimbu_stream/async/AsyncStream/index.mdx",sourceDirName:"rimbu_stream/async/AsyncStream",slug:"/rimbu/stream/async/AsyncStream/namespace",permalink:"/api/rimbu/stream/async/AsyncStream/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"AsyncStream (namespace)",slug:"/rimbu/stream/async/AsyncStream/namespace"},sidebar:"defaultSidebar",previous:{title:"AsyncReducer",permalink:"/api/rimbu/stream/async/AsyncReducer/type"},next:{title:"AsyncStream.NonEmpty<T>",permalink:"/api/rimbu/stream/async/AsyncStream/NonEmpty/interface"}},b={},h=[{value:"Interfaces",id:"interfaces",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>always</code>",id:"always",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>empty</code>",id:"empty",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"<code>flatten</code>",id:"flatten",level:3},{value:"Definitions",id:"definitions",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>from</code>",id:"from",level:3},{value:"Definitions",id:"definitions-1",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"<code>fromResource</code>",id:"fromresource",level:3},{value:"Definitions",id:"definitions-2",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"<code>of</code>",id:"of",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"<code>unfold</code>",id:"unfold",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"<code>unzip</code>",id:"unzip",level:3},{value:"Definitions",id:"definitions-3",level:4},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"<code>zip</code>",id:"zip",level:3},{value:"Definitions",id:"definitions-4",level:4},{value:"Type parameters",id:"type-parameters-8",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"<code>zipAll</code>",id:"zipall",level:3},{value:"Definitions",id:"definitions-5",level:4},{value:"Type parameters",id:"type-parameters-9",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"<code>zipAllWith</code>",id:"zipallwith",level:3},{value:"Definitions",id:"definitions-6",level:4},{value:"Type parameters",id:"type-parameters-10",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"<code>zipWith</code>",id:"zipwith",level:3},{value:"Definitions",id:"definitions-7",level:4},{value:"Type parameters",id:"type-parameters-11",level:4},{value:"Parameters",id:"parameters-10",level:4}],f={toc:h},C="wrapper";function v(e){var n=e,{components:a}=n,r=u(n,["components"]);return(0,t.yg)(C,d(o(o({},f),r),{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h1",o({},{id:"namespace-asyncstream"}),(0,t.yg)("inlineCode",{parentName:"h1"},"namespace AsyncStream")),(0,t.yg)("p",null,"A possibly infinite asynchronous sequence of elements of type T. See the ",(0,t.yg)("a",o({parentName:"p"},{href:"https://rimbu.org/docs/collections/stream"}),"Stream documentation")," and the ",(0,t.yg)("a",o({parentName:"p"},{href:"https://rimbu.org/api/rimbu/stream/async/AsyncStream/interface"}),"AsyncStream API documentation")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Companion interface:")," ",(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncStream/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncStream<T>"))),(0,t.yg)("h2",o({},{id:"interfaces"}),"Interfaces"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/stream/async/AsyncStream/NonEmpty/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncStream.NonEmpty<T>"))),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"A non-empty and possibly infinite asynchronous sequence of elements of type T. See the ",(0,t.yg)("a",o({parentName:"td"},{href:"https://rimbu.org/docs/collections/stream"}),"Stream documentation")," and the ",(0,t.yg)("a",o({parentName:"td"},{href:"https://rimbu.org/api/rimbu/stream/async/AsyncStream/interface"}),"AsyncStream API documentation"))))),(0,t.yg)("h2",o({},{id:"static-methods"}),"Static Methods"),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"always"}),(0,t.yg)("inlineCode",{parentName:"h3"},"always")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"always<T>(value: AsyncOptLazy<T>): AsyncStream.NonEmpty<T>;"))),(0,t.yg)("h4",o({},{id:"type-parameters"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"T"),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"value")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"AsyncOptLazy<T>")),(0,t.yg)("td",o({parentName:"tr"},{align:null})))))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"empty"}),(0,t.yg)("inlineCode",{parentName:"h3"},"empty")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-1"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"empty<T>(): AsyncStream<T>;"))),(0,t.yg)("h4",o({},{id:"type-parameters-1"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"T"),(0,t.yg)("td",o({parentName:"tr"},{align:null})))))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"flatten"}),(0,t.yg)("inlineCode",{parentName:"h3"},"flatten")),(0,t.yg)("p",null,"Returns an AsyncStream concatenating the given ",(0,t.yg)("inlineCode",{parentName:"p"},"source")," AsyncStreamSource containing StreamSources.")),(0,t.yg)("h4",o({},{id:"definitions"}),"Definitions"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"flatten<T extends AsyncStreamSource.NonEmpty<S>, S>(source: AsyncStreamSource.NonEmpty<T>): AsyncStream.NonEmpty<S>;"))),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"flatten<T extends AsyncStreamSource<S>, S>(source: AsyncStreamSource<T>): AsyncStream<S>;"))),(0,t.yg)("h4",o({},{id:"type-parameters-2"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Constraints"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"T"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"AsyncStreamSource.NonEmpty<S>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"S"),(0,t.yg)("td",o({parentName:"tr"},{align:null})),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-1"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"source")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"AsyncStreamSource.NonEmpty<T>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"a StreamSource containing nested StreamSources")))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.flatten(AsyncStream.of([[1, 2], [3], [], [4]])).toArray()  // => [1, 2, 3, 4]\nawait AsyncStream.flatten(AsyncStream.of(['ma', 'r', '', 'mot')).toArray()   // => ['m', 'a', 'r', 'm', 'o', 't']\n")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"from"}),(0,t.yg)("inlineCode",{parentName:"h3"},"from")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definitions-1"}),"Definitions"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"from<T>(...sources: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,t.yg)("inlineCode",{parentName:"p"},"<AsyncStreamSource.NonEmpty<T>>): AsyncStream.NonEmpty<T>;"))),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"from<T>(...sources: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,t.yg)("inlineCode",{parentName:"p"},"<AsyncStreamSource<T>>): AsyncStream<T>;"))),(0,t.yg)("h4",o({},{id:"type-parameters-3"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"T"),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-2"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"sources")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,t.yg)("inlineCode",{parentName:"td"},"<AsyncStreamSource.NonEmpty<T>>")),(0,t.yg)("td",o({parentName:"tr"},{align:null})))))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"fromresource"}),(0,t.yg)("inlineCode",{parentName:"h3"},"fromResource")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definitions-2"}),"Definitions"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"fromResource<T, R>(options: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"open: () => "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<R>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"createSource: (resource: R) => AsyncStreamSource.NonEmpty<T>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"close?: (resource: R) => "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<void>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): AsyncStream.NonEmpty<T>;"))),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"fromResource<T, R>(options: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"open: () => "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<R>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"createSource: (resource: R) => "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<AsyncStreamSource<T>>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"close?: (resource: R) => "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<void>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): AsyncStream<T>;"))),(0,t.yg)("h4",o({},{id:"type-parameters-4"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"T"),(0,t.yg)("td",o({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"R"),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-3"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"options")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"{"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"open: () => "),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"td"},"<R>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"createSource: (resource: R) => AsyncStreamSource.NonEmpty<T>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"close?: (resource: R) => "),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"td"},"<void>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"}")),(0,t.yg)("td",o({parentName:"tr"},{align:null})))))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"of"}),(0,t.yg)("inlineCode",{parentName:"h3"},"of")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-2"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"of<T>(...values: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,t.yg)("inlineCode",{parentName:"p"},"<AsyncOptLazy<T>>): AsyncStream.NonEmpty<T>;"))),(0,t.yg)("h4",o({},{id:"type-parameters-5"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"T"),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-4"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"values")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,t.yg)("inlineCode",{parentName:"td"},"<AsyncOptLazy<T>>")),(0,t.yg)("td",o({parentName:"tr"},{align:null})))))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"unfold"}),(0,t.yg)("inlineCode",{parentName:"h3"},"unfold")),(0,t.yg)("p",null,"Returns a possibly infinite Stream starting with given ",(0,t.yg)("inlineCode",{parentName:"p"},"init")," value, followed by applying given ",(0,t.yg)("inlineCode",{parentName:"p"},"next")," function to the previous value.")),(0,t.yg)("h4",o({},{id:"definition-3"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"unfold<T>(init: T, next: (current: T, index: number, stop: Token) => "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<T "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," Token>): AsyncStream.NonEmpty<T>;"))),(0,t.yg)("h4",o({},{id:"type-parameters-6"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"T"),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-5"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"init")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"T")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"an initial value")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"next")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"(current: T, index: number, stop: Token) => "),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"td"},"<T "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"td"}," Token>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"a function taking the last value, its index, and a stop token, and returning a new value or a stop token")))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"Stream.unfold(2, v => v * v).take(4).toArray()   // => [2, 4, 16, 256]\n")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"unzip"}),(0,t.yg)("inlineCode",{parentName:"h3"},"unzip")),(0,t.yg)("p",null,"Returns an array containing an AsyncStream for each tuple element resulting from given ",(0,t.yg)("inlineCode",{parentName:"p"},"source")," AsyncStream.")),(0,t.yg)("h4",o({},{id:"definitions-3"}),"Definitions"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"unzip<T extends readonly unknown[] & {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"length: L;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}, L extends number>(source: AsyncStream.NonEmpty<T>, options: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"length: L;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof T]: AsyncStream.NonEmpty<T[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"};"))),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"unzip<T extends readonly unknown[] & {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"length: L;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}, L extends number>(source: AsyncStream<T>, options: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"length: L;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof T]: AsyncStream<T[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"};"))),(0,t.yg)("h4",o({},{id:"type-parameters-7"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Constraints"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"T"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"readonly unknown[] & {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"length: L;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"}")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"L"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"number")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-6"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"source")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"AsyncStream.NonEmpty<T>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"a Stream containing tuple elements")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"options")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"{"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"length: L;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"}")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const [a, b] = AsyncStream.unzip(AsyncStream.of([[1, 'a'], [2, 'b']]), 2)\nawait a.toArray()   // => [1, 2]\nawait b.toArray()   // => ['a', 'b']\n")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"zip"}),(0,t.yg)("inlineCode",{parentName:"h3"},"zip")),(0,t.yg)("p",null,"Returns an AsyncStream with tuples containing each successive value from the given ",(0,t.yg)("inlineCode",{parentName:"p"},"sources"),".")),(0,t.yg)("h4",o({},{id:"definitions-4"}),"Definitions"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"zip<I extends readonly [unknown, ...unknown[]]>(...sources: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof I]: AsyncStreamSource.NonEmpty<I[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"} & unknown[]): AsyncStream.NonEmpty<I>;"))),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"zip<I extends readonly [unknown, ...unknown[]]>(...sources: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof I]: AsyncStreamSource<I[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"} & unknown[]): AsyncStream<I>;"))),(0,t.yg)("h4",o({},{id:"type-parameters-8"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Constraints"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"I"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"readonly [unknown, ...unknown[]]")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-7"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"sources")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"{"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"[K in keyof I]: AsyncStreamSource.NonEmpty<I[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"} & unknown[]")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the input async stream sources")))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.zip(\n[1, 2, 3],\n[4, 5],\n['a', 'b', 'c']\n).toArray()\n// => [[1, 4, 'a'], [2, 5, 'b']]\n"))),(0,t.yg)("admonition",o({},{title:"note",type:"note"}),(0,t.yg)("p",{parentName:"admonition"},"ends the AsyncStream when any of the given streams ends"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"zipall"}),(0,t.yg)("inlineCode",{parentName:"h3"},"zipAll")),(0,t.yg)("p",null,"Returns an AsyncStream with tuples containing each successive value from the given ",(0,t.yg)("inlineCode",{parentName:"p"},"sources"),", adding given ",(0,t.yg)("inlineCode",{parentName:"p"},"fillValue")," to any streams that end before all streams have ended.")),(0,t.yg)("h4",o({},{id:"definitions-5"}),"Definitions"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"zipAll<I extends readonly [unknown, ...unknown[]], O>(fillValue: AsyncOptLazy<O>, ...sources: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof I]: AsyncStreamSource.NonEmpty<I[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"} & unknown[]): AsyncStream.NonEmpty<{"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof I]: I[K] "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}>;"))),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"zipAll<I extends readonly [unknown, ...unknown[]], O>(fillValue: AsyncOptLazy<O>, ...sources: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof I]: AsyncStreamSource<I[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"} & unknown[]): AsyncStream<{"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof I]: I[K] "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}>;"))),(0,t.yg)("h4",o({},{id:"type-parameters-9"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Constraints"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"I"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"readonly [unknown, ...unknown[]]")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"O"),(0,t.yg)("td",o({parentName:"tr"},{align:null})),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-8"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"fillValue")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"AsyncOptLazy<O>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the ",(0,t.yg)("inlineCode",{parentName:"td"},"AsyncOptLazy")," value to add to streams that end early")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"sources")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"{"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"[K in keyof I]: AsyncStreamSource.NonEmpty<I[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"} & unknown[]")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the input async stream sources")))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.zipAll(\n0,\n[1, 2, 3],\n[4, 5],\n['a', 'b', 'c']\n).toArray()\n// => [[1, 4, 'a'], [2, 5, 'b'], [3, 0, 'c']]\n"))),(0,t.yg)("admonition",o({},{title:"note",type:"note"}),(0,t.yg)("p",{parentName:"admonition"},"ends the AsyncStream when any of the given streams ends"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"zipallwith"}),(0,t.yg)("inlineCode",{parentName:"h3"},"zipAllWith")),(0,t.yg)("p",null,"Returns an AsyncStream with the result of applying given ",(0,t.yg)("inlineCode",{parentName:"p"},"zipFun")," to each successive value resulting from the given ",(0,t.yg)("inlineCode",{parentName:"p"},"sources"),", adding given ",(0,t.yg)("inlineCode",{parentName:"p"},"fillValue")," to any Streams that end before all streams have ended.")),(0,t.yg)("h4",o({},{id:"definitions-6"}),"Definitions"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"zipAllWith<I extends readonly [unknown, ...unknown[]]>(...sources: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof I]: AsyncStreamSource.NonEmpty<I[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"} & unknown[]): <O, R>(fillValue: AsyncOptLazy<O>, zipFun: (...values: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof I]: I[K] "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}) => "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<R>) => AsyncStream.NonEmpty<R>;"))),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"zipAllWith<I extends readonly [unknown, ...unknown[]]>(...sources: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof I]: AsyncStreamSource<I[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"} & unknown[]): <O, R>(fillValue: AsyncOptLazy<O>, zipFun: (...values: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof I]: I[K] "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}) => "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<R>) => AsyncStream<R>;"))),(0,t.yg)("h4",o({},{id:"type-parameters-10"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Constraints"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"I"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"readonly [unknown, ...unknown[]]")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-9"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"sources")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"{"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"[K in keyof I]: AsyncStreamSource.NonEmpty<I[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"} & unknown[]")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the input async stream sources")))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.zipAllWith(\n[1, 2],\n[3, 4, 5],\n[6, 7]\n)(\nasync () => 0,\nasync (a, b, c) => a + b + c,\n).toArray()\n// => [10, 13, 5]\n")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"zipwith"}),(0,t.yg)("inlineCode",{parentName:"h3"},"zipWith")),(0,t.yg)("p",null,"Returns an AsyncStream with the result of applying given ",(0,t.yg)("inlineCode",{parentName:"p"},"zipFun")," to each successive value resulting from the given ",(0,t.yg)("inlineCode",{parentName:"p"},"sources"),".")),(0,t.yg)("h4",o({},{id:"definitions-7"}),"Definitions"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"zipWith<I extends readonly [unknown, ...unknown[]]>(...sources: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof I]: AsyncStreamSource.NonEmpty<I[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"} & unknown[]): <R>(zipFun: (...values: I) => R) => AsyncStream.NonEmpty<R>;"))),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"zipWith<I extends readonly [unknown, ...unknown[]]>(...sources: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[K in keyof I]: AsyncStreamSource<I[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"} & unknown[]): <R>(zipFun: (...values: I) => R) => AsyncStream<R>;"))),(0,t.yg)("h4",o({},{id:"type-parameters-11"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Constraints"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"I"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"readonly [unknown, ...unknown[]]")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-10"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"sources")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"{"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"[K in keyof I]: AsyncStreamSource.NonEmpty<I[K]>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"} & unknown[]")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the input async stream sources")))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.zipWith(\n[1, 2],\n[3, 4, 5],\n[true, false]\n)(\nasync (a, b, c) => c ? a + b : a - b,\n).toArray()\n// => [4, -2]\n"))),(0,t.yg)("admonition",o({},{title:"note",type:"note"}),(0,t.yg)("p",{parentName:"admonition"},"ends the AsyncStream when any of the given streams ends"))))}v.isMDXComponent=!0}}]);