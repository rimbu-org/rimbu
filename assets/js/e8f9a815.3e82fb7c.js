"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[66294],{15680:(e,n,r)=>{r.d(n,{xA:()=>l,yg:()=>b});var t=r(96540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),y=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},l=function(e){var n=y(e.components);return t.createElement(c.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=y(r),m=a,b=s["".concat(c,".").concat(m)]||s[m]||u[m]||i;return r?t.createElement(b,o(o({ref:n},l),{},{components:r})):t.createElement(b,o({ref:n},l))}));function b(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p[s]="string"==typeof e?e:a,o[1]=p;for(var y=2;y<i;y++)o[y]=r[y];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},49827:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>g,contentTitle:()=>d,default:()=>v,frontMatter:()=>b,metadata:()=>f,toc:()=>h});var t=r(15680),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable,l=(e,n,r)=>n in e?a(e,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[n]=r,s=(e,n)=>{for(var r in n||(n={}))c.call(n,r)&&l(e,r,n[r]);if(p)for(var r of p(n))y.call(n,r)&&l(e,r,n[r]);return e},u=(e,n)=>i(e,o(n)),m=(e,n)=>{var r={};for(var t in e)c.call(e,t)&&n.indexOf(t)<0&&(r[t]=e[t]);if(null!=e&&p)for(var t of p(e))n.indexOf(t)<0&&y.call(e,t)&&(r[t]=e[t]);return r};const b={title:"CombineShape",slug:"/rimbu/stream/async/AsyncReducer/CombineShape/type"},d="type CombineShape<T>",f={unversionedId:"rimbu_stream/async/AsyncReducer/CombineShape.type",id:"rimbu_stream/async/AsyncReducer/CombineShape.type",title:"CombineShape",description:"Type defining the allowed shape of async reducer combinations.",source:"@site/api/rimbu_stream/async/AsyncReducer/CombineShape.type.mdx",sourceDirName:"rimbu_stream/async/AsyncReducer",slug:"/rimbu/stream/async/AsyncReducer/CombineShape/type",permalink:"/api/rimbu/stream/async/AsyncReducer/CombineShape/type",draft:!1,tags:[],version:"current",frontMatter:{title:"CombineShape",slug:"/rimbu/stream/async/AsyncReducer/CombineShape/type"},sidebar:"defaultSidebar",previous:{title:"CombineResult",permalink:"/api/rimbu/stream/async/AsyncReducer/CombineResult/type"},next:{title:"AsyncReducer.Impl<I,O,S>",permalink:"/api/rimbu/stream/async/AsyncReducer/Impl/interface"}},g={},h=[{value:"Definition",id:"definition",level:2}],O={toc:h},C="wrapper";function v(e){var n=e,{components:r}=n,a=m(n,["components"]);return(0,t.yg)(C,u(s(s({},O),a),{components:r,mdxType:"MDXLayout"}),(0,t.yg)("h1",s({},{id:"type-combineshapet"}),(0,t.yg)("inlineCode",{parentName:"h1"},"type CombineShape<T>")),(0,t.yg)("p",null,"Type defining the allowed shape of async reducer combinations."),(0,t.yg)("h2",s({},{id:"definition"}),"Definition"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"type CombineShape<T> = "),(0,t.yg)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, any> "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," "),(0,t.yg)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/CombineShape/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncReducer.CombineShape")),(0,t.yg)("inlineCode",{parentName:"p"},"<T>[] "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"[key: string]: "),(0,t.yg)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/CombineShape/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncReducer.CombineShape")),(0,t.yg)("inlineCode",{parentName:"p"},"<T>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"};")))}v.isMDXComponent=!0}}]);