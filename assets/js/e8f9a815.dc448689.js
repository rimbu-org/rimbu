"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[92652],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>b});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=l(t),y=a,b=m["".concat(c,".").concat(y)]||m[y]||s[y]||i;return t?r.createElement(b,o(o({ref:n},u),{},{components:t})):r.createElement(b,o({ref:n},u))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=y;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p[m]="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},46464:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>v,frontMatter:()=>b,metadata:()=>f,toc:()=>O});var r=t(3905),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,u=(e,n,t)=>n in e?a(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,m=(e,n)=>{for(var t in n||(n={}))c.call(n,t)&&u(e,t,n[t]);if(p)for(var t of p(n))l.call(n,t)&&u(e,t,n[t]);return e},s=(e,n)=>i(e,o(n)),y=(e,n)=>{var t={};for(var r in e)c.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&p)for(var r of p(e))n.indexOf(r)<0&&l.call(e,r)&&(t[r]=e[r]);return t};const b={title:"CombineShape",slug:"/rimbu/stream/async/AsyncReducer/CombineShape/type"},d="type CombineShape<T>",f={unversionedId:"rimbu_stream/async/AsyncReducer/CombineShape.type",id:"rimbu_stream/async/AsyncReducer/CombineShape.type",title:"CombineShape",description:"Type defining the allowed shape of async reducer combinations.",source:"@site/api/rimbu_stream/async/AsyncReducer/CombineShape.type.mdx",sourceDirName:"rimbu_stream/async/AsyncReducer",slug:"/rimbu/stream/async/AsyncReducer/CombineShape/type",permalink:"/api/rimbu/stream/async/AsyncReducer/CombineShape/type",draft:!1,tags:[],version:"current",frontMatter:{title:"CombineShape",slug:"/rimbu/stream/async/AsyncReducer/CombineShape/type"},sidebar:"defaultSidebar",previous:{title:"CombineResult",permalink:"/api/rimbu/stream/async/AsyncReducer/CombineResult/type"},next:{title:"AsyncReducer.Impl<I,O,S>",permalink:"/api/rimbu/stream/async/AsyncReducer/Impl/interface"}},h={},O=[{value:"Definition",id:"definition",level:2}],C={toc:O},k="wrapper";function v(e){var n=e,{components:t}=n,a=y(n,["components"]);return(0,r.kt)(k,s(m(m({},C),a),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",m({},{id:"type-combineshapet"}),(0,r.kt)("inlineCode",{parentName:"h1"},"type CombineShape<T>")),(0,r.kt)("p",null,"Type defining the allowed shape of async reducer combinations."),(0,r.kt)("h2",m({},{id:"definition"}),"Definition"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"type CombineShape<T> = "),(0,r.kt)("a",m({parentName:"p"},{href:"/api/rimbu/stream/AsyncReducer/Accept/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,r.kt)("inlineCode",{parentName:"p"},"<T, any> "),(0,r.kt)("code",null,"|"),(0,r.kt)("inlineCode",{parentName:"p"}," "),(0,r.kt)("a",m({parentName:"p"},{href:"/api/rimbu/stream/AsyncReducer/CombineShape/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncReducer.CombineShape")),(0,r.kt)("inlineCode",{parentName:"p"},"<T>[] "),(0,r.kt)("code",null,"|"),(0,r.kt)("inlineCode",{parentName:"p"}," {"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"[key: string]: "),(0,r.kt)("a",m({parentName:"p"},{href:"/api/rimbu/stream/AsyncReducer/CombineShape/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncReducer.CombineShape")),(0,r.kt)("inlineCode",{parentName:"p"},"<T>;"),(0,r.kt)("br",null),"\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"};")))}v.isMDXComponent=!0}}]);