"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[43841],{15680:(e,a,n)=>{n.d(a,{xA:()=>m,yg:()=>s});var t=n(96540);function l(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){l(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function p(e,a){if(null==e)return{};var n,t,l=function(e,a){if(null==e)return{};var n,t,l={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var y=t.createContext({}),d=function(e){var a=t.useContext(y),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},m=function(e){var a=d(e.components);return t.createElement(y.Provider,{value:a},e.children)},o="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,l=e.mdxType,i=e.originalType,y=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),o=d(n),u=l,s=o["".concat(y,".").concat(u)]||o[u]||g[u]||i;return n?t.createElement(s,r(r({ref:a},m),{},{components:n})):t.createElement(s,r({ref:a},m))}));function s(e,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=u;var p={};for(var y in a)hasOwnProperty.call(a,y)&&(p[y]=a[y]);p.originalType=e,p[o]="string"==typeof e?e:l,r[1]=p;for(var d=2;d<i;d++)r[d]=n[d];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},82509:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>N,default:()=>C,frontMatter:()=>s,metadata:()=>h,toc:()=>v});var t=n(15680),l=Object.defineProperty,i=Object.defineProperties,r=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,y=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,m=(e,a,n)=>a in e?l(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,o=(e,a)=>{for(var n in a||(a={}))y.call(a,n)&&m(e,n,a[n]);if(p)for(var n of p(a))d.call(a,n)&&m(e,n,a[n]);return e},g=(e,a)=>i(e,r(a)),u=(e,a)=>{var n={};for(var t in e)y.call(e,t)&&a.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&p)for(var t of p(e))a.indexOf(t)<0&&d.call(e,t)&&(n[t]=e[t]);return n};const s={title:"BiMultiMapBuilder<K,V,Tp,TpG>",slug:"/rimbu/bimultimap/custom/BiMultiMapBuilder/class"},N="class BiMultiMapBuilder<K,V,Tp,TpG>",h={unversionedId:"rimbu_bimultimap/custom/BiMultiMapBuilder.class",id:"rimbu_bimultimap/custom/BiMultiMapBuilder.class",title:"BiMultiMapBuilder<K,V,Tp,TpG>",description:"undocumented",source:"@site/api/rimbu_bimultimap/custom/BiMultiMapBuilder.class.mdx",sourceDirName:"rimbu_bimultimap/custom",slug:"/rimbu/bimultimap/custom/BiMultiMapBuilder/class",permalink:"/api/rimbu/bimultimap/custom/BiMultiMapBuilder/class",draft:!1,tags:[],version:"current",frontMatter:{title:"BiMultiMapBuilder<K,V,Tp,TpG>",slug:"/rimbu/bimultimap/custom/BiMultiMapBuilder/class"},sidebar:"defaultSidebar",previous:{title:"BiMultiMapBase<K,V,Tp>",permalink:"/api/rimbu/bimultimap/custom/BiMultiMapBase/interface"},next:{title:"BiMultiMapContext<UK,UV,N,Tp>",permalink:"/api/rimbu/bimultimap/custom/BiMultiMapContext/class"}},c={},v=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>_keyValueMultiMap</code>",id:"_keyvaluemultimap",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>_lock</code>",id:"_lock",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>_valueKeyMultiMap</code>",id:"_valuekeymultimap",level:3},{value:"Definition",id:"definition-2",level:4},{value:"<code>add</code>",id:"add",level:3},{value:"Definition",id:"definition-3",level:4},{value:"<code>addEntries</code>",id:"addentries",level:3},{value:"Definition",id:"definition-4",level:4},{value:"<code>build</code>",id:"build",level:3},{value:"Definition",id:"definition-5",level:4},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition-6",level:4},{value:"<code>forEach</code>",id:"foreach",level:3},{value:"Definition",id:"definition-7",level:4},{value:"<code>getKeys</code>",id:"getkeys",level:3},{value:"Definition",id:"definition-8",level:4},{value:"<code>getValues</code>",id:"getvalues",level:3},{value:"Definition",id:"definition-9",level:4},{value:"<code>hasEntry</code>",id:"hasentry",level:3},{value:"Definition",id:"definition-10",level:4},{value:"<code>hasKey</code>",id:"haskey",level:3},{value:"Definition",id:"definition-11",level:4},{value:"<code>hasValue</code>",id:"hasvalue",level:3},{value:"Definition",id:"definition-12",level:4},{value:"<code>isEmpty</code>",id:"isempty",level:3},{value:"Definition",id:"definition-13",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>keyValueMultiMap</code>",id:"keyvaluemultimap",level:3},{value:"Definition",id:"definition-14",level:4},{value:"<code>removeEntries</code>",id:"removeentries",level:3},{value:"Definition",id:"definition-15",level:4},{value:"<code>removeEntry</code>",id:"removeentry",level:3},{value:"Definition",id:"definition-16",level:4},{value:"<code>removeKey</code>",id:"removekey",level:3},{value:"Definition",id:"definition-17",level:4},{value:"<code>removeKeys</code>",id:"removekeys",level:3},{value:"Definition",id:"definition-18",level:4},{value:"<code>removeValue</code>",id:"removevalue",level:3},{value:"Definition",id:"definition-19",level:4},{value:"<code>removeValues</code>",id:"removevalues",level:3},{value:"Definition",id:"definition-20",level:4},{value:"<code>setKeys</code>",id:"setkeys",level:3},{value:"Definition",id:"definition-21",level:4},{value:"<code>setValues</code>",id:"setvalues",level:3},{value:"Definition",id:"definition-22",level:4},{value:"<code>size</code>",id:"size",level:3},{value:"Definition",id:"definition-23",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>source</code>",id:"source",level:3},{value:"Definition",id:"definition-24",level:4},{value:"<code>valueKeyMultiMap</code>",id:"valuekeymultimap",level:3},{value:"Definition",id:"definition-25",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>add</code>",id:"add-1",level:3},{value:"Definition",id:"definition-26",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>addEntries</code>",id:"addentries-1",level:3},{value:"Definition",id:"definition-27",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>build</code>",id:"build-1",level:3},{value:"Definition",id:"definition-28",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"<code>checkLock</code>",id:"checklock",level:3},{value:"Definition",id:"definition-29",level:4},{value:"<code>forEach</code>",id:"foreach-1",level:3},{value:"Definition",id:"definition-30",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"<code>getKeys</code>",id:"getkeys-1",level:3},{value:"Definition",id:"definition-31",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"<code>getValues</code>",id:"getvalues-1",level:3},{value:"Definition",id:"definition-32",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"<code>hasEntry</code>",id:"hasentry-1",level:3},{value:"Definition",id:"definition-33",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"<code>hasKey</code>",id:"haskey-1",level:3},{value:"Definition",id:"definition-34",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Overrides",id:"overrides-9",level:4},{value:"<code>hasValue</code>",id:"hasvalue-1",level:3},{value:"Definition",id:"definition-35",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Overrides",id:"overrides-10",level:4},{value:"<code>removeEntries</code>",id:"removeentries-1",level:3},{value:"Definition",id:"definition-36",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Overrides",id:"overrides-11",level:4},{value:"<code>removeEntry</code>",id:"removeentry-1",level:3},{value:"Definition",id:"definition-37",level:4},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Overrides",id:"overrides-12",level:4},{value:"<code>removeKey</code>",id:"removekey-1",level:3},{value:"Definition",id:"definition-38",level:4},{value:"Type parameters",id:"type-parameters-8",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Overrides",id:"overrides-13",level:4},{value:"<code>removeKeys</code>",id:"removekeys-1",level:3},{value:"Definition",id:"definition-39",level:4},{value:"Type parameters",id:"type-parameters-9",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Overrides",id:"overrides-14",level:4},{value:"<code>removeValue</code>",id:"removevalue-1",level:3},{value:"Definition",id:"definition-40",level:4},{value:"Type parameters",id:"type-parameters-10",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Overrides",id:"overrides-15",level:4},{value:"<code>removeValues</code>",id:"removevalues-1",level:3},{value:"Definition",id:"definition-41",level:4},{value:"Type parameters",id:"type-parameters-11",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Overrides",id:"overrides-16",level:4},{value:"<code>setKeys</code>",id:"setkeys-1",level:3},{value:"Definition",id:"definition-42",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Overrides",id:"overrides-17",level:4},{value:"<code>setValues</code>",id:"setvalues-1",level:3},{value:"Definition",id:"definition-43",level:4},{value:"Parameters",id:"parameters-15",level:4},{value:"Overrides",id:"overrides-18",level:4}],f={toc:v},b="wrapper";function C(e){var a=e,{components:n}=a,l=u(a,["components"]);return(0,t.yg)(b,g(o(o({},f),l),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",o({},{id:"class-bimultimapbuilderkvtptpg"}),(0,t.yg)("inlineCode",{parentName:"h1"},"class BiMultiMapBuilder<K,V,Tp,TpG>")),(0,t.yg)("p",null,"undocumented"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Implements:")," ",(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"BiMultiMapBase.Builder<K,V,Tp>"))),(0,t.yg)("h2",o({},{id:"type-parameters"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Constraints"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"K"),(0,t.yg)("td",o({parentName:"tr"},{align:null})),(0,t.yg)("td",o({parentName:"tr"},{align:null})),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"undocumented")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"V"),(0,t.yg)("td",o({parentName:"tr"},{align:null})),(0,t.yg)("td",o({parentName:"tr"},{align:null})),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"undocumented")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"Tp"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/bimultimap/custom/ContextTypesImpl/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"ContextTypesImpl"))),(0,t.yg)("td",o({parentName:"tr"},{align:null})),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"undocumented")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"TpG"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"td"},"<Tp, K, V>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"td"},"<Tp, K, V>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"undocumented")))),(0,t.yg)("h2",o({},{id:"properties"}),"Properties"),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"_keyvaluemultimap"}),(0,t.yg)("inlineCode",{parentName:"h3"},"_keyValueMultiMap")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"_keyValueMultiMap?: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/multimap/MultiMap/Builder/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"MultiMap.Builder")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, V>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"_lock"}),(0,t.yg)("inlineCode",{parentName:"h3"},"_lock")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-1"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"_lock: number;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"_valuekeymultimap"}),(0,t.yg)("inlineCode",{parentName:"h3"},"_valueKeyMultiMap")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-2"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"_valueKeyMultiMap?: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/multimap/MultiMap/Builder/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"MultiMap.Builder")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, K>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"add"}),(0,t.yg)("inlineCode",{parentName:"h3"},"add")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-3"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"add: (key: K, value: V) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"addentries"}),(0,t.yg)("inlineCode",{parentName:"h3"},"addEntries")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-4"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"addEntries: (entries: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<readonly [K, V]>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"build"}),(0,t.yg)("inlineCode",{parentName:"h3"},"build")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-5"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"build: () => "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"p"},'<Tp, K, V>["normal"];')))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"context"}),(0,t.yg)("inlineCode",{parentName:"h3"},"context")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-6"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly context: TpG['context'];")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"foreach"}),(0,t.yg)("inlineCode",{parentName:"h3"},"forEach")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-7"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"forEach: (f: (entry: [K, V], index: number, halt: () => void) => void, options?: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"state?: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"TraverseState")),(0,t.yg)("inlineCode",{parentName:"p"},";"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}) => void;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"getkeys"}),(0,t.yg)("inlineCode",{parentName:"h3"},"getKeys")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-8"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"getKeys: <UV = V>(value: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>) => "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"p"},'<Tp, K, V>["valueMultiMapValues"];')))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"getvalues"}),(0,t.yg)("inlineCode",{parentName:"h3"},"getValues")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-9"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"getValues: <UK = K>(key: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>) => "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"p"},'<Tp, K, V>["keyMultiMapValues"];')))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"hasentry"}),(0,t.yg)("inlineCode",{parentName:"h3"},"hasEntry")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-10"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"hasEntry: <UK = K, UV = V>(key: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>, value: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"haskey"}),(0,t.yg)("inlineCode",{parentName:"h3"},"hasKey")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-11"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"hasKey: <UK = K>(key: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"hasvalue"}),(0,t.yg)("inlineCode",{parentName:"h3"},"hasValue")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-12"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"hasValue: <UV = V>(value: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"isempty"}),(0,t.yg)("inlineCode",{parentName:"h3"},"isEmpty")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-13"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get isEmpty(): boolean;"))),(0,t.yg)("h4",o({},{id:"overrides"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#isEmpty"}),"Builder.isEmpty"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"keyvaluemultimap"}),(0,t.yg)("inlineCode",{parentName:"h3"},"keyValueMultiMap")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-14"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get keyValueMultiMap(): "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/multimap/MultiMap/Builder/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"MultiMap.Builder")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, V>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"removeentries"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeEntries")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-15"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeEntries: <UK = K, UV = V>(entries: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<["),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>, "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>]>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"removeentry"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeEntry")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-16"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeEntry: <UK = K, UV = V>(key: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>, value: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"removekey"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeKey")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-17"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeKey: <UK = K>(key: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"removekeys"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeKeys")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-18"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeKeys: <UK = K>(keys: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<"),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"removevalue"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeValue")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-19"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeValue: <UV = V>(value: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"removevalues"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeValues")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-20"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeValues: <UV = V>(values: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<"),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"setkeys"}),(0,t.yg)("inlineCode",{parentName:"h3"},"setKeys")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-21"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"setKeys: (value: V, keys: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<K>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"setvalues"}),(0,t.yg)("inlineCode",{parentName:"h3"},"setValues")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-22"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"setValues: (key: K, values: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<V>) => boolean;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"size"}),(0,t.yg)("inlineCode",{parentName:"h3"},"size")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-23"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get size(): number;"))),(0,t.yg)("h4",o({},{id:"overrides-1"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#size"}),"Builder.size"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"source"}),(0,t.yg)("inlineCode",{parentName:"h3"},"source")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-24"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},'source?: TpG["nonEmpty"] '),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"valuekeymultimap"}),(0,t.yg)("inlineCode",{parentName:"h3"},"valueKeyMultiMap")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-25"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"get valueKeyMultiMap(): "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/multimap/MultiMap/Builder/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"MultiMap.Builder")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, K>;")))),(0,t.yg)("h2",o({},{id:"methods"}),"Methods"),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"add-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"add")),(0,t.yg)("p",null,"Associates given ",(0,t.yg)("inlineCode",{parentName:"p"},"key")," with given ",(0,t.yg)("inlineCode",{parentName:"p"},"value")," in the builder.")),(0,t.yg)("h4",o({},{id:"definition-26"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"add(key: K, value: V): boolean;"))),(0,t.yg)("h4",o({},{id:"parameters"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the entry key")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"value")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"V")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.set(1, 'a')   // => false\nm.set(1, 'b')   // => true\n"))),(0,t.yg)("h4",o({},{id:"overrides-2"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#add"}),"Builder.add"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"addentries-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"addEntries")),(0,t.yg)("p",null,"Adds given ",(0,t.yg)("inlineCode",{parentName:"p"},"entries")," to the builder.")),(0,t.yg)("h4",o({},{id:"definition-27"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"addEntries(entries: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<readonly [K, V]>): boolean;"))),(0,t.yg)("h4",o({},{id:"parameters-1"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"entries")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"td"},"<readonly [K, V]>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.addEntries([1, 'a'], [3, 'c']])   // => true\nm.addEntries([])                    // => false\n"))),(0,t.yg)("h4",o({},{id:"overrides-3"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#addEntries"}),"Builder.addEntries"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"build-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"build")),(0,t.yg)("p",null,"Returns an immutable collection instance containing the entries in this builder.")),(0,t.yg)("h4",o({},{id:"definition-28"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"build(): "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"p"},"<Tp, K, V>['normal'];"))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nconst m2: HashBiMultiMap<number, string> = m.build()\n"))),(0,t.yg)("h4",o({},{id:"overrides-4"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#build"}),"Builder.build"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"checklock"}),(0,t.yg)("inlineCode",{parentName:"h3"},"checkLock")),(0,t.yg)("p",null,"undocumented")),(0,t.yg)("h4",o({},{id:"definition-29"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"checkLock(): void;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"foreach-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"forEach")),(0,t.yg)("p",null,"Performs given function ",(0,t.yg)("inlineCode",{parentName:"p"},"f")," for each entry of the builder.")),(0,t.yg)("h4",o({},{id:"definition-30"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"forEach(f: (entry: [K, V], index: number, halt: () => void) => void, options?: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"state?: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"TraverseState")),(0,t.yg)("inlineCode",{parentName:"p"},";"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}): void;"))),(0,t.yg)("h4",o({},{id:"parameters-2"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"f")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"(entry: [K, V], index: number, halt: () => void) => void")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the function to perform for each element, receiving:",(0,t.yg)("br",null)," - ",(0,t.yg)("inlineCode",{parentName:"td"},"entry"),": the next key-value entry",(0,t.yg)("br",null)," - ",(0,t.yg)("inlineCode",{parentName:"td"},"index"),": the index of the element",(0,t.yg)("br",null)," - ",(0,t.yg)("inlineCode",{parentName:"td"},"halt"),": a function that, if called, ensures that no new elements are passed")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"options")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"{"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"state?: "),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"TraverseState")),(0,t.yg)("inlineCode",{parentName:"td"},";"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"td"},"}")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",o({},{title:"throws",type:"note"}),(0,t.yg)("p",{parentName:"admonition"},"RibuError.ModifiedBuilderWhileLoopingOverItError if the builder is modified while looping over it")),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"HashBiMultiMap.of([1, 'a'], [2, 'b'], [3, 'c']).toBuilder().forEach((entry, i, halt) => {\nconsole.log([entry[1], entry[0]]);\nif (i >= 1) halt();\n})\n// => logs ['a', 1]  ['b', 2]\n"))),(0,t.yg)("admonition",o({},{title:"note",type:"note"}),(0,t.yg)("p",{parentName:"admonition"},"O(N)")),(0,t.yg)("h4",o({},{id:"overrides-5"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#forEach"}),"Builder.forEach"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"getkeys-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"getKeys")),(0,t.yg)("p",null,"Returns a collection representing the keys currently associated with given ",(0,t.yg)("inlineCode",{parentName:"p"},"value"),".")),(0,t.yg)("h4",o({},{id:"definition-31"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"getKeys<UV = V>(value: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>): "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"p"},"<Tp, K, V>['valueMultiMapValues'];"))),(0,t.yg)("h4",o({},{id:"type-parameters-1"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UV"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"V")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-3"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"value")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<V, UV>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the value for which to find the keys")))),(0,t.yg)("admonition",o({},{title:"note",type:"note"}),(0,t.yg)("p",{parentName:"admonition"},"since it is unsafe to return the internal builder object, the result colleciton will be build upon each call to getKeys.")),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.getKeys('a').toArray()   // => [1]\nm.getKeys('z').toArray()   // => []\n"))),(0,t.yg)("h4",o({},{id:"overrides-6"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#getKeys"}),"Builder.getKeys"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"getvalues-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"getValues")),(0,t.yg)("p",null,"Returns a collection representing the values currently associated with given ",(0,t.yg)("inlineCode",{parentName:"p"},"key"),".")),(0,t.yg)("h4",o({},{id:"definition-32"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"getValues<UK = K>(key: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>): "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,t.yg)("inlineCode",{parentName:"p"},"<Tp, K, V>['keyMultiMapValues'];"))),(0,t.yg)("h4",o({},{id:"type-parameters-2"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-4"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the key for which to find the values")))),(0,t.yg)("admonition",o({},{title:"note",type:"note"}),(0,t.yg)("p",{parentName:"admonition"},"since it is unsafe to return the internal builder object, the result colleciton will be build upon each call to getValues.")),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.getValues(1).toArray()   // => ['a']\nm.getValues(3).toArray()   // => []\n"))),(0,t.yg)("h4",o({},{id:"overrides-7"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#getValues"}),"Builder.getValues"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"hasentry-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"hasEntry")),(0,t.yg)("p",null,"Returns true if the given ",(0,t.yg)("inlineCode",{parentName:"p"},"key")," ",(0,t.yg)("inlineCode",{parentName:"p"},"value")," entry is present in the builder.")),(0,t.yg)("h4",o({},{id:"definition-33"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"hasEntry<UK = K, UV = V>(key: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>, value: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>): boolean;"))),(0,t.yg)("h4",o({},{id:"type-parameters-3"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UV"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"V")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-5"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the key to look for")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"value")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<V, UV>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the value to look for")))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.hasEntry(1, 'a')    // => true\nm.hasEntry(1, 'z')    // => false\n"))),(0,t.yg)("h4",o({},{id:"overrides-8"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#hasEntry"}),"Builder.hasEntry"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"haskey-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"hasKey")),(0,t.yg)("p",null,"Returns true if the given ",(0,t.yg)("inlineCode",{parentName:"p"},"key")," is present in the builder.")),(0,t.yg)("h4",o({},{id:"definition-34"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"hasKey<UK = K>(key: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>): boolean;"))),(0,t.yg)("h4",o({},{id:"type-parameters-4"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-6"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the key to look for")))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.hasKey(2)    // => true\nm.hasKey(3)    // => false\n"))),(0,t.yg)("h4",o({},{id:"overrides-9"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#hasKey"}),"Builder.hasKey"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"hasvalue-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"hasValue")),(0,t.yg)("p",null,"Returns true if the given ",(0,t.yg)("inlineCode",{parentName:"p"},"value")," is present in the builder.")),(0,t.yg)("h4",o({},{id:"definition-35"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"hasValue<UV = V>(value: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>): boolean;"))),(0,t.yg)("h4",o({},{id:"type-parameters-5"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UV"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"V")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-7"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"value")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<V, UV>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the value to look for")))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.hasValue('a')    // => true\nm.hasValue('z')    // => false\n"))),(0,t.yg)("h4",o({},{id:"overrides-10"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#hasValue"}),"Builder.hasValue"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"removeentries-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeEntries")),(0,t.yg)("p",null,"Removes the entries in the given ",(0,t.yg)("inlineCode",{parentName:"p"},"entries")," ",(0,t.yg)("inlineCode",{parentName:"p"},"StreamSource")," from the builder.")),(0,t.yg)("h4",o({},{id:"definition-36"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeEntries<UK = K, UV = V>(entries: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<["),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>, "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>]>): boolean;"))),(0,t.yg)("h4",o({},{id:"type-parameters-6"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UV"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"V")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-8"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"entries")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"td"},"<["),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<K, UK>, "),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<V, UV>]>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeEntries([[1, 'c'], ['2', 'a']])  // => false\nm.removeEntries([[1, 'a']])              // => true\n"))),(0,t.yg)("h4",o({},{id:"overrides-11"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#removeEntries"}),"Builder.removeEntries"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"removeentry-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeEntry")),(0,t.yg)("p",null,"Removes the entry of given ",(0,t.yg)("inlineCode",{parentName:"p"},"key")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"value")," from the builder.")),(0,t.yg)("h4",o({},{id:"definition-37"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeEntry<UK = K, UV = V>(key: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>, value: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>): boolean;"))),(0,t.yg)("h4",o({},{id:"type-parameters-7"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UV"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"V")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-9"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the entry key")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"value")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<V, UV>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeEntry(1, 'c')   // => false\nm.removeEntry(1, 'a')   // => true\n"))),(0,t.yg)("h4",o({},{id:"overrides-12"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#removeEntry"}),"Builder.removeEntry"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"removekey-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeKey")),(0,t.yg)("p",null,"Removes the entries related to given ",(0,t.yg)("inlineCode",{parentName:"p"},"key")," from the builder.")),(0,t.yg)("h4",o({},{id:"definition-38"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeKey<UK = K>(key: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>): boolean;"))),(0,t.yg)("h4",o({},{id:"type-parameters-8"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-10"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeKey(2)        // => true\nm.removeKey(3)        // => false\n"))),(0,t.yg)("h4",o({},{id:"overrides-13"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#removeKey"}),"Builder.removeKey"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"removekeys-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeKeys")),(0,t.yg)("p",null,"Removes the entries related to the given ",(0,t.yg)("inlineCode",{parentName:"p"},"keys")," ",(0,t.yg)("inlineCode",{parentName:"p"},"StreamSource")," from the builder.")),(0,t.yg)("h4",o({},{id:"definition-39"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeKeys<UK = K>(keys: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<"),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<K, UK>>): boolean;"))),(0,t.yg)("h4",o({},{id:"type-parameters-9"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-11"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"keys")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"td"},"<"),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<K, UK>>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeKeys([3, 4, 5])  // => false\nm.removeKeys([1, 10])    // => true\n"))),(0,t.yg)("h4",o({},{id:"overrides-14"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#removeKeys"}),"Builder.removeKeys"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"removevalue-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeValue")),(0,t.yg)("p",null,"Removes the entries related to given ",(0,t.yg)("inlineCode",{parentName:"p"},"value")," from the builder.")),(0,t.yg)("h4",o({},{id:"definition-40"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeValue<UV = V>(value: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>): boolean;"))),(0,t.yg)("h4",o({},{id:"type-parameters-10"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UV"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"V")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-12"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"value")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<V, UV>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeValue('b')        // => true\nm.removeValue('c')        // => false\n"))),(0,t.yg)("h4",o({},{id:"overrides-15"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#removeValue"}),"Builder.removeValue"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"removevalues-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"removeValues")),(0,t.yg)("p",null,"Removes the entries related to the given ",(0,t.yg)("inlineCode",{parentName:"p"},"values")," ",(0,t.yg)("inlineCode",{parentName:"p"},"StreamSource")," from the builder.")),(0,t.yg)("h4",o({},{id:"definition-41"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"removeValues<UV = V>(values: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<"),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"p"},"<V, UV>>): boolean;"))),(0,t.yg)("h4",o({},{id:"type-parameters-11"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),"UV"),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"V")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("h4",o({},{id:"parameters-13"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"values")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"td"},"<"),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,t.yg)("inlineCode",{parentName:"td"},"<V, UV>>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}))))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeValues(['c', 'd', 'e'])  // => false\nm.removeValues(['a', 'e'])       // => true\n"))),(0,t.yg)("h4",o({},{id:"overrides-16"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#removeValues"}),"Builder.removeValues"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"setkeys-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"setKeys")),(0,t.yg)("p",null,"Sets the keys associated to given ",(0,t.yg)("inlineCode",{parentName:"p"},"value")," to the keys in the given ",(0,t.yg)("inlineCode",{parentName:"p"},"keys")," StreamSource.")),(0,t.yg)("h4",o({},{id:"definition-42"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"setKeys(value: V, keys: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<K>): boolean;"))),(0,t.yg)("h4",o({},{id:"parameters-14"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"value")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"V")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the value to which to associate the keys")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"keys")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"td"},"<K>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"a StreamSource containing the keys to associate to the value")))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.setKeys('a', [3, 4]).getKeys('a').toArray() // => [3, 4]\n"))),(0,t.yg)("h4",o({},{id:"overrides-17"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#setKeys"}),"Builder.setKeys"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",o({},{id:"setvalues-1"}),(0,t.yg)("inlineCode",{parentName:"h3"},"setValues")),(0,t.yg)("p",null,"Sets the values associated to given ",(0,t.yg)("inlineCode",{parentName:"p"},"key")," to the values in the given ",(0,t.yg)("inlineCode",{parentName:"p"},"values")," StreamSource.")),(0,t.yg)("h4",o({},{id:"definition-43"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"setValues(key: K, values: "),(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"p"},"<V>): boolean;"))),(0,t.yg)("h4",o({},{id:"parameters-15"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"key")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"K")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"the key to which to associate the values")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"values")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),(0,t.yg)("a",o({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,t.yg)("inlineCode",{parentName:"td"},"<V>")),(0,t.yg)("td",o({parentName:"tr"},{align:null}),"a StreamSource containing the values to associate to the key")))),(0,t.yg)("admonition",o({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashBiMultiMap.of([1, 'a'], [2, 'b']).toBuilder()\nm.setValues(1, ['b', 'c']).getValues(1).toArray() // => ['b', 'c']\n"))),(0,t.yg)("h4",o({},{id:"overrides-18"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",o({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface#setValues"}),"Builder.setValues"))))}C.isMDXComponent=!0}}]);