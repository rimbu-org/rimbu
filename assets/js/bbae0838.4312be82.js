"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[80880],{15680:(e,n,t)=>{t.d(n,{xA:()=>y,yg:()=>m});var r=t(96540);function p(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){p(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,p=function(e,n){if(null==e)return{};var t,r,p={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(p[t]=e[t]);return p}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(p[t]=e[t])}return p}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},y=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,p=e.mdxType,a=e.originalType,s=e.parentName,y=o(e,["components","mdxType","originalType","parentName"]),u=l(t),d=p,m=u["".concat(s,".").concat(d)]||u[d]||b[d]||a;return t?r.createElement(m,i(i({ref:n},y),{},{components:t})):r.createElement(m,i({ref:n},y))}));function m(e,n){var t=arguments,p=n&&n.mdxType;if("string"==typeof e||p){var a=t.length,i=new Array(a);i[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:p,i[1]=o;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},87:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>f,default:()=>N,frontMatter:()=>m,metadata:()=>c,toc:()=>P});var r=t(15680),p=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,y=(e,n,t)=>n in e?p(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,u=(e,n)=>{for(var t in n||(n={}))s.call(n,t)&&y(e,t,n[t]);if(o)for(var t of o(n))l.call(n,t)&&y(e,t,n[t]);return e},b=(e,n)=>a(e,i(n)),d=(e,n)=>{var t={};for(var r in e)s.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&o)for(var r of o(e))n.indexOf(r)<0&&l.call(e,r)&&(t[r]=e[r]);return t};const m={title:"Tokenize",slug:"/rimbu/deep/Path/Result/Tokenize/type"},f="type Tokenize<P,Token,Res>",c={unversionedId:"rimbu_deep/Path/Result/Tokenize.type",id:"rimbu_deep/Path/Result/Tokenize.type",title:"Tokenize",description:"Converts a path string into separate tokens in a string array.",source:"@site/api/rimbu_deep/Path/Result/Tokenize.type.mdx",sourceDirName:"rimbu_deep/Path/Result",slug:"/rimbu/deep/Path/Result/Tokenize/type",permalink:"/api/rimbu/deep/Path/Result/Tokenize/type",draft:!1,tags:[],version:"current",frontMatter:{title:"Tokenize",slug:"/rimbu/deep/Path/Result/Tokenize/type"},sidebar:"defaultSidebar",previous:{title:"Part",permalink:"/api/rimbu/deep/Path/Result/Part/type"},next:{title:"Result",permalink:"/api/rimbu/deep/Path/Result/type"}},g={},P=[{value:"Definition",id:"definition",level:2}],h={toc:P},k="wrapper";function N(e){var n=e,{components:t}=n,p=d(n,["components"]);return(0,r.yg)(k,b(u(u({},h),p),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",u({},{id:"type-tokenizeptokenres"}),(0,r.yg)("inlineCode",{parentName:"h1"},"type Tokenize<P,Token,Res>")),(0,r.yg)("p",null,"Converts a path string into separate tokens in a string array."),(0,r.yg)("h2",u({},{id:"definition"}),"Definition"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"type Tokenize<P extends string, Token extends string = '', Res extends string[] = []> = P extends '' ? "),(0,r.yg)("a",u({parentName:"p"},{href:"/api/rimbu/deep/Path/Internal/AppendIfNotEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"Path.Internal.AppendIfNotEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<Res, Token> : P extends `[${infer Index}]${infer Rest}` ? "),(0,r.yg)("a",u({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/Tokenize/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"Tokenize")),(0,r.yg)("inlineCode",{parentName:"p"},"<Rest, '', ["),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"..."),(0,r.yg)("a",u({parentName:"p"},{href:"/api/rimbu/deep/Path/Internal/AppendIfNotEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"Path.Internal.AppendIfNotEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<Res, Token>,`<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`Index`<br/>&nbsp;&nbsp;&nbsp;&nbsp;`]> : P extends `?.${infer Rest}` ? "),(0,r.yg)("a",u({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/Tokenize/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"Tokenize")),(0,r.yg)("inlineCode",{parentName:"p"},"<Rest, '', ["),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"..."),(0,r.yg)("a",u({parentName:"p"},{href:"/api/rimbu/deep/Path/Internal/AppendIfNotEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"Path.Internal.AppendIfNotEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<Res, Token>,`<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`'?.'`<br/>&nbsp;&nbsp;&nbsp;&nbsp;`]> : P extends `.${infer Rest}` ? "),(0,r.yg)("a",u({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/Tokenize/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"Tokenize")),(0,r.yg)("inlineCode",{parentName:"p"},"<Rest, '', ["),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"..."),(0,r.yg)("a",u({parentName:"p"},{href:"/api/rimbu/deep/Path/Internal/AppendIfNotEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"Path.Internal.AppendIfNotEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<Res, Token>,`<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`'.'`<br/>&nbsp;&nbsp;&nbsp;&nbsp;`]> : P extends `${infer First}${infer Rest}` ? "),(0,r.yg)("a",u({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/Tokenize/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"Tokenize")),"`",(0,r.yg)("inlineCode",{parentName:"p"},"<Rest, "),"${Token}${First}",(0,r.yg)("inlineCode",{parentName:"p"},", Res> : never```;")))}N.isMDXComponent=!0}}]);