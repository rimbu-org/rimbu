"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[88321],{15680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>s});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),c=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},b="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),b=c(a),y=n,s=b["".concat(p,".").concat(y)]||b[y]||m[y]||l;return a?r.createElement(s,o(o({ref:t},u),{},{components:a})):r.createElement(s,o({ref:t},u))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=y;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[b]="string"==typeof e?e:n,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}y.displayName="MDXCreateElement"},98611:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>f,default:()=>O,frontMatter:()=>s,metadata:()=>g,toc:()=>v});var r=a(15680),n=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,b=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&u(e,a,t[a]);if(i)for(var a of i(t))c.call(t,a)&&u(e,a,t[a]);return e},m=(e,t)=>l(e,o(t)),y=(e,t)=>{var a={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&i)for(var r of i(e))t.indexOf(r)<0&&c.call(e,r)&&(a[r]=e[r]);return a};const s={title:"Table<R,C,V>",slug:"/rimbu/table/Table/interface"},f="interface Table<R,C,V>",g={unversionedId:"rimbu_table/Table.interface",id:"rimbu_table/Table.interface",title:"Table<R,C,V>",description:"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the Table API documentation",source:"@site/api/rimbu_table/Table.interface.mdx",sourceDirName:"rimbu_table",slug:"/rimbu/table/Table/interface",permalink:"/api/rimbu/table/Table/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"Table<R,C,V>",slug:"/rimbu/table/Table/interface"},sidebar:"defaultSidebar",previous:{title:"Table.Types",permalink:"/api/rimbu/table/Table/Types/interface"},next:{title:"VariantTable (namespace)",permalink:"/api/rimbu/table/VariantTable/namespace"}},d={},v=[{value:"Type parameters",id:"type-parameters",level:2}],T={toc:v},h="wrapper";function O(e){var t=e,{components:a}=t,n=y(t,["components"]);return(0,r.yg)(h,m(b(b({},T),n),{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",b({},{id:"interface-tablercv"}),(0,r.yg)("inlineCode",{parentName:"h1"},"interface Table<R,C,V>")),(0,r.yg)("p",null,"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,r.yg)("a",b({parentName:"p"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,r.yg)("a",b({parentName:"p"},{href:"https://rimbu.org/api/rimbu/table/Table/interface"}),"Table API documentation")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Companion namespace:")," ",(0,r.yg)("a",b({parentName:"p"},{href:"/api/rimbu/table/Table/namespace"}),"Table")),(0,r.yg)("h2",b({},{id:"type-parameters"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",b({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",b({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",b({parentName:"tr"},{align:null}),"R"),(0,r.yg)("td",b({parentName:"tr"},{align:null}),"the row key type")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",b({parentName:"tr"},{align:null}),"C"),(0,r.yg)("td",b({parentName:"tr"},{align:null}),"the column key type")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",b({parentName:"tr"},{align:null}),"V"),(0,r.yg)("td",b({parentName:"tr"},{align:null}),"the value type")))),(0,r.yg)("admonition",b({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",b({parentName:"pre"},{className:"language-ts"}),"const t1 = HashTableHashColumn.empty<number, string, boolean>()\nconst t2 = HashTableHashColumn.of([1, 'a', true], [2, 'a', false])\n"))))}O.isMDXComponent=!0}}]);