"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[16285],{15680:(e,t,r)=>{r.d(t,{xA:()=>s,yg:()=>f});var a=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),c=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=n,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||i;return r?a.createElement(f,o(o({ref:t},s),{},{components:r})):a.createElement(f,o({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[p]="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},79488:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>b,contentTitle:()=>h,default:()=>S,frontMatter:()=>f,metadata:()=>y,toc:()=>g});var a=r(15680),n=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,s=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))u.call(t,r)&&s(e,r,t[r]);if(l)for(var r of l(t))c.call(t,r)&&s(e,r,t[r]);return e},d=(e,t)=>i(e,o(t)),m=(e,t)=>{var r={};for(var a in e)u.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&l)for(var a of l(e))t.indexOf(a)<0&&c.call(e,a)&&(r[a]=e[a]);return r};const f={title:"HashSet.Builder<T>",slug:"/rimbu/hashed/HashSet/Builder/interface"},h="interface HashSet.Builder<T>",y={unversionedId:"rimbu_hashed/HashSet/Builder.interface",id:"rimbu_hashed/HashSet/Builder.interface",title:"HashSet.Builder<T>",description:"A mutable HashSet builder used to efficiently create new immutable instances. See the Set documentation and the HashSet.Builder API documentation",source:"@site/api/rimbu_hashed/HashSet/Builder.interface.mdx",sourceDirName:"rimbu_hashed/HashSet",slug:"/rimbu/hashed/HashSet/Builder/interface",permalink:"/api/rimbu/hashed/HashSet/Builder/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"HashSet.Builder<T>",slug:"/rimbu/hashed/HashSet/Builder/interface"},sidebar:"defaultSidebar",previous:{title:"HashSet (namespace)",permalink:"/api/rimbu/hashed/HashSet/namespace"},next:{title:"HashSet.Context<UT>",permalink:"/api/rimbu/hashed/HashSet/Context/interface"}},b={},g=[{value:"Type parameters",id:"type-parameters",level:2}],O={toc:g},v="wrapper";function S(e){var t=e,{components:r}=t,n=m(t,["components"]);return(0,a.yg)(v,d(p(p({},O),n),{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",p({},{id:"interface-hashsetbuildert"}),(0,a.yg)("inlineCode",{parentName:"h1"},"interface HashSet.Builder<T>")),(0,a.yg)("p",null,"A mutable ",(0,a.yg)("inlineCode",{parentName:"p"},"HashSet")," builder used to efficiently create new immutable instances. See the ",(0,a.yg)("a",p({parentName:"p"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,a.yg)("a",p({parentName:"p"},{href:"https://rimbu.org/api/rimbu/hashed/HashSet/Builder/interface"}),"HashSet.Builder API documentation")),(0,a.yg)("h2",p({},{id:"type-parameters"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",p({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",p({parentName:"tr"},{align:null}),"T"),(0,a.yg)("td",p({parentName:"tr"},{align:null}),"the value type")))))}S.isMDXComponent=!0}}]);