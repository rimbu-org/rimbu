"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[37060],{15680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>d});var a=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),c=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},b="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),b=c(r),y=n,d=b["".concat(u,".").concat(y)]||b[y]||m[y]||l;return r?a.createElement(d,i(i({ref:t},p),{},{components:r})):a.createElement(d,i({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=y;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[b]="string"==typeof e?e:n,i[1]=o;for(var c=2;c<l;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}y.displayName="MDXCreateElement"},98471:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>g,contentTitle:()=>f,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>O});var a=r(15680),n=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,b=(e,t)=>{for(var r in t||(t={}))u.call(t,r)&&p(e,r,t[r]);if(o)for(var r of o(t))c.call(t,r)&&p(e,r,t[r]);return e},m=(e,t)=>l(e,i(t)),y=(e,t)=>{var r={};for(var a in e)u.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&c.call(e,a)&&(r[a]=e[a]);return r};const d={title:"Table.Builder<R,C,V>",slug:"/rimbu/table/Table/Builder/interface"},f="interface Table.Builder<R,C,V>",s={unversionedId:"rimbu_table/Table/Builder.interface",id:"rimbu_table/Table/Builder.interface",title:"Table.Builder<R,C,V>",description:"A mutable Table builder used to efficiently create new immutable instances. See the Table documentation and the Table.Builder API documentation",source:"@site/api/rimbu_table/Table/Builder.interface.mdx",sourceDirName:"rimbu_table/Table",slug:"/rimbu/table/Table/Builder/interface",permalink:"/api/rimbu/table/Table/Builder/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"Table.Builder<R,C,V>",slug:"/rimbu/table/Table/Builder/interface"},sidebar:"defaultSidebar",previous:{title:"Table (namespace)",permalink:"/api/rimbu/table/Table/namespace"},next:{title:"Table.Context<UR,UC>",permalink:"/api/rimbu/table/Table/Context/interface"}},g={},O=[{value:"Type parameters",id:"type-parameters",level:2}],v={toc:O},T="wrapper";function h(e){var t=e,{components:r}=t,n=y(t,["components"]);return(0,a.yg)(T,m(b(b({},v),n),{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",b({},{id:"interface-tablebuilderrcv"}),(0,a.yg)("inlineCode",{parentName:"h1"},"interface Table.Builder<R,C,V>")),(0,a.yg)("p",null,"A mutable Table builder used to efficiently create new immutable instances. See the ",(0,a.yg)("a",b({parentName:"p"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,a.yg)("a",b({parentName:"p"},{href:"https://rimbu.org/api/rimbu/table/Table/Builder/interface"}),"Table.Builder API documentation")),(0,a.yg)("h2",b({},{id:"type-parameters"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",b({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",b({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",b({parentName:"tr"},{align:null}),"R"),(0,a.yg)("td",b({parentName:"tr"},{align:null}),"the row key type")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",b({parentName:"tr"},{align:null}),"C"),(0,a.yg)("td",b({parentName:"tr"},{align:null}),"the column key type")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",b({parentName:"tr"},{align:null}),"V"),(0,a.yg)("td",b({parentName:"tr"},{align:null}),"the value type")))))}h.isMDXComponent=!0}}]);