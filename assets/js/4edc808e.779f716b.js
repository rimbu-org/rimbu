"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[90308],{15680:(e,t,n)=>{n.d(t,{xA:()=>m,yg:()=>y});var a=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=c(n),d=i,y=p["".concat(s,".").concat(d)]||p[d]||u[d]||r;return n?a.createElement(y,l(l({ref:t},m),{},{components:n})):a.createElement(y,l({ref:t},m))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},65348:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>g,default:()=>O,frontMatter:()=>y,metadata:()=>f,toc:()=>h});var a=n(15680),i=Object.defineProperty,r=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&m(e,n,t[n]);if(o)for(var n of o(t))c.call(t,n)&&m(e,n,t[n]);return e},u=(e,t)=>r(e,l(t)),d=(e,t)=>{var n={};for(var a in e)s.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&c.call(e,a)&&(n[a]=e[a]);return n};const y={id:"main",sidebar_position:1,title:"Introduction",slug:"."},g="Welcome to Rimbu",f={unversionedId:"main",id:"main",title:"Introduction",description:"Rimbu is a TypeScript library focused on immutable, performant, and type-safe collections and other tools. Its main aim is to enable developers to create safe and efficient programs without getting in the way. Inspired by various collection libraries such as Java's Guava, Java 8 Collection, and Scala's collection library, Rimbu brings together the best ideas from these sources and the Scala community.",source:"@site/docs/index.mdx",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,editUrl:"https://github.com/rimbu-org/rimbu/edit/master/website/docs/index.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"main",sidebar_position:1,title:"Introduction",slug:"."},sidebar:"sidebar",next:{title:"Getting Started",permalink:"/docs/getting-started"}},b={},h=[{value:"Library Contents",id:"library-contents",level:2},{value:"Collections",id:"collections",level:3},{value:"Immutable Object Utilities",id:"immutable-object-utilities",level:3},{value:"Quick Overview of Features and Benefits",id:"quick-overview-of-features-and-benefits",level:2}],v={toc:h},N="wrapper";function O(e){var t=e,{components:n}=t,i=d(t,["components"]);return(0,a.yg)(N,u(p(p({},v),i),{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",p({},{id:"welcome-to-rimbu"}),"Welcome to Rimbu"),(0,a.yg)("p",null,"Rimbu is a TypeScript library focused on ",(0,a.yg)("strong",{parentName:"p"},"immutable, performant, and type-safe collections")," and other tools. Its main aim is to enable developers to create safe and efficient programs without getting in the way. Inspired by various collection libraries such as Java's Guava, Java 8 Collection, and Scala's collection library, Rimbu brings together the best ideas from these sources and the Scala community."),(0,a.yg)("h2",p({},{id:"library-contents"}),"Library Contents"),(0,a.yg)("h3",p({},{id:"collections"}),"Collections"),(0,a.yg)("p",null,"Rimbu's core package, ",(0,a.yg)("inlineCode",{parentName:"p"},"@rimbu/core"),", includes a wide range of commonly used collection types:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",p({parentName:"li"},{href:"docs/collections/list"}),(0,a.yg)("inlineCode",{parentName:"a"},"List")),": A block-based random-access structure similar to a ",(0,a.yg)("inlineCode",{parentName:"li"},"Vector"),"."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",p({parentName:"li"},{href:"docs/collections/map"}),"Maps"),": Includes ",(0,a.yg)("inlineCode",{parentName:"li"},"HashMap"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"SortedMap"),", and ",(0,a.yg)("inlineCode",{parentName:"li"},"OrderedMap"),"."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",p({parentName:"li"},{href:"docs/collections/set"}),"Sets"),": Includes ",(0,a.yg)("inlineCode",{parentName:"li"},"HashSet"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"SortedSet"),", and ",(0,a.yg)("inlineCode",{parentName:"li"},"OrderedSet"),"."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",p({parentName:"li"},{href:"docs/collections/stream"}),(0,a.yg)("inlineCode",{parentName:"a"},"Stream")),": Facilitates the creation and conversion of data streams.")),(0,a.yg)("p",null,"Additionally, Rimbu offers less commonly used but highly useful collections:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",p({parentName:"li"},{href:"docs/collections/multimap"}),(0,a.yg)("inlineCode",{parentName:"a"},"MultiMap"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",p({parentName:"li"},{href:"docs/collections/bimultimap"}),(0,a.yg)("inlineCode",{parentName:"a"},"BiMultiMap"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",p({parentName:"li"},{href:"docs/collections/multiset"}),(0,a.yg)("inlineCode",{parentName:"a"},"MultiSet"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",p({parentName:"li"},{href:"docs/collections/table"}),(0,a.yg)("inlineCode",{parentName:"a"},"Table"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",p({parentName:"li"},{href:"docs/collections/graph"}),(0,a.yg)("inlineCode",{parentName:"a"},"Graph")))),(0,a.yg)("h3",p({},{id:"immutable-object-utilities"}),"Immutable Object Utilities"),(0,a.yg)("p",null,"Beyond collections, Rimbu provides tools to treat plain JavaScript objects as immutable or deeply readonly objects. Key utilities include:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",p({parentName:"li"},{href:"docs/deep/patch"}),(0,a.yg)("inlineCode",{parentName:"a"},"Patch"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",p({parentName:"li"},{href:"docs/deep/match"}),(0,a.yg)("inlineCode",{parentName:"a"},"Match"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",p({parentName:"li"},{href:"docs/deep/path"}),(0,a.yg)("inlineCode",{parentName:"a"},"Path")))),(0,a.yg)("p",null,"All collections are designed to efficiently handle data sets ranging from small to very large (as long as they fit in memory). Persistence is maximized to ensure minimal memory usage. When modifying a collection instance, Rimbu makes every effort to keep references to unchanged elements the same."),(0,a.yg)("h2",p({},{id:"quick-overview-of-features-and-benefits"}),"Quick Overview of Features and Benefits"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Extensive Collection Types"),": Covers a wide range of problems, reducing the need for additional coding."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Advanced Typing"),": Leverages the TypeScript compiler for strict type inference with minimal explicit typing."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"No External Dependencies"),": Except for ",(0,a.yg)("inlineCode",{parentName:"li"},"ts-lib"),", ensuring lightweight and fast performance."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Customizable and Configurable"),": Provides sensible defaults with extensive customization options."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Efficient Immutable List"),": Features a unique and efficient immutable random-access List implementation.")))}O.isMDXComponent=!0}}]);