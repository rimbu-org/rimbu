"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[38452],{15680:(e,i,n)=>{n.d(i,{xA:()=>y,yg:()=>c});var t=n(96540);function l(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function a(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,t)}return n}function p(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?a(Object(n),!0).forEach((function(i){l(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function r(e,i){if(null==e)return{};var n,t,l=function(e,i){if(null==e)return{};var n,t,l={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],i.indexOf(n)>=0||(l[n]=e[n]);return l}(e,i);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=t.createContext({}),o=function(e){var i=t.useContext(u),n=i;return e&&(n="function"==typeof e?e(i):p(p({},i),e)),n},y=function(e){var i=o(e.components);return t.createElement(u.Provider,{value:i},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var i=e.children;return t.createElement(t.Fragment,{},i)}},g=t.forwardRef((function(e,i){var n=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,y=r(e,["components","mdxType","originalType","parentName"]),m=o(n),g=l,c=m["".concat(u,".").concat(g)]||m[g]||d[g]||a;return n?t.createElement(c,p(p({ref:i},y),{},{components:n})):t.createElement(c,p({ref:i},y))}));function c(e,i){var n=arguments,l=i&&i.mdxType;if("string"==typeof e||l){var a=n.length,p=new Array(a);p[0]=g;var r={};for(var u in i)hasOwnProperty.call(i,u)&&(r[u]=i[u]);r.originalType=e,r[m]="string"==typeof e?e:l,p[1]=r;for(var o=2;o<a;o++)p[o]=n[o];return t.createElement.apply(null,p)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},70938:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>h,contentTitle:()=>s,default:()=>N,frontMatter:()=>c,metadata:()=>f,toc:()=>v});var t=n(15680),l=Object.defineProperty,a=Object.defineProperties,p=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,y=(e,i,n)=>i in e?l(e,i,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[i]=n,m=(e,i)=>{for(var n in i||(i={}))u.call(i,n)&&y(e,n,i[n]);if(r)for(var n of r(i))o.call(i,n)&&y(e,n,i[n]);return e},d=(e,i)=>a(e,p(i)),g=(e,i)=>{var n={};for(var t in e)u.call(e,t)&&i.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&r)for(var t of r(e))i.indexOf(t)<0&&o.call(e,t)&&(n[t]=e[t]);return n};const c={title:"BiMultiMapBase.Types",slug:"/rimbu/bimultimap/custom/BiMultiMapBase/Types/interface"},s="interface BiMultiMapBase.Types",f={unversionedId:"rimbu_bimultimap/custom/BiMultiMapBase/Types.interface",id:"rimbu_bimultimap/custom/BiMultiMapBase/Types.interface",title:"BiMultiMapBase.Types",description:"Utility interface that provides higher-kinded types for this collection.",source:"@site/api/rimbu_bimultimap/custom/BiMultiMapBase/Types.interface.mdx",sourceDirName:"rimbu_bimultimap/custom/BiMultiMapBase",slug:"/rimbu/bimultimap/custom/BiMultiMapBase/Types/interface",permalink:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Types/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"BiMultiMapBase.Types",slug:"/rimbu/bimultimap/custom/BiMultiMapBase/Types/interface"},sidebar:"defaultSidebar",previous:{title:"BiMultiMapBase.NonEmpty<K,V,Tp>",permalink:"/api/rimbu/bimultimap/custom/BiMultiMapBase/NonEmpty/interface"},next:{title:"BiMultiMapBase<K,V,Tp>",permalink:"/api/rimbu/bimultimap/custom/BiMultiMapBase/interface"}},h={},v=[{value:"Properties",id:"properties",level:2},{value:"<code>_K</code>",id:"_k",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>_V</code>",id:"_v",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>builder</code>",id:"builder",level:3},{value:"Definition",id:"definition-2",level:4},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition-3",level:4},{value:"<code>keyMultiMapValues</code>",id:"keymultimapvalues",level:3},{value:"Definition",id:"definition-4",level:4},{value:"<code>keyValueMultiMap</code>",id:"keyvaluemultimap",level:3},{value:"Definition",id:"definition-5",level:4},{value:"<code>keyValueMultiMapContext</code>",id:"keyvaluemultimapcontext",level:3},{value:"Definition",id:"definition-6",level:4},{value:"<code>keyValueMultiMapNonEmpty</code>",id:"keyvaluemultimapnonempty",level:3},{value:"Definition",id:"definition-7",level:4},{value:"<code>nonEmpty</code>",id:"nonempty",level:3},{value:"Definition",id:"definition-8",level:4},{value:"<code>normal</code>",id:"normal",level:3},{value:"Definition",id:"definition-9",level:4},{value:"<code>valueKeyMultiMap</code>",id:"valuekeymultimap",level:3},{value:"Definition",id:"definition-10",level:4},{value:"<code>valueKeyMultiMapContext</code>",id:"valuekeymultimapcontext",level:3},{value:"Definition",id:"definition-11",level:4},{value:"<code>valueKeyMultiMapNonEmpty</code>",id:"valuekeymultimapnonempty",level:3},{value:"Definition",id:"definition-12",level:4},{value:"<code>valueMultiMapValues</code>",id:"valuemultimapvalues",level:3},{value:"Definition",id:"definition-13",level:4}],M={toc:v},b="wrapper";function N(e){var i=e,{components:n}=i,l=g(i,["components"]);return(0,t.yg)(b,d(m(m({},M),l),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",m({},{id:"interface-bimultimapbasetypes"}),(0,t.yg)("inlineCode",{parentName:"h1"},"interface BiMultiMapBase.Types")),(0,t.yg)("p",null,"Utility interface that provides higher-kinded types for this collection."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Extends:")," ",(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/KeyValue/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"KeyValue<K,V>"))),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Implemented by:")," ",(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/ContextTypesImpl/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"ContextTypesImpl"))),(0,t.yg)("h2",m({},{id:"properties"}),"Properties"),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"_k"}),(0,t.yg)("inlineCode",{parentName:"h3"},"_K")),(0,t.yg)("p",null,"The key type.")),(0,t.yg)("h4",m({},{id:"definition"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly _K: K;"))),(0,t.yg)("h4",m({},{id:"overrides"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/KeyValue/interface#_K"}),"KeyValue._K"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"_v"}),(0,t.yg)("inlineCode",{parentName:"h3"},"_V")),(0,t.yg)("p",null,"The value type.")),(0,t.yg)("h4",m({},{id:"definition-1"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly _V: V;"))),(0,t.yg)("h4",m({},{id:"overrides-1"}),"Overrides"),(0,t.yg)("p",null,(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/KeyValue/interface#_V"}),"KeyValue._V"))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"builder"}),(0,t.yg)("inlineCode",{parentName:"h3"},"builder")),(0,t.yg)("p",null,"The 'builder' collection type (higher-kinded type).")),(0,t.yg)("h4",m({},{id:"definition-2"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly builder: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"BiMultiMapBase.Builder")),(0,t.yg)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"context"}),(0,t.yg)("inlineCode",{parentName:"h3"},"context")),(0,t.yg)("p",null,"The collection context type (higher-kinded type).")),(0,t.yg)("h4",m({},{id:"definition-3"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly context: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Context/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"BiMultiMapBase.Context")),(0,t.yg)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"keymultimapvalues"}),(0,t.yg)("inlineCode",{parentName:"h3"},"keyMultiMapValues")),(0,t.yg)("p",null,"The value set collection type (higher-kinded type).")),(0,t.yg)("h4",m({},{id:"definition-4"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly keyMultiMapValues: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/RSet/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RSet")),(0,t.yg)("inlineCode",{parentName:"p"},"<this['_V']>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"keyvaluemultimap"}),(0,t.yg)("inlineCode",{parentName:"h3"},"keyValueMultiMap")),(0,t.yg)("p",null,"The key to value multimap type (higher-kinded type).")),(0,t.yg)("h4",m({},{id:"definition-5"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly keyValueMultiMap: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/multimap/MultiMap/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"MultiMap")),(0,t.yg)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"keyvaluemultimapcontext"}),(0,t.yg)("inlineCode",{parentName:"h3"},"keyValueMultiMapContext")),(0,t.yg)("p",null,"The key to value multimap context type (higher-kinded type).")),(0,t.yg)("h4",m({},{id:"definition-6"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly keyValueMultiMapContext: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/multimap/MultiMap/Context/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"MultiMap.Context")),(0,t.yg)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"keyvaluemultimapnonempty"}),(0,t.yg)("inlineCode",{parentName:"h3"},"keyValueMultiMapNonEmpty")),(0,t.yg)("p",null,"The non-empty key to value multimap type (higher-kinded type).")),(0,t.yg)("h4",m({},{id:"definition-7"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly keyValueMultiMapNonEmpty: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/multimap/MultiMap/NonEmpty/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"MultiMap.NonEmpty")),(0,t.yg)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"nonempty"}),(0,t.yg)("inlineCode",{parentName:"h3"},"nonEmpty")),(0,t.yg)("p",null,"The 'non-empty' collection type (higher-kinded type).")),(0,t.yg)("h4",m({},{id:"definition-8"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly nonEmpty: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/NonEmpty/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"BiMultiMapBase.NonEmpty")),(0,t.yg)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"normal"}),(0,t.yg)("inlineCode",{parentName:"h3"},"normal")),(0,t.yg)("p",null,"The 'normal' collection type (higher-kinded type).")),(0,t.yg)("h4",m({},{id:"definition-9"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly normal: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"BiMultiMapBase")),(0,t.yg)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"valuekeymultimap"}),(0,t.yg)("inlineCode",{parentName:"h3"},"valueKeyMultiMap")),(0,t.yg)("p",null,"The value to key multimap type (higher-kinded type).")),(0,t.yg)("h4",m({},{id:"definition-10"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly valueKeyMultiMap: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/multimap/MultiMap/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"MultiMap")),(0,t.yg)("inlineCode",{parentName:"p"},"<this['_V'], this['_K']>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"valuekeymultimapcontext"}),(0,t.yg)("inlineCode",{parentName:"h3"},"valueKeyMultiMapContext")),(0,t.yg)("p",null,"The value to key multimap context type (higher-kinded type).")),(0,t.yg)("h4",m({},{id:"definition-11"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly valueKeyMultiMapContext: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/multimap/MultiMap/Context/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"MultiMap.Context")),(0,t.yg)("inlineCode",{parentName:"p"},"<this['_V'], this['_K']>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"valuekeymultimapnonempty"}),(0,t.yg)("inlineCode",{parentName:"h3"},"valueKeyMultiMapNonEmpty")),(0,t.yg)("p",null,"The non-empty value to key multimap type (higher-kinded type).")),(0,t.yg)("h4",m({},{id:"definition-12"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly valueKeyMultiMapNonEmpty: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/multimap/MultiMap/NonEmpty/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"MultiMap.NonEmpty")),(0,t.yg)("inlineCode",{parentName:"p"},"<this['_V'], this['_K']>;")))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",m({},{id:"valuemultimapvalues"}),(0,t.yg)("inlineCode",{parentName:"h3"},"valueMultiMapValues")),(0,t.yg)("p",null,"The key set collection type (higher-kinded type).")),(0,t.yg)("h4",m({},{id:"definition-13"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"readonly valueMultiMapValues: "),(0,t.yg)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/RSet/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RSet")),(0,t.yg)("inlineCode",{parentName:"p"},"<this['_K']>;")))))}N.isMDXComponent=!0}}]);