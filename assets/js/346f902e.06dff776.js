"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[26962],{15680:(e,t,a)=>{a.d(t,{xA:()=>o,yg:()=>d});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=r.createContext({}),m=function(e){var t=r.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},o=function(e){var t=m(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),c=m(a),y=n,d=c["".concat(u,".").concat(y)]||c[y]||s[y]||i;return a?r.createElement(d,l(l({ref:t},o),{},{components:a})):r.createElement(d,l({ref:t},o))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=y;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p[c]="string"==typeof e?e:n,l[1]=p;for(var m=2;m<i;m++)l[m]=a[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}y.displayName="MDXCreateElement"},98806:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>b,contentTitle:()=>f,default:()=>v,frontMatter:()=>d,metadata:()=>g,toc:()=>M});var r=a(15680),n=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,o=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,c=(e,t)=>{for(var a in t||(t={}))u.call(t,a)&&o(e,a,t[a]);if(p)for(var a of p(t))m.call(t,a)&&o(e,a,t[a]);return e},s=(e,t)=>i(e,l(t)),y=(e,t)=>{var a={};for(var r in e)u.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&p)for(var r of p(e))t.indexOf(r)<0&&m.call(e,r)&&(a[r]=e[r]);return a};const d={title:"MultiMapBase (namespace)",slug:"/rimbu/multimap/custom/MultiMapBase/namespace"},f="namespace MultiMapBase",g={unversionedId:"rimbu_multimap/custom/MultiMapBase/index",id:"rimbu_multimap/custom/MultiMapBase/index",title:"MultiMapBase (namespace)",description:"undocumented",source:"@site/api/rimbu_multimap/custom/MultiMapBase/index.mdx",sourceDirName:"rimbu_multimap/custom/MultiMapBase",slug:"/rimbu/multimap/custom/MultiMapBase/namespace",permalink:"/api/rimbu/multimap/custom/MultiMapBase/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"MultiMapBase (namespace)",slug:"/rimbu/multimap/custom/MultiMapBase/namespace"},sidebar:"defaultSidebar",previous:{title:"HashMultiMapSortedValueCreators",permalink:"/api/rimbu/multimap/custom/HashMultiMapSortedValueCreators/interface"},next:{title:"MultiMapBase.Builder<K,V,Tp>",permalink:"/api/rimbu/multimap/custom/MultiMapBase/Builder/interface"}},b={},M=[{value:"Interfaces",id:"interfaces",level:2}],N={toc:M},O="wrapper";function v(e){var t=e,{components:a}=t,n=y(t,["components"]);return(0,r.yg)(O,s(c(c({},N),n),{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",c({},{id:"namespace-multimapbase"}),(0,r.yg)("inlineCode",{parentName:"h1"},"namespace MultiMapBase")),(0,r.yg)("p",null,"undocumented"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Companion interface:")," ",(0,r.yg)("a",c({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBase/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"MultiMapBase<K,V,Tp>"))),(0,r.yg)("h2",c({},{id:"interfaces"}),"Interfaces"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",c({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",c({parentName:"tr"},{align:null}),(0,r.yg)("a",c({parentName:"td"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Builder/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"MultiMapBase.Builder<K,V,Tp>"))),(0,r.yg)("td",c({parentName:"tr"},{align:null}),"undocumented")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",c({parentName:"tr"},{align:null}),(0,r.yg)("a",c({parentName:"td"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Context/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"MultiMapBase.Context<UK,UV,Tp>"))),(0,r.yg)("td",c({parentName:"tr"},{align:null}),"The multimap's Context instance that serves as a factory for all related immutable instances and builders.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",c({parentName:"tr"},{align:null}),(0,r.yg)("a",c({parentName:"td"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Factory/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"MultiMapBase.Factory<Tp,UK,UV>"))),(0,r.yg)("td",c({parentName:"tr"},{align:null}),"undocumented")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",c({parentName:"tr"},{align:null}),(0,r.yg)("a",c({parentName:"td"},{href:"/api/rimbu/multimap/custom/MultiMapBase/NonEmpty/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"MultiMapBase.NonEmpty<K,V,Tp>"))),(0,r.yg)("td",c({parentName:"tr"},{align:null}),"undocumented")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",c({parentName:"tr"},{align:null}),(0,r.yg)("a",c({parentName:"td"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"MultiMapBase.Types"))),(0,r.yg)("td",c({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))))}v.isMDXComponent=!0}}]);