"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[88152],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=c(n),m=a,y=s["".concat(l,".").concat(m)]||s[m]||d[m]||i;return n?r.createElement(y,o(o({ref:t},u),{},{components:n})):r.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[s]="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},69146:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>f,default:()=>C,frontMatter:()=>y,metadata:()=>b,toc:()=>v});var r=n(3905),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&u(e,n,t[n]);if(p)for(var n of p(t))c.call(t,n)&&u(e,n,t[n]);return e},d=(e,t)=>i(e,o(t)),m=(e,t)=>{var n={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&p)for(var r of p(e))t.indexOf(r)<0&&c.call(e,r)&&(n[r]=e[r]);return n};const y={title:"partition",slug:"/rimbu/stream/AsyncReducer/partition/var"},f="type partition",b={unversionedId:"rimbu_stream/async/AsyncReducer/partition.var",id:"rimbu_stream/async/AsyncReducer/partition.var",title:"partition",description:"Returns an AsyncReducer that splits the incoming values into two separate outputs based on the given pred predicate. Values for which the predicate is true are fed into the collectorTrue reducer, and other values are fed into the collectorFalse instance. If no collectors are provided the values are collected into arrays.",source:"@site/api/rimbu_stream/async/AsyncReducer/partition.var.mdx",sourceDirName:"rimbu_stream/async/AsyncReducer",slug:"/rimbu/stream/AsyncReducer/partition/var",permalink:"/api/rimbu/stream/AsyncReducer/partition/var",draft:!1,tags:[],version:"current",frontMatter:{title:"partition",slug:"/rimbu/stream/AsyncReducer/partition/var"},sidebar:"defaultSidebar",previous:{title:"nonEmpty",permalink:"/api/rimbu/stream/AsyncReducer/nonEmpty/var"},next:{title:"pipe",permalink:"/api/rimbu/stream/AsyncReducer/pipe/var"}},k={},v=[{value:"Definition",id:"definition",level:2}],N={toc:v},T="wrapper";function C(e){var t=e,{components:n}=t,a=m(t,["components"]);return(0,r.kt)(T,d(s(s({},N),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",s({},{id:"type-partition"}),(0,r.kt)("inlineCode",{parentName:"h1"},"type partition")),(0,r.kt)("p",null,"Returns an ",(0,r.kt)("inlineCode",{parentName:"p"},"AsyncReducer")," that splits the incoming values into two separate outputs based on the given ",(0,r.kt)("inlineCode",{parentName:"p"},"pred")," predicate. Values for which the predicate is true are fed into the ",(0,r.kt)("inlineCode",{parentName:"p"},"collectorTrue")," reducer, and other values are fed into the ",(0,r.kt)("inlineCode",{parentName:"p"},"collectorFalse")," instance. If no collectors are provided the values are collected into arrays."),(0,r.kt)("admonition",s({},{title:"note",type:"note"}),(0,r.kt)("p",{parentName:"admonition"},"if the predicate is a type guard, the return type is automatically inferred ```")),(0,r.kt)("h2",s({},{id:"definition"}),"Definition"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"partition: {"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"<T, T2 extends T, RT, RF = RT>(pred: (value: T, index: number) => value is T2, options: {"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"collectorTrue: "),(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,r.kt)("inlineCode",{parentName:"p"},"<T2, RT>;"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"collectorFalse: "),(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,r.kt)("inlineCode",{parentName:"p"},"<Exclude<T, T2>, RF>;"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"}): "),(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,r.kt)("inlineCode",{parentName:"p"},"<T, [true: RT, false: RF]>;"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"<T, T2 extends T>(pred: (value: T, index: number) => value is T2, options?: {"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"collectorTrue?: undefined;"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"collectorFalse?: undefined;"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"}): "),(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,r.kt)("inlineCode",{parentName:"p"},"<T, [true: T2[], false: Exclude<T, T2>[]]>;"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"<T, RT, RF = RT>(pred: (value: T, index: number) => "),(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,r.kt)("inlineCode",{parentName:"p"},"<boolean>, options: {"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"collectorTrue: "),(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,r.kt)("inlineCode",{parentName:"p"},"<T, RT>;"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"collectorFalse: "),(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/Accept/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Accept")),(0,r.kt)("inlineCode",{parentName:"p"},"<T, RF>;"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"}): "),(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,r.kt)("inlineCode",{parentName:"p"},"<T, [true: RT, false: RF]>;"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"<T>(pred: (value: T, index: number) => "),(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,r.kt)("inlineCode",{parentName:"p"},"<boolean>, options?: {"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"collectorTrue?: undefined;"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"collectorFalse?: undefined;"),(0,r.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"}): "),(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,r.kt)("inlineCode",{parentName:"p"},"<T, [true: T[], false: T[]]>;"),(0,r.kt)("br",null),"\xa0","\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"}")))}C.isMDXComponent=!0}}]);