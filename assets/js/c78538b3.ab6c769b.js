"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[36256],{15680:(e,r,n)=>{n.d(r,{xA:()=>u,yg:()=>d});var t=n(96540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function p(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=t.createContext({}),c=function(e){var r=t.useContext(m),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},u=function(e){var r=c(e.components);return t.createElement(m.Provider,{value:r},e.children)},l="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},s=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),l=c(n),s=a,d=l["".concat(m,".").concat(s)]||l[s]||y[s]||i;return n?t.createElement(d,o(o({ref:r},u),{},{components:n})):t.createElement(d,o({ref:r},u))}));function d(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=s;var p={};for(var m in r)hasOwnProperty.call(r,m)&&(p[m]=r[m]);p.originalType=e,p[l]="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=n[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}s.displayName="MDXCreateElement"},78899:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>g,contentTitle:()=>f,default:()=>h,frontMatter:()=>d,metadata:()=>b,toc:()=>v});var t=n(15680),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,r,n)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[r]=n,l=(e,r)=>{for(var n in r||(r={}))m.call(r,n)&&u(e,n,r[n]);if(p)for(var n of p(r))c.call(r,n)&&u(e,n,r[n]);return e},y=(e,r)=>i(e,o(r)),s=(e,r)=>{var n={};for(var t in e)m.call(e,t)&&r.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&p)for(var t of p(e))r.indexOf(t)<0&&c.call(e,t)&&(n[t]=e[t]);return n};const d={title:"maxBy",slug:"/rimbu/stream/AsyncReducer/maxBy/var"},f="type maxBy",b={unversionedId:"rimbu_stream/AsyncReducer/maxBy.var",id:"rimbu_stream/AsyncReducer/maxBy.var",title:"maxBy",description:"Returns a Reducer that remembers the maximum value of the inputs using the given compFun to compare input values",source:"@site/api/rimbu_stream/AsyncReducer/maxBy.var.mdx",sourceDirName:"rimbu_stream/AsyncReducer",slug:"/rimbu/stream/AsyncReducer/maxBy/var",permalink:"/api/rimbu/stream/AsyncReducer/maxBy/var",draft:!1,tags:[],version:"current",frontMatter:{title:"maxBy",slug:"/rimbu/stream/AsyncReducer/maxBy/var"},sidebar:"defaultSidebar",previous:{title:"max",permalink:"/api/rimbu/stream/AsyncReducer/max/var"},next:{title:"min",permalink:"/api/rimbu/stream/AsyncReducer/min/var"}},g={},v=[{value:"Definition",id:"definition",level:2}],O={toc:v},x="wrapper";function h(e){var r=e,{components:n}=r,a=s(r,["components"]);return(0,t.yg)(x,y(l(l({},O),a),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",l({},{id:"type-maxby"}),(0,t.yg)("inlineCode",{parentName:"h1"},"type maxBy")),(0,t.yg)("p",null,"Returns a ",(0,t.yg)("inlineCode",{parentName:"p"},"Reducer")," that remembers the maximum value of the inputs using the given ",(0,t.yg)("inlineCode",{parentName:"p"},"compFun")," to compare input values"),(0,t.yg)("admonition",l({},{title:"example",type:"note"}),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",l({parentName:"pre"},{className:"language-ts"}),"const stream = Stream.of('abc', 'a', 'abcde', 'ab')\nconsole.log(stream.maxBy((s1, s2) => s1.length - s2.length))\n// 'abcde'\n"))),(0,t.yg)("h2",l({},{id:"definition"}),"Definition"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"maxBy: {"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T>(compFun: (v1: T, v2: T) => "),(0,t.yg)("a",l({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<number>): "),(0,t.yg)("a",l({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, T "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," undefined>;"),(0,t.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"<T, O>(compFun: (v1: T, v2: T) => "),(0,t.yg)("a",l({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"MaybePromise")),(0,t.yg)("inlineCode",{parentName:"p"},"<number>, otherwise: AsyncOptLazy<O>): "),(0,t.yg)("a",l({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncReducer/type"}),(0,t.yg)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,t.yg)("inlineCode",{parentName:"p"},"<T, T "),(0,t.yg)("code",null,"|"),(0,t.yg)("inlineCode",{parentName:"p"}," O>;"),(0,t.yg)("br",null),"\xa0","\xa0",(0,t.yg)("inlineCode",{parentName:"p"},"}")))}h.isMDXComponent=!0}}]);