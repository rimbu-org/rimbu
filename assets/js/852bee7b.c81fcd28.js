"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[56759],{15680:(e,t,r)=>{r.d(t,{xA:()=>m,yg:()=>f});var a=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),p=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=p(e.components);return a.createElement(u.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=p(r),y=n,f=s["".concat(u,".").concat(y)]||s[y]||c[y]||i;return r?a.createElement(f,l(l({ref:t},m),{},{components:r})):a.createElement(f,l({ref:t},m))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=y;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[s]="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}y.displayName="MDXCreateElement"},56707:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>b,contentTitle:()=>g,default:()=>M,frontMatter:()=>f,metadata:()=>h,toc:()=>d});var a=r(15680),n=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,m=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,s=(e,t)=>{for(var r in t||(t={}))u.call(t,r)&&m(e,r,t[r]);if(o)for(var r of o(t))p.call(t,r)&&m(e,r,t[r]);return e},c=(e,t)=>i(e,l(t)),y=(e,t)=>{var r={};for(var a in e)u.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&p.call(e,a)&&(r[a]=e[a]);return r};const f={title:"HashMultiSet<T>",slug:"/rimbu/multiset/HashMultiSet/interface"},g="interface HashMultiSet<T>",h={unversionedId:"rimbu_multiset/HashMultiSet.interface",id:"rimbu_multiset/HashMultiSet.interface",title:"HashMultiSet<T>",description:"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the HashMultiSet API documentation",source:"@site/api/rimbu_multiset/HashMultiSet.interface.mdx",sourceDirName:"rimbu_multiset",slug:"/rimbu/multiset/HashMultiSet/interface",permalink:"/api/rimbu/multiset/HashMultiSet/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"HashMultiSet<T>",slug:"/rimbu/multiset/HashMultiSet/interface"},sidebar:"defaultSidebar",previous:{title:"HashMultiSet.Types",permalink:"/api/rimbu/multiset/HashMultiSet/Types/interface"},next:{title:"MultiSet (namespace)",permalink:"/api/rimbu/multiset/MultiSet/namespace"}},b={},d=[{value:"Type parameters",id:"type-parameters",level:2}],v={toc:d},S="wrapper";function M(e){var t=e,{components:r}=t,n=y(t,["components"]);return(0,a.yg)(S,c(s(s({},v),n),{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",s({},{id:"interface-hashmultisett"}),(0,a.yg)("inlineCode",{parentName:"h1"},"interface HashMultiSet<T>")),(0,a.yg)("p",null,"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the ",(0,a.yg)("a",s({parentName:"p"},{href:"https://rimbu.org/docs/collections/multiset"}),"MultiSet documentation")," and the ",(0,a.yg)("a",s({parentName:"p"},{href:"https://rimbu.org/api/rimbu/multiset/HashMultiSet/interface"}),"HashMultiSet API documentation")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Companion namespace:")," ",(0,a.yg)("a",s({parentName:"p"},{href:"/api/rimbu/multiset/HashMultiSet/namespace"}),"HashMultiSet")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Implemented by:")," ",(0,a.yg)("a",s({parentName:"p"},{href:"/api/rimbu/multiset/HashMultiSet/NonEmpty/interface"}),(0,a.yg)("inlineCode",{parentName:"a"},"HashMultiSet.NonEmpty<T>"))),(0,a.yg)("h2",s({},{id:"type-parameters"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",s({parentName:"tr"},{align:null}),"T"),(0,a.yg)("td",s({parentName:"tr"},{align:null}),"the value type")))),(0,a.yg)("admonition",s({},{title:"note",type:"note"}),(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},"The ",(0,a.yg)("inlineCode",{parentName:"li"},"HashMultiSet")," uses the contexts' ",(0,a.yg)("inlineCode",{parentName:"li"},"HashMap")," ",(0,a.yg)("inlineCode",{parentName:"li"},"mapContext")," to hash the values."))),(0,a.yg)("admonition",s({},{title:"example",type:"note"}),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",s({parentName:"pre"},{className:"language-ts"}),"const m1 = HashMultiSet.empty<string>()\nconst m2 = HashMultiSet.of('a', 'b', 'a', 'c')\n"))))}M.isMDXComponent=!0}}]);