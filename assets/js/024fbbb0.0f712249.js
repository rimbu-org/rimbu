"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[97365],{15680:(e,t,r)=>{r.d(t,{xA:()=>s,yg:()=>y});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(r),m=a,y=p["".concat(u,".").concat(m)]||p[m]||f[m]||o;return r?n.createElement(y,i(i({ref:t},s),{},{components:r})):n.createElement(y,i({ref:t},s))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},81553:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>g,contentTitle:()=>d,default:()=>x,frontMatter:()=>y,metadata:()=>b,toc:()=>h});var n=r(15680),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,s=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))u.call(t,r)&&s(e,r,t[r]);if(c)for(var r of c(t))l.call(t,r)&&s(e,r,t[r]);return e},f=(e,t)=>o(e,i(t)),m=(e,t)=>{var r={};for(var n in e)u.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&c)for(var n of c(e))t.indexOf(n)<0&&l.call(e,n)&&(r[n]=e[n]);return r};const y={title:"Mutex.Constructors",slug:"/rimbu/channel/Mutex/Constructors/interface"},d="interface Mutex.Constructors",b={unversionedId:"rimbu_channel/Mutex/Constructors.interface",id:"rimbu_channel/Mutex/Constructors.interface",title:"Mutex.Constructors",description:"Defines the static Mutex API.",source:"@site/api/rimbu_channel/Mutex/Constructors.interface.mdx",sourceDirName:"rimbu_channel/Mutex",slug:"/rimbu/channel/Mutex/Constructors/interface",permalink:"/api/rimbu/channel/Mutex/Constructors/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"Mutex.Constructors",slug:"/rimbu/channel/Mutex/Constructors/interface"},sidebar:"defaultSidebar",previous:{title:"Mutex (namespace)",permalink:"/api/rimbu/channel/Mutex/namespace"},next:{title:"Mutex",permalink:"/api/rimbu/channel/Mutex/interface"}},g={},h=[{value:"Methods",id:"methods",level:2},{value:"<code>create</code>",id:"create",level:3},{value:"Definition",id:"definition",level:4}],v={toc:h},O="wrapper";function x(e){var t=e,{components:r}=t,a=m(t,["components"]);return(0,n.yg)(O,f(p(p({},v),a),{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h1",p({},{id:"interface-mutexconstructors"}),(0,n.yg)("inlineCode",{parentName:"h1"},"interface Mutex.Constructors")),(0,n.yg)("p",null,"Defines the static ",(0,n.yg)("inlineCode",{parentName:"p"},"Mutex")," API."),(0,n.yg)("h2",p({},{id:"methods"}),"Methods"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",p({},{id:"create"}),(0,n.yg)("inlineCode",{parentName:"h3"},"create")),(0,n.yg)("p",null,"Returns a new ",(0,n.yg)("inlineCode",{parentName:"p"},"Mutex")," instance that can be used to enforce single access to a shared resource.")),(0,n.yg)("h4",p({},{id:"definition"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"create(): "),(0,n.yg)("a",p({parentName:"p"},{href:"/api/rimbu/channel/Mutex/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"Mutex")),(0,n.yg)("inlineCode",{parentName:"p"},";")))))}x.isMDXComponent=!0}}]);