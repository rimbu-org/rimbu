"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[45874],{15680:(e,a,t)=>{t.d(a,{xA:()=>g,yg:()=>s});var n=t(96540);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var m=n.createContext({}),y=function(e){var a=n.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},g=function(e){var a=y(e.components);return n.createElement(m.Provider,{value:a},e.children)},o="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,r=e.originalType,m=e.parentName,g=p(e,["components","mdxType","originalType","parentName"]),o=y(t),u=l,s=o["".concat(m,".").concat(u)]||o[u]||d[u]||r;return t?n.createElement(s,i(i({ref:a},g),{},{components:t})):n.createElement(s,i({ref:a},g))}));function s(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=u;var p={};for(var m in a)hasOwnProperty.call(a,m)&&(p[m]=a[m]);p.originalType=e,p[o]="string"==typeof e?e:l,i[1]=p;for(var y=2;y<r;y++)i[y]=t[y];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},61676:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>N,default:()=>C,frontMatter:()=>s,metadata:()=>h,toc:()=>b});var n=t(15680),l=Object.defineProperty,r=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable,g=(e,a,t)=>a in e?l(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,o=(e,a)=>{for(var t in a||(a={}))m.call(a,t)&&g(e,t,a[t]);if(p)for(var t of p(a))y.call(a,t)&&g(e,t,a[t]);return e},d=(e,a)=>r(e,i(a)),u=(e,a)=>{var t={};for(var n in e)m.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&p)for(var n of p(e))a.indexOf(n)<0&&y.call(e,n)&&(t[n]=e[n]);return t};const s={title:"MultiMapBase.Builder<K,V,Tp>",slug:"/rimbu/multimap/custom/MultiMapBase/Builder/interface"},N="interface MultiMapBase.Builder<K,V,Tp>",h={unversionedId:"rimbu_multimap/custom/MultiMapBase/Builder.interface",id:"rimbu_multimap/custom/MultiMapBase/Builder.interface",title:"MultiMapBase.Builder<K,V,Tp>",description:"undocumented",source:"@site/api/rimbu_multimap/custom/MultiMapBase/Builder.interface.mdx",sourceDirName:"rimbu_multimap/custom/MultiMapBase",slug:"/rimbu/multimap/custom/MultiMapBase/Builder/interface",permalink:"/api/rimbu/multimap/custom/MultiMapBase/Builder/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"MultiMapBase.Builder<K,V,Tp>",slug:"/rimbu/multimap/custom/MultiMapBase/Builder/interface"},sidebar:"defaultSidebar",previous:{title:"MultiMapBase (namespace)",permalink:"/api/rimbu/multimap/custom/MultiMapBase/namespace"},next:{title:"MultiMapBase.Context<UK,UV,Tp>",permalink:"/api/rimbu/multimap/custom/MultiMapBase/Context/interface"}},c={},b=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>isEmpty</code>",id:"isempty",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>size</code>",id:"size",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>add</code>",id:"add",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>addEntries</code>",id:"addentries",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>build</code>",id:"build",level:3},{value:"Definition",id:"definition-4",level:4},{value:"<code>forEach</code>",id:"foreach",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"<code>getValues</code>",id:"getvalues",level:3},{value:"Definition",id:"definition-6",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"<code>hasEntry</code>",id:"hasentry",level:3},{value:"Definition",id:"definition-7",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"<code>hasKey</code>",id:"haskey",level:3},{value:"Definition",id:"definition-8",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"<code>removeEntries</code>",id:"removeentries",level:3},{value:"Definition",id:"definition-9",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"<code>removeEntry</code>",id:"removeentry",level:3},{value:"Definition",id:"definition-10",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"<code>removeKey</code>",id:"removekey",level:3},{value:"Definition",id:"definition-11",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"<code>removeKeys</code>",id:"removekeys",level:3},{value:"Definition",id:"definition-12",level:4},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"<code>setValues</code>",id:"setvalues",level:3},{value:"Definition",id:"definition-13",level:4},{value:"Parameters",id:"parameters-10",level:4}],f={toc:b},v="wrapper";function C(e){var a=e,{components:t}=a,l=u(a,["components"]);return(0,n.yg)(v,d(o(o({},f),l),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",o({},{id:"interface-multimapbasebuilderkvtp"}),(0,n.yg)("inlineCode",{parentName:"h1"},"interface MultiMapBase.Builder<K,V,Tp>")),(0,n.yg)("p",null,"undocumented"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Implemented by:")," ",(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/multimap/custom/MultiMapBuilder/class"}),(0,n.yg)("inlineCode",{parentName:"a"},"MultiMapBuilder<K,V,Tp,TpG>"))),(0,n.yg)("h2",o({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Constraints"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),"K"),(0,n.yg)("td",o({parentName:"tr"},{align:null})),(0,n.yg)("td",o({parentName:"tr"},{align:null})),(0,n.yg)("td",o({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),"V"),(0,n.yg)("td",o({parentName:"tr"},{align:null})),(0,n.yg)("td",o({parentName:"tr"},{align:null})),(0,n.yg)("td",o({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),"Tp"),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"MultiMapBase.Types"))),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/multimap/custom/MultiMapBase/Types/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"MultiMapBase.Types"))),(0,n.yg)("td",o({parentName:"tr"},{align:null}),"undocumented")))),(0,n.yg)("h2",o({},{id:"properties"}),"Properties"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"isempty"}),(0,n.yg)("inlineCode",{parentName:"h3"},"isEmpty")),(0,n.yg)("p",null,"Returns true if there are no entries in the builder.")),(0,n.yg)("h4",o({},{id:"definition"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"readonly isEmpty: boolean;"))),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"HashMultiMapHashValue.of([[1, 'a'], [2, 'b']]).toBuilder().isEmpty\n// => false\n")))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"size"}),(0,n.yg)("inlineCode",{parentName:"h3"},"size")),(0,n.yg)("p",null,"Returns the amount of entries in the builder.")),(0,n.yg)("h4",o({},{id:"definition-1"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"readonly size: number;"))),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"HashMultiMapHashValue.of([[1, 'a'], [2, 'b'], [1, 'c']]).toBuilder().size\n// => 3\n")))),(0,n.yg)("h2",o({},{id:"methods"}),"Methods"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"add"}),(0,n.yg)("inlineCode",{parentName:"h3"},"add")),(0,n.yg)("p",null,"Adds an entry with given ",(0,n.yg)("inlineCode",{parentName:"p"},"key")," and ",(0,n.yg)("inlineCode",{parentName:"p"},"value")," to the builder.")),(0,n.yg)("h4",o({},{id:"definition-2"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"add(key: K, value: V): boolean;"))),(0,n.yg)("h4",o({},{id:"parameters"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),"the entry key")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"value")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"V")),(0,n.yg)("td",o({parentName:"tr"},{align:null})))))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"addentries"}),(0,n.yg)("inlineCode",{parentName:"h3"},"addEntries")),(0,n.yg)("p",null,"Adds given ",(0,n.yg)("inlineCode",{parentName:"p"},"entries")," to the builder.")),(0,n.yg)("h4",o({},{id:"definition-3"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"addEntries(entries: "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"p"},"<readonly [K, V]>): boolean;"))),(0,n.yg)("h4",o({},{id:"parameters-1"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"entries")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"td"},"<readonly [K, V]>")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashMultiMapHashValue.of([1, 'a'], [2, 'b']).toBuilder()\nm.addEntries([1, 'a'], [2, 'b']])   // => false\nm.addEntries([1, 'b'], [2, 'd']])   // => true\n")))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"build"}),(0,n.yg)("inlineCode",{parentName:"h3"},"build")),(0,n.yg)("p",null,"Returns an immutable collection instance containing the entries in this builder.")),(0,n.yg)("h4",o({},{id:"definition-4"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"build(): "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, K, V>['normal'];"))),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashMultiMapHashValue.of([1, 'a'], [2, 'b']).toBuilder()\nconst m2: HashMultiMapHashValue<number, string> = m.build()\n")))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"foreach"}),(0,n.yg)("inlineCode",{parentName:"h3"},"forEach")),(0,n.yg)("p",null,"Performs given function ",(0,n.yg)("inlineCode",{parentName:"p"},"f")," for each entry of the builder, using given ",(0,n.yg)("inlineCode",{parentName:"p"},"state")," as initial traversal state.")),(0,n.yg)("h4",o({},{id:"definition-5"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"forEach(f: (entry: [K, V], index: number, value: () => void) => void, options?: {"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"state?: "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"TraverseState")),(0,n.yg)("inlineCode",{parentName:"p"},";"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"}): void;"))),(0,n.yg)("h4",o({},{id:"parameters-2"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"f")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"(entry: [K, V], index: number, value: () => void) => void")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),"the function to perform for each element, receiving:",(0,n.yg)("br",null)," - ",(0,n.yg)("inlineCode",{parentName:"td"},"entry"),": the next tuple of a key and value",(0,n.yg)("br",null)," - ",(0,n.yg)("inlineCode",{parentName:"td"},"index"),": the index of the element",(0,n.yg)("br",null)," - ",(0,n.yg)("inlineCode",{parentName:"td"},"halt"),": a function that, if called, ensures that no new elements are passed")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"options")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"{"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"state?: "),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"TraverseState")),(0,n.yg)("inlineCode",{parentName:"td"},";"),(0,n.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"}")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",o({},{title:"throws",type:"note"}),(0,n.yg)("p",{parentName:"admonition"},"RibuError.ModifiedBuilderWhileLoopingOverItError if the builder is modified while looping over it")),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"HashMultiMapHashValue.of([1, 'a'], [2, 'b'], [1, 'c']).toBuilder().forEach((entry, i, halt) => {\nconsole.log([entry[1], entry[0]]);\nif (i >= 1) halt();\n})\n// => logs ['a', 1]  ['c', 1]  (or other order)\n"))),(0,n.yg)("admonition",o({},{title:"note",type:"note"}),(0,n.yg)("p",{parentName:"admonition"},"O(N)"))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"getvalues"}),(0,n.yg)("inlineCode",{parentName:"h3"},"getValues")),(0,n.yg)("p",null,"Returns a built immutable collection of the values asssociated with given ",(0,n.yg)("inlineCode",{parentName:"p"},"key"))),(0,n.yg)("h4",o({},{id:"definition-6"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"getValues<UK = K>(key: "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>): "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithKeyValue/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"WithKeyValue")),(0,n.yg)("inlineCode",{parentName:"p"},"<Tp, K, V>['keyMapValues'];"))),(0,n.yg)("h4",o({},{id:"type-parameters-1"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",o({},{id:"parameters-3"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),"the key for which to get the associated values")))),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashMultiMapHashValue.of([[1, 'a'], [2, 'b'], [1, 'c']]).toBuilder()\nm.getValues(1).toArray()   // => ['a', 'c']\nm.getValues(10).toArray()  // => []\n")))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"hasentry"}),(0,n.yg)("inlineCode",{parentName:"h3"},"hasEntry")),(0,n.yg)("p",null,"Returns true if the given ",(0,n.yg)("inlineCode",{parentName:"p"},"value")," is associated with given ",(0,n.yg)("inlineCode",{parentName:"p"},"key")," in the builder.")),(0,n.yg)("h4",o({},{id:"definition-7"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"hasEntry<UK = K>(key: "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>, value: V): boolean;"))),(0,n.yg)("h4",o({},{id:"type-parameters-2"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",o({},{id:"parameters-4"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),"the key to look for")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"value")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"V")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),"the value to look for")))),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashMultiMapHashValue.of([1, 'a'], [2, 'b']).toBuilder()\nm.hasEntry(2, 'b')    // => true\nm.hasEntry(2, 'c')    // => false\nm.hasEntry(3, 'a')    // => false\n")))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"haskey"}),(0,n.yg)("inlineCode",{parentName:"h3"},"hasKey")),(0,n.yg)("p",null,"Returns true if the given ",(0,n.yg)("inlineCode",{parentName:"p"},"key")," is present in the builder.")),(0,n.yg)("h4",o({},{id:"definition-8"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"hasKey<UK = K>(key: "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>): boolean;"))),(0,n.yg)("h4",o({},{id:"type-parameters-3"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",o({},{id:"parameters-5"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),"the key to look for")))),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashMultiMapHashValue.of([1, 'a'], [2, 'b']).toBuilder()\nm.hasKey(2)    // => true\nm.hasKey(3)    // => false\n")))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"removeentries"}),(0,n.yg)("inlineCode",{parentName:"h3"},"removeEntries")),(0,n.yg)("p",null,"Removes the given ",(0,n.yg)("inlineCode",{parentName:"p"},"entries")," from the builder.")),(0,n.yg)("h4",o({},{id:"definition-9"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"removeEntries<UK = K, UV = V>(entries: "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"p"},"<["),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>, "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<V, UV>]>): boolean;"))),(0,n.yg)("h4",o({},{id:"type-parameters-4"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),"UV"),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"V")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",o({},{id:"parameters-6"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"entries")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"td"},"<["),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<K, UK>, "),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<V, UV>]>")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashMultiMapHashValue.of([1, 'a'], [2, 'b']).toBuilder()\nm.removeEntries([[3, 'a'], [3, 'b']])  // => false\nm.removeEntries([[1, 'a'], [3, 'b']])  // => true\n")))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"removeentry"}),(0,n.yg)("inlineCode",{parentName:"h3"},"removeEntry")),(0,n.yg)("p",null,"Removes the given ",(0,n.yg)("inlineCode",{parentName:"p"},"value")," from the values associated with given ",(0,n.yg)("inlineCode",{parentName:"p"},"key")," from the builder.")),(0,n.yg)("h4",o({},{id:"definition-10"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"removeEntry<UK = K, UV = V>(key: "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>, value: "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<V, UV>): boolean;"))),(0,n.yg)("h4",o({},{id:"type-parameters-5"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),"UV"),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"V")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",o({},{id:"parameters-7"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),"the key at which to remove the value")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"value")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<V, UV>")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashMultiMapHashValue.of([1, 'a'], [2, 'b'], [1, 'c']).toBuilder()\nm.removeEntry(3, 'a')   // => false\nm.removeEntry(1, 'a')   // => true\n")))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"removekey"}),(0,n.yg)("inlineCode",{parentName:"h3"},"removeKey")),(0,n.yg)("p",null,"Removes the values associated with given ",(0,n.yg)("inlineCode",{parentName:"p"},"key")," from the builder.")),(0,n.yg)("h4",o({},{id:"definition-11"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"removeKey<UK = K>(key: "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>): boolean;"))),(0,n.yg)("h4",o({},{id:"type-parameters-6"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",o({},{id:"parameters-8"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<K, UK>")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashMultiMapHashValue.of([1, 'a'], [2, 'b'], [1, 'c']).toBuilder()\nm.removeKey(3)   // => false\nm.removeKey(1)   // => true\n")))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"removekeys"}),(0,n.yg)("inlineCode",{parentName:"h3"},"removeKeys")),(0,n.yg)("p",null,"Removes the values associated with each key of the given ",(0,n.yg)("inlineCode",{parentName:"p"},"keys"))),(0,n.yg)("h4",o({},{id:"definition-12"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"removeKeys<UK = K>(keys: "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"p"},"<"),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"p"},"<K, UK>>): boolean;"))),(0,n.yg)("h4",o({},{id:"type-parameters-7"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Default"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",o({},{id:"parameters-9"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"keys")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"td"},"<"),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/common/RelatedTo/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"RelatedTo")),(0,n.yg)("inlineCode",{parentName:"td"},"<K, UK>>")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashMultiMapHashValue.of([1, 'a'], [2, 'b'], [1, 'c']).toBuilder()\nm.removeKeys([10, 11])   // => false\nm.removeKeys([1])        // => true\n")))),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",o({},{id:"setvalues"}),(0,n.yg)("inlineCode",{parentName:"h3"},"setValues")),(0,n.yg)("p",null,"Returns true if the data in the builder has changed")),(0,n.yg)("h4",o({},{id:"definition-13"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"setValues(key: K, values: "),(0,n.yg)("a",o({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"p"},"<V>): boolean;"))),(0,n.yg)("h4",o({},{id:"parameters-10"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"key")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"K")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"values")),(0,n.yg)("td",o({parentName:"tr"},{align:null}),(0,n.yg)("a",o({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.yg)("inlineCode",{parentName:"td"},"<V>")),(0,n.yg)("td",o({parentName:"tr"},{align:null}))))),(0,n.yg)("admonition",o({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",o({parentName:"pre"},{className:"language-ts"}),"const m = HashMultiMapHashValue.of([1, 'a'], [2, 'b']).toBuilder()\nm.setValues(1, ['a'])      // => false\nm.setValues(2, ['c', 'd']) // => true\n")))))}C.isMDXComponent=!0}}]);