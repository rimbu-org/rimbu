"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[39369],{15680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>m});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},y="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),y=l(r),f=a,m=y["".concat(p,".").concat(f)]||y[f]||s[f]||o;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[y]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},99013:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>g,contentTitle:()=>b,default:()=>h,frontMatter:()=>m,metadata:()=>d,toc:()=>O});var n=r(15680),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,y=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&u(e,r,t[r]);if(c)for(var r of c(t))l.call(t,r)&&u(e,r,t[r]);return e},s=(e,t)=>o(e,i(t)),f=(e,t)=>{var r={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&c)for(var n of c(e))t.indexOf(n)<0&&l.call(e,n)&&(r[n]=e[n]);return r};const m={title:"RMap.Context<UK>",slug:"/rimbu/collection-types/RMap/Context/interface"},b="interface RMap.Context<UK>",d={unversionedId:"rimbu_collection-types/RMap/Context.interface",id:"rimbu_collection-types/RMap/Context.interface",title:"RMap.Context<UK>",description:"A context instance for RMap implementations that acts as a factory for every instance of this type of collection.",source:"@site/api/rimbu_collection-types/RMap/Context.interface.mdx",sourceDirName:"rimbu_collection-types/RMap",slug:"/rimbu/collection-types/RMap/Context/interface",permalink:"/api/rimbu/collection-types/RMap/Context/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"RMap.Context<UK>",slug:"/rimbu/collection-types/RMap/Context/interface"},sidebar:"defaultSidebar",previous:{title:"RMap.Builder<K,V>",permalink:"/api/rimbu/collection-types/RMap/Builder/interface"},next:{title:"RMap.NonEmpty<K,V>",permalink:"/api/rimbu/collection-types/RMap/NonEmpty/interface"}},g={},O=[{value:"Type parameters",id:"type-parameters",level:2}],v={toc:O},x="wrapper";function h(e){var t=e,{components:r}=t,a=f(t,["components"]);return(0,n.yg)(x,s(y(y({},v),a),{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h1",y({},{id:"interface-rmapcontextuk"}),(0,n.yg)("inlineCode",{parentName:"h1"},"interface RMap.Context<UK>")),(0,n.yg)("p",null,"A context instance for ",(0,n.yg)("inlineCode",{parentName:"p"},"RMap")," implementations that acts as a factory for every instance of this type of collection."),(0,n.yg)("h2",y({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",y({parentName:"tr"},{align:null}),"the upper key type bound for which the context can be used")))))}h.isMDXComponent=!0}}]);