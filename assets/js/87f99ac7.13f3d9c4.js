"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[21623],{15680:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>y});var r=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},f="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=p(n),m=i,y=f["".concat(u,".").concat(m)]||f[m]||s[m]||o;return n?r.createElement(y,a(a({ref:t},l),{},{components:n})):r.createElement(y,a({ref:t},l))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[f]="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},93657:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>v,contentTitle:()=>d,default:()=>w,frontMatter:()=>y,metadata:()=>b,toc:()=>g});var r=n(15680),i=Object.defineProperty,o=Object.defineProperties,a=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,l=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,f=(e,t)=>{for(var n in t||(t={}))u.call(t,n)&&l(e,n,t[n]);if(c)for(var n of c(t))p.call(t,n)&&l(e,n,t[n]);return e},s=(e,t)=>o(e,a(t)),m=(e,t)=>{var n={};for(var r in e)u.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&c)for(var r of c(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n};const y={title:"defaultFunction",slug:"/rimbu/proximity/DistanceFunction/defaultFunction/var"},d="type defaultFunction",b={unversionedId:"rimbu_proximity/DistanceFunction/defaultFunction.var",id:"rimbu_proximity/DistanceFunction/defaultFunction.var",title:"defaultFunction",description:"Returns 0 if the two values satisfy ===, Number.POSITIVE_INFINITY otherwise",source:"@site/api/rimbu_proximity/DistanceFunction/defaultFunction.var.mdx",sourceDirName:"rimbu_proximity/DistanceFunction",slug:"/rimbu/proximity/DistanceFunction/defaultFunction/var",permalink:"/api/rimbu/proximity/DistanceFunction/defaultFunction/var",draft:!1,tags:[],version:"current",frontMatter:{title:"defaultFunction",slug:"/rimbu/proximity/DistanceFunction/defaultFunction/var"},sidebar:"defaultSidebar",previous:{title:"DistanceFunction (namespace)",permalink:"/api/rimbu/proximity/DistanceFunction/namespace"},next:{title:"DistanceFunction",permalink:"/api/rimbu/proximity/DistanceFunction/type"}},v={},g=[{value:"Definition",id:"definition",level:2}],O={toc:g},F="wrapper";function w(e){var t=e,{components:n}=t,i=m(t,["components"]);return(0,r.yg)(F,s(f(f({},O),i),{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",f({},{id:"type-defaultfunction"}),(0,r.yg)("inlineCode",{parentName:"h1"},"type defaultFunction")),(0,r.yg)("p",null,"Returns ",(0,r.yg)("inlineCode",{parentName:"p"},"0")," if the two values satisfy ",(0,r.yg)("inlineCode",{parentName:"p"},"==="),", ",(0,r.yg)("inlineCode",{parentName:"p"},"Number.POSITIVE_INFINITY")," otherwise"),(0,r.yg)("h2",f({},{id:"definition"}),"Definition"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"defaultFunction: "),(0,r.yg)("a",f({parentName:"p"},{href:"/api/rimbu/proximity/DistanceFunction/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"DistanceFunction")),(0,r.yg)("inlineCode",{parentName:"p"},"<unknown>")))}w.isMDXComponent=!0}}]);