"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[81066],{15680:(e,a,t)=>{t.d(a,{xA:()=>u,yg:()=>g});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),m=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},u=function(e){var a=m(e.components);return n.createElement(o.Provider,{value:a},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},y=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=m(t),y=r,g=s["".concat(o,".").concat(y)]||s[y]||d[y]||l;return t?n.createElement(g,i(i({ref:a},u),{},{components:t})):n.createElement(g,i({ref:a},u))}));function g(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=y;var p={};for(var o in a)hasOwnProperty.call(a,o)&&(p[o]=a[o]);p.originalType=e,p[s]="string"==typeof e?e:r,i[1]=p;for(var m=2;m<l;m++)i[m]=t[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},51436:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>b,contentTitle:()=>c,default:()=>v,frontMatter:()=>g,metadata:()=>h,toc:()=>N});var n=t(15680),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,u=(e,a,t)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,s=(e,a)=>{for(var t in a||(a={}))o.call(a,t)&&u(e,t,a[t]);if(p)for(var t of p(a))m.call(a,t)&&u(e,t,a[t]);return e},d=(e,a)=>l(e,i(a)),y=(e,a)=>{var t={};for(var n in e)o.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&p)for(var n of p(e))a.indexOf(n)<0&&m.call(e,n)&&(t[n]=e[n]);return t};const g={title:"@rimbu/hashed/map-custom",slug:"/rimbu/hashed/map-custom"},c="package @rimbu/hashed/map-custom",h={unversionedId:"rimbu_hashed/map-custom/index",id:"rimbu_hashed/map-custom/index",title:"@rimbu/hashed/map-custom",description:"undocumented",source:"@site/api/rimbu_hashed/map-custom/index.mdx",sourceDirName:"rimbu_hashed/map-custom",slug:"/rimbu/hashed/map-custom",permalink:"/api/rimbu/hashed/map-custom",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/hashed/map-custom",slug:"/rimbu/hashed/map-custom"},sidebar:"defaultSidebar",previous:{title:"HashMap<K,V>",permalink:"/api/rimbu/hashed/map/HashMap/interface"},next:{title:"HashMapBlock<K,V>",permalink:"/api/rimbu/hashed/map-custom/HashMapBlock/class"}},b={},N=[{value:"Interfaces",id:"interfaces",level:2},{value:"Classes",id:"classes",level:2},{value:"Functions",id:"functions",level:2},{value:"<code>createHashMapContext</code>",id:"createhashmapcontext",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:5},{value:"Parameters",id:"parameters",level:4}],f={toc:N},C="wrapper";function v(e){var a=e,{components:t}=a,r=y(a,["components"]);return(0,n.yg)(C,d(s(s({},f),r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",s({},{id:"package-rimbuhashedmap-custom"}),(0,n.yg)("inlineCode",{parentName:"h1"},"package @rimbu/hashed/map-custom")),(0,n.yg)("p",null,"undocumented"),(0,n.yg)("h2",s({},{id:"interfaces"}),"Interfaces"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",s({parentName:"tr"},{align:null}),(0,n.yg)("a",s({parentName:"td"},{href:"/api/rimbu/hashed/map-custom/HashMapCreators/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashMapCreators"))),(0,n.yg)("td",s({parentName:"tr"},{align:null}),"undocumented")))),(0,n.yg)("h2",s({},{id:"classes"}),"Classes"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",s({parentName:"tr"},{align:null}),(0,n.yg)("a",s({parentName:"td"},{href:"/api/rimbu/hashed/map-custom/HashMapBlock/class"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashMapBlock"))),(0,n.yg)("td",s({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",s({parentName:"tr"},{align:null}),(0,n.yg)("a",s({parentName:"td"},{href:"/api/rimbu/hashed/map-custom/HashMapBlockBuilder/class"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashMapBlockBuilder"))),(0,n.yg)("td",s({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",s({parentName:"tr"},{align:null}),(0,n.yg)("a",s({parentName:"td"},{href:"/api/rimbu/hashed/map-custom/HashMapCollision/class"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashMapCollision"))),(0,n.yg)("td",s({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",s({parentName:"tr"},{align:null}),(0,n.yg)("a",s({parentName:"td"},{href:"/api/rimbu/hashed/map-custom/HashMapCollisionBuilder/class"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashMapCollisionBuilder"))),(0,n.yg)("td",s({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",s({parentName:"tr"},{align:null}),(0,n.yg)("a",s({parentName:"td"},{href:"/api/rimbu/hashed/map-custom/HashMapContext/class"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashMapContext"))),(0,n.yg)("td",s({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",s({parentName:"tr"},{align:null}),(0,n.yg)("a",s({parentName:"td"},{href:"/api/rimbu/hashed/map-custom/HashMapEmpty/class"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashMapEmpty"))),(0,n.yg)("td",s({parentName:"tr"},{align:null}),"undocumented")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",s({parentName:"tr"},{align:null}),(0,n.yg)("a",s({parentName:"td"},{href:"/api/rimbu/hashed/map-custom/HashMapNonEmptyBase/class"}),(0,n.yg)("inlineCode",{parentName:"a"},"HashMapNonEmptyBase"))),(0,n.yg)("td",s({parentName:"tr"},{align:null}),"undocumented")))),(0,n.yg)("h2",s({},{id:"functions"}),"Functions"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",s({},{id:"createhashmapcontext"}),(0,n.yg)("inlineCode",{parentName:"h3"},"createHashMapContext")),(0,n.yg)("p",null,"undocumented")),(0,n.yg)("h4",s({},{id:"definition"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"export declare function createHashMapContext<UK>(options?: {"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"hasher?: Hasher<UK>;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"eq?: Eq<UK>;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"blockSizeBits?: number;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"listContext?: "),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/list/List/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"List.Context")),(0,n.yg)("inlineCode",{parentName:"p"},";"),(0,n.yg)("br",null),(0,n.yg)("inlineCode",{parentName:"p"},"}): HashMap.Context<UK>;"))),(0,n.yg)("h5",s({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",s({parentName:"tr"},{align:null}),"UK"),(0,n.yg)("td",s({parentName:"tr"},{align:null}))))),(0,n.yg)("h4",s({},{id:"parameters"}),"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",s({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"options")),(0,n.yg)("td",s({parentName:"tr"},{align:null}),(0,n.yg)("inlineCode",{parentName:"td"},"{"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"hasher?: Hasher<UK>;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"eq?: Eq<UK>;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"blockSizeBits?: number;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"td"},"listContext?: "),(0,n.yg)("a",s({parentName:"td"},{href:"/api/rimbu/list/List/Context/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"List.Context")),(0,n.yg)("inlineCode",{parentName:"td"},";"),(0,n.yg)("br",null),(0,n.yg)("inlineCode",{parentName:"td"},"}")),(0,n.yg)("td",s({parentName:"tr"},{align:null})))))))}v.isMDXComponent=!0}}]);