"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[52751],{15680:(e,r,t)=>{t.d(r,{xA:()=>u,yg:()=>m});var n=t(96540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},s="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=l(t),f=o,m=s["".concat(c,".").concat(f)]||s[f]||y[f]||a;return t?n.createElement(m,p(p({ref:r},u),{},{components:t})):n.createElement(m,p({ref:r},u))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,p=new Array(a);p[0]=f;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i[s]="string"==typeof e?e:o,p[1]=i;for(var l=2;l<a;l++)p[l]=t[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},51366:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>g,contentTitle:()=>d,default:()=>j,frontMatter:()=>m,metadata:()=>b,toc:()=>v});var n=t(15680),o=Object.defineProperty,a=Object.defineProperties,p=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,u=(e,r,t)=>r in e?o(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,s=(e,r)=>{for(var t in r||(r={}))c.call(r,t)&&u(e,t,r[t]);if(i)for(var t of i(r))l.call(r,t)&&u(e,t,r[t]);return e},y=(e,r)=>a(e,p(r)),f=(e,r)=>{var t={};for(var n in e)c.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&i)for(var n of i(e))r.indexOf(n)<0&&l.call(e,n)&&(t[n]=e[n]);return t};const m={title:"Selector (namespace)",slug:"/rimbu/deep/Selector/namespace"},d="namespace Selector",b={unversionedId:"rimbu_deep/Selector/index",id:"rimbu_deep/Selector/index",title:"Selector (namespace)",description:"Type defining the allowed selectors on an object of type T. Selectors can be: - a path string into type T. - a function receiving a Protected version of type T, and returning an arbitrary value. - a tuple of Selectors for type T - an object where the property values are Selectors for type T.",source:"@site/api/rimbu_deep/Selector/index.mdx",sourceDirName:"rimbu_deep/Selector",slug:"/rimbu/deep/Selector/namespace",permalink:"/api/rimbu/deep/Selector/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"Selector (namespace)",slug:"/rimbu/deep/Selector/namespace"},sidebar:"defaultSidebar",previous:{title:"Protected",permalink:"/api/rimbu/deep/Protected/type"},next:{title:"Result",permalink:"/api/rimbu/deep/Selector/Result/type"}},g={},v=[],O={toc:v},S="wrapper";function j(e){var r=e,{components:t}=r,o=f(r,["components"]);return(0,n.yg)(S,y(s(s({},O),o),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",s({},{id:"namespace-selector"}),(0,n.yg)("inlineCode",{parentName:"h1"},"namespace Selector")),(0,n.yg)("p",null,"Type defining the allowed selectors on an object of type ",(0,n.yg)("inlineCode",{parentName:"p"},"T"),". Selectors can be: - a path string into type ",(0,n.yg)("inlineCode",{parentName:"p"},"T"),". - a function receiving a ",(0,n.yg)("inlineCode",{parentName:"p"},"Protected")," version of type ",(0,n.yg)("inlineCode",{parentName:"p"},"T"),", and returning an arbitrary value. - a tuple of ",(0,n.yg)("inlineCode",{parentName:"p"},"Selectors")," for type ",(0,n.yg)("inlineCode",{parentName:"p"},"T")," - an object where the property values are ",(0,n.yg)("inlineCode",{parentName:"p"},"Selectors")," for type ",(0,n.yg)("inlineCode",{parentName:"p"},"T"),"."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Companion type:")," ",(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/deep/Selector/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Selector<T>"))))}j.isMDXComponent=!0}}]);