"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[48589],{15680:(e,t,a)=>{a.d(t,{xA:()=>m,yg:()=>s});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),d=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},y="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),y=d(a),u=n,s=y["".concat(p,".").concat(u)]||y[u]||g[u]||i;return a?r.createElement(s,l(l({ref:t},m),{},{components:a})):r.createElement(s,l({ref:t},m))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[y]="string"==typeof e?e:n,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},66309:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>v,frontMatter:()=>s,metadata:()=>N,toc:()=>f});var r=a(15680),n=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,m=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,y=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&m(e,a,t[a]);if(o)for(var a of o(t))d.call(t,a)&&m(e,a,t[a]);return e},g=(e,t)=>i(e,l(t)),u=(e,t)=>{var a={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&o)for(var r of o(e))t.indexOf(r)<0&&d.call(e,r)&&(a[r]=e[r]);return a};const s={title:"OrderedSortedSet (namespace)",slug:"/rimbu/ordered/set/OrderedSortedSet/namespace"},c="namespace OrderedSortedSet",N={unversionedId:"rimbu_ordered/set/OrderedSortedSet/index",id:"rimbu_ordered/set/OrderedSortedSet/index",title:"OrderedSortedSet (namespace)",description:"A type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSortedSet API documentation",source:"@site/api/rimbu_ordered/set/OrderedSortedSet/index.mdx",sourceDirName:"rimbu_ordered/set/OrderedSortedSet",slug:"/rimbu/ordered/set/OrderedSortedSet/namespace",permalink:"/api/rimbu/ordered/set/OrderedSortedSet/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"OrderedSortedSet (namespace)",slug:"/rimbu/ordered/set/OrderedSortedSet/namespace"},sidebar:"defaultSidebar",previous:{title:"OrderedSet<T>",permalink:"/api/rimbu/ordered/set/OrderedSet/interface"},next:{title:"OrderedSortedSet.Builder<T>",permalink:"/api/rimbu/ordered/set/OrderedSortedSet/Builder/interface"}},h={},f=[{value:"Interfaces",id:"interfaces",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>builder</code>",id:"builder",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>createContext</code>",id:"createcontext",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>defaultContext</code>",id:"defaultcontext",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"<code>empty</code>",id:"empty",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>from</code>",id:"from",level:3},{value:"Definitions",id:"definitions",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>of</code>",id:"of",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>reducer</code>",id:"reducer",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-4",level:4}],b={toc:f},S="wrapper";function v(e){var t=e,{components:a}=t,n=u(t,["components"]);return(0,r.yg)(S,g(y(y({},b),n),{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",y({},{id:"namespace-orderedsortedset"}),(0,r.yg)("inlineCode",{parentName:"h1"},"namespace OrderedSortedSet")),(0,r.yg)("p",null,"A type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the ",(0,r.yg)("a",y({parentName:"p"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,r.yg)("a",y({parentName:"p"},{href:"https://rimbu.org/api/rimbu/ordered/set/OrderedSortedSet/interface"}),"OrderedSortedSet API documentation")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Companion interface:")," ",(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/ordered/set/OrderedSortedSet/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"OrderedSortedSet<T>"))),(0,r.yg)("h2",y({},{id:"interfaces"}),"Interfaces"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/ordered/set/OrderedSortedSet/Builder/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"OrderedSortedSet.Builder<T>"))),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"A mutable ",(0,r.yg)("inlineCode",{parentName:"td"},"OrderedSortedSet")," builder used to efficiently create new immutable instances. See the ",(0,r.yg)("a",y({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,r.yg)("a",y({parentName:"td"},{href:"https://rimbu.org/api/rimbu/ordered/set/OrderedSortedSet/Builder/interface"}),"OrderedSortedSet.Builder API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/ordered/set/OrderedSortedSet/Context/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"OrderedSortedSet.Context<UT>"))),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"A context instance for an ",(0,r.yg)("inlineCode",{parentName:"td"},"OrderedSortedSet")," that acts as a factory for every instance of this type of collection.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/ordered/set/OrderedSortedSet/NonEmpty/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"OrderedSortedSet.NonEmpty<T>"))),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"A non-empty type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the ",(0,r.yg)("a",y({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,r.yg)("a",y({parentName:"td"},{href:"https://rimbu.org/api/rimbu/ordered/set/OrderedSortedSet/interface"}),"OrderedSortedSet API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/ordered/set/OrderedSortedSet/Types/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"OrderedSortedSet.Types"))),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))),(0,r.yg)("h2",y({},{id:"static-methods"}),"Static Methods"),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"builder"}),(0,r.yg)("inlineCode",{parentName:"h3"},"builder")),(0,r.yg)("p",null,"Returns an empty builder instance for this type of collection and context.")),(0,r.yg)("h4",y({},{id:"definition"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"builder<T extends UT>(): "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithElem")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, T>['builder'];"))),(0,r.yg)("h4",y({},{id:"type-parameters"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"T"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UT")),(0,r.yg)("td",y({parentName:"tr"},{align:null}))))),(0,r.yg)("admonition",y({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"HashSet.builder<number>()     // => HashSet.Builder<number>\n"))),(0,r.yg)("h4",y({},{id:"overrides"}),"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/Factory/interface#builder"}),"Factory.builder"))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"createcontext"}),(0,r.yg)("inlineCode",{parentName:"h3"},"createContext")),(0,r.yg)("p",null,"Returns a new OrderedSortedSet context instance based on the given ",(0,r.yg)("inlineCode",{parentName:"p"},"options"),".")),(0,r.yg)("h4",y({},{id:"definition-1"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"createContext<UT>(options?: {"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"listContext?: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/list/List/Context/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"List.Context")),(0,r.yg)("inlineCode",{parentName:"p"},";"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"setContext?: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/Context/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"SortedSet.Context")),(0,r.yg)("inlineCode",{parentName:"p"},"<UT>;"),(0,r.yg)("br",null),"\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"}): OrderedSortedSet.Context<UT>;"))),(0,r.yg)("h4",y({},{id:"type-parameters-1"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"UT"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"the upper element type for which the context can create instances")))),(0,r.yg)("h4",y({},{id:"parameters"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"options")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"{"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"td"},"listContext?: "),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/list/List/Context/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"List.Context")),(0,r.yg)("inlineCode",{parentName:"td"},";"),(0,r.yg)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"td"},"setContext?: "),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/sorted/SortedSet/Context/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"SortedSet.Context")),(0,r.yg)("inlineCode",{parentName:"td"},"<UT>;"),(0,r.yg)("br",null),"\xa0","\xa0",(0,r.yg)("inlineCode",{parentName:"td"},"}")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"(optional) an object containing the following properties:",(0,r.yg)("br",null)," - listContext: (optional) the list context to use for element ordering",(0,r.yg)("br",null)," - setContext: (optional) the set context to use for element sets"))))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"defaultcontext"}),(0,r.yg)("inlineCode",{parentName:"h3"},"defaultContext")),(0,r.yg)("p",null,"Returns the default context for OrderedSortedSet.")),(0,r.yg)("h4",y({},{id:"definition-2"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"defaultContext<UT>(): OrderedSortedSet.Context<UT>;"))),(0,r.yg)("h4",y({},{id:"type-parameters-2"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"UT"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"the upper element type for which the context can create instances"))))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"empty"}),(0,r.yg)("inlineCode",{parentName:"h3"},"empty")),(0,r.yg)("p",null,"Returns the (singleton) empty instance of this type and context with given value type.")),(0,r.yg)("h4",y({},{id:"definition-3"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"empty<T extends UT>(): "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithElem")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, T>['normal'];"))),(0,r.yg)("h4",y({},{id:"type-parameters-3"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"T"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UT")),(0,r.yg)("td",y({parentName:"tr"},{align:null}))))),(0,r.yg)("admonition",y({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"HashSet.empty<number>()    // => HashSet<number>\nHashSet.empty<string>()    // => HashSet<string>\n"))),(0,r.yg)("h4",y({},{id:"overrides-1"}),"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/Factory/interface#empty"}),"Factory.empty"))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"from"}),(0,r.yg)("inlineCode",{parentName:"h3"},"from")),(0,r.yg)("p",null,"Returns an immutable set of this collection type and context, containing the given values in ",(0,r.yg)("inlineCode",{parentName:"p"},"source"),".")),(0,r.yg)("h4",y({},{id:"definitions"}),"Definitions"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"from<T extends UT>(...sources: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<"),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<T>>): "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithElem")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, T>['nonEmpty'];"))),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"from<T extends UT>(...sources: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<"),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,r.yg)("inlineCode",{parentName:"p"},"<T>>): "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithElem")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, T>['normal'];"))),(0,r.yg)("h4",y({},{id:"type-parameters-4"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"T"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UT")),(0,r.yg)("td",y({parentName:"tr"},{align:null}))))),(0,r.yg)("h4",y({},{id:"parameters-1"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"sources")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"td"},"<"),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,r.yg)("inlineCode",{parentName:"td"},"<T>>")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"an array of ",(0,r.yg)("inlineCode",{parentName:"td"},"StreamSource")," instances containing values")))),(0,r.yg)("admonition",y({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"HashSet.from([1, 2, 3], [4, 5])   // => HashSet.NonEmpty<number>\n"))),(0,r.yg)("h4",y({},{id:"overrides-2"}),"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/Factory/interface#from"}),"Factory.from"))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"of"}),(0,r.yg)("inlineCode",{parentName:"h3"},"of")),(0,r.yg)("p",null,"Returns an immutable set of this type and context, containing the given ",(0,r.yg)("inlineCode",{parentName:"p"},"values"),".")),(0,r.yg)("h4",y({},{id:"definition-4"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"of<T extends UT>(...values: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"p"},"<T>): "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithElem")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, T>['nonEmpty'];"))),(0,r.yg)("h4",y({},{id:"type-parameters-5"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"T"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UT")),(0,r.yg)("td",y({parentName:"tr"},{align:null}))))),(0,r.yg)("h4",y({},{id:"parameters-2"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"values")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/common/ArrayNonEmpty/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"ArrayNonEmpty")),(0,r.yg)("inlineCode",{parentName:"td"},"<T>")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"a non-empty array of values")))),(0,r.yg)("admonition",y({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"HashSet.of(1, 2, 3).toArray()   // => [1, 2, 3]\n"))),(0,r.yg)("h4",y({},{id:"overrides-3"}),"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/Factory/interface#of"}),"Factory.of"))),(0,r.yg)("details",null,(0,r.yg)("summary",null,(0,r.yg)("h3",y({},{id:"reducer"}),(0,r.yg)("inlineCode",{parentName:"h3"},"reducer")),(0,r.yg)("p",null,"Returns a ",(0,r.yg)("inlineCode",{parentName:"p"},"Reducer")," that appends received items to an RSet and returns the RSet as a result. When a ",(0,r.yg)("inlineCode",{parentName:"p"},"source")," is given, the reducer will first create an RSet from the source, and then append elements to it.")),(0,r.yg)("h4",y({},{id:"definition-5"}),"Definition"),(0,r.yg)("code",null,(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"reducer<T extends UT>(source?: "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,r.yg)("inlineCode",{parentName:"p"},"<T>): Reducer<T, "),(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"WithElem")),(0,r.yg)("inlineCode",{parentName:"p"},"<Tp, T>['normal']>;"))),(0,r.yg)("h4",y({},{id:"type-parameters-6"}),"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Constraints"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),"T"),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"UT")),(0,r.yg)("td",y({parentName:"tr"},{align:null}))))),(0,r.yg)("h4",y({},{id:"parameters-3"}),"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,r.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("inlineCode",{parentName:"td"},"source")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),(0,r.yg)("a",y({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,r.yg)("inlineCode",{parentName:"a"},"StreamSource")),(0,r.yg)("inlineCode",{parentName:"td"},"<T>")),(0,r.yg)("td",y({parentName:"tr"},{align:null}),"(optional) an initial source of elements to append to")))),(0,r.yg)("admonition",y({},{title:"example",type:"note"}),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"const someList = SortedSet.of(1, 2, 3);\nconst result = Stream.range({ start: 20, amount: 5 }).reduce(SortedSet.reducer(someList))\nresult.toArray()   // => [1, 2, 3, 20, 21, 22, 23, 24]\n"))),(0,r.yg)("admonition",y({},{title:"note",type:"note"}),(0,r.yg)("p",{parentName:"admonition"},"uses an RSet builder under the hood. If the given ",(0,r.yg)("inlineCode",{parentName:"p"},"source")," is a RSet in the same context, it will directly call ",(0,r.yg)("inlineCode",{parentName:"p"},".toBuilder()"),".")),(0,r.yg)("h4",y({},{id:"overrides-4"}),"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",y({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/Factory/interface#reducer"}),"Factory.reducer"))))}v.isMDXComponent=!0}}]);