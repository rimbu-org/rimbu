"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[60560],{15680:(e,a,t)=>{t.d(a,{xA:()=>u,yg:()=>h});var r=t(96540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var m=r.createContext({}),p=function(e){var a=r.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},u=function(e){var a=p(e.components);return r.createElement(m.Provider,{value:a},e.children)},b="mdxType",s={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},c=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,m=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),b=p(t),c=n,h=b["".concat(m,".").concat(c)]||b[c]||s[c]||o;return t?r.createElement(h,l(l({ref:a},u),{},{components:t})):r.createElement(h,l({ref:a},u))}));function h(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,l=new Array(o);l[0]=c;var i={};for(var m in a)hasOwnProperty.call(a,m)&&(i[m]=a[m]);i.originalType=e,i[b]="string"==typeof e?e:n,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},98992:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>g,contentTitle:()=>y,default:()=>N,frontMatter:()=>h,metadata:()=>d,toc:()=>f});var r=t(15680),n=Object.defineProperty,o=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,a,t)=>a in e?n(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,b=(e,a)=>{for(var t in a||(a={}))m.call(a,t)&&u(e,t,a[t]);if(i)for(var t of i(a))p.call(a,t)&&u(e,t,a[t]);return e},s=(e,a)=>o(e,l(a)),c=(e,a)=>{var t={};for(var r in e)m.call(e,r)&&a.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&i)for(var r of i(e))a.indexOf(r)<0&&p.call(e,r)&&(t[r]=e[r]);return t};const h={title:"@rimbu/table/hash-row",slug:"/rimbu/table/hash-row"},y="package @rimbu/table/hash-row",d={unversionedId:"rimbu_table/hash-row/index",id:"rimbu_table/hash-row/index",title:"@rimbu/table/hash-row",description:"The @rimbu/table/hash-row package provides tables with hashed row key implementations.",source:"@site/api/rimbu_table/hash-row/index.mdx",sourceDirName:"rimbu_table/hash-row",slug:"/rimbu/table/hash-row",permalink:"/api/rimbu/table/hash-row",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/table/hash-row",slug:"/rimbu/table/hash-row"},sidebar:"defaultSidebar",previous:{title:"VariantTableBase<R,C,V,Tp>",permalink:"/api/rimbu/table/custom/VariantTableBase/interface"},next:{title:"HashTableHashColumn (namespace)",permalink:"/api/rimbu/table/hash-row/HashTableHashColumn/namespace"}},g={},f=[{value:"Interfaces",id:"interfaces",level:2},{value:"Namespaces",id:"namespaces",level:2}],w={toc:f},v="wrapper";function N(e){var a=e,{components:t}=a,n=c(a,["components"]);return(0,r.yg)(v,s(b(b({},w),n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",b({},{id:"package-rimbutablehash-row"}),(0,r.yg)("inlineCode",{parentName:"h1"},"package @rimbu/table/hash-row")),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"@rimbu/table/hash-row")," package provides tables with hashed row key implementations."),(0,r.yg)("p",null," See the ",(0,r.yg)("a",b({parentName:"p"},{href:"/docs/collections/table"}),"Rimbu docs Table page")," for more information."),(0,r.yg)("h2",b({},{id:"interfaces"}),"Interfaces"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",b({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",b({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",b({parentName:"tr"},{align:null}),(0,r.yg)("a",b({parentName:"td"},{href:"/api/rimbu/table/hash-row/HashTableHashColumn/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashTableHashColumn<R,C,V>"))),(0,r.yg)("td",b({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,r.yg)("a",b({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,r.yg)("a",b({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/hash-row/HashTableHashColumn/interface"}),"HashTableHashColumn API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",b({parentName:"tr"},{align:null}),(0,r.yg)("a",b({parentName:"td"},{href:"/api/rimbu/table/hash-row/HashTableSortedColumn/interface"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashTableSortedColumn<R,C,V>"))),(0,r.yg)("td",b({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,r.yg)("a",b({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,r.yg)("a",b({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/hash-row/HashTableSortedColumn/interface"}),"HashTableSortedColumn API documentation"))))),(0,r.yg)("h2",b({},{id:"namespaces"}),"Namespaces"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",b({parentName:"tr"},{align:null}),"Name"),(0,r.yg)("th",b({parentName:"tr"},{align:null}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",b({parentName:"tr"},{align:null}),(0,r.yg)("a",b({parentName:"td"},{href:"/api/rimbu/table/hash-row/HashTableHashColumn/namespace"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashTableHashColumn"))),(0,r.yg)("td",b({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,r.yg)("a",b({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,r.yg)("a",b({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/hash-row/HashTableHashColumn/interface"}),"HashTableHashColumn API documentation"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",b({parentName:"tr"},{align:null}),(0,r.yg)("a",b({parentName:"td"},{href:"/api/rimbu/table/hash-row/HashTableSortedColumn/namespace"}),(0,r.yg)("inlineCode",{parentName:"a"},"HashTableSortedColumn"))),(0,r.yg)("td",b({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,r.yg)("a",b({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,r.yg)("a",b({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/hash-row/HashTableSortedColumn/interface"}),"HashTableSortedColumn API documentation"))))))}N.isMDXComponent=!0}}]);