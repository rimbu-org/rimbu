"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[36557],{15680:(e,r,t)=>{t.d(r,{xA:()=>u,yg:()=>y});var n=t(96540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=c(t),f=a,y=s["".concat(l,".").concat(f)]||s[f]||m[f]||o;return t?n.createElement(y,i(i({ref:r},u),{},{components:t})):n.createElement(y,i({ref:r},u))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p[s]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},52764:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>b,contentTitle:()=>d,default:()=>w,frontMatter:()=>y,metadata:()=>g,toc:()=>h});var n=t(15680),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,r,t)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,s=(e,r)=>{for(var t in r||(r={}))l.call(r,t)&&u(e,t,r[t]);if(p)for(var t of p(r))c.call(r,t)&&u(e,t,r[t]);return e},m=(e,r)=>o(e,i(r)),f=(e,r)=>{var t={};for(var n in e)l.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&p)for(var n of p(e))r.indexOf(n)<0&&c.call(e,n)&&(t[n]=e[n]);return t};const y={title:"WaitGroup (namespace)",slug:"/rimbu/channel/WaitGroup/namespace"},d="namespace WaitGroup",g={unversionedId:"rimbu_channel/WaitGroup/index",id:"rimbu_channel/WaitGroup/index",title:"WaitGroup (namespace)",description:"A WaitGroup is a way to perform fork-join logic in an asynchronous context. It allows a process to create an arbitrary amount of sub-processes, and wait for all of them to finish before continuing.",source:"@site/api/rimbu_channel/WaitGroup/index.mdx",sourceDirName:"rimbu_channel/WaitGroup",slug:"/rimbu/channel/WaitGroup/namespace",permalink:"/api/rimbu/channel/WaitGroup/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"WaitGroup (namespace)",slug:"/rimbu/channel/WaitGroup/namespace"},sidebar:"defaultSidebar",previous:{title:"SemaphoreError",permalink:"/api/rimbu/channel/SemaphoreError/SemaphoreError/class"},next:{title:"WaitGroup.Constructors",permalink:"/api/rimbu/channel/WaitGroup/Constructors/interface"}},b={},h=[{value:"Interfaces",id:"interfaces",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>create</code>",id:"create",level:3},{value:"Definition",id:"definition",level:4}],v={toc:h},O="wrapper";function w(e){var r=e,{components:t}=r,a=f(r,["components"]);return(0,n.yg)(O,m(s(s({},v),a),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",s({},{id:"namespace-waitgroup"}),(0,n.yg)("inlineCode",{parentName:"h1"},"namespace WaitGroup")),(0,n.yg)("p",null,"A WaitGroup is a way to perform fork-join logic in an asynchronous context. It allows a process to create an arbitrary amount of sub-processes, and wait for all of them to finish before continuing."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Companion interface:")," ",(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/channel/WaitGroup/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"WaitGroup"))),(0,n.yg)("h2",s({},{id:"interfaces"}),"Interfaces"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",s({parentName:"tr"},{align:null}),(0,n.yg)("a",s({parentName:"td"},{href:"/api/rimbu/channel/WaitGroup/Constructors/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"WaitGroup.Constructors"))),(0,n.yg)("td",s({parentName:"tr"},{align:null}),"Defines the static ",(0,n.yg)("inlineCode",{parentName:"td"},"WaitGroup")," API.")))),(0,n.yg)("h2",s({},{id:"static-methods"}),"Static Methods"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",s({},{id:"create"}),(0,n.yg)("inlineCode",{parentName:"h3"},"create")),(0,n.yg)("p",null,"Returns a new ",(0,n.yg)("inlineCode",{parentName:"p"},"WaitGroup")," that can be used to wait for fan-out processes to complete.")),(0,n.yg)("h4",s({},{id:"definition"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"create(): "),(0,n.yg)("a",s({parentName:"p"},{href:"/api/rimbu/channel/WaitGroup/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"WaitGroup")),(0,n.yg)("inlineCode",{parentName:"p"},";")))))}w.isMDXComponent=!0}}]);