"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[85650],{15680:(e,n,t)=>{t.d(n,{xA:()=>y,yg:()=>s});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var m=a.createContext({}),g=function(e){var n=a.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},y=function(e){var n=g(e.components);return a.createElement(m.Provider,{value:n},e.children)},o="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,y=p(e,["components","mdxType","originalType","parentName"]),o=g(t),u=r,s=o["".concat(m,".").concat(u)]||o[u]||d[u]||l;return t?a.createElement(s,i(i({ref:n},y),{},{components:t})):a.createElement(s,i({ref:n},y))}));function s(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=u;var p={};for(var m in n)hasOwnProperty.call(n,m)&&(p[m]=n[m]);p.originalType=e,p[o]="string"==typeof e?e:r,i[1]=p;for(var g=2;g<l;g++)i[g]=t[g];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},75409:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>h,default:()=>C,frontMatter:()=>s,metadata:()=>N,toc:()=>f});var a=t(15680),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable,y=(e,n,t)=>n in e?r(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,o=(e,n)=>{for(var t in n||(n={}))m.call(n,t)&&y(e,t,n[t]);if(p)for(var t of p(n))g.call(n,t)&&y(e,t,n[t]);return e},d=(e,n)=>l(e,i(n)),u=(e,n)=>{var t={};for(var a in e)m.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&p)for(var a of p(e))n.indexOf(a)<0&&g.call(e,a)&&(t[a]=e[a]);return t};const s={title:"GraphElement (namespace)",slug:"/rimbu/graph/custom/GraphElement/namespace"},h="namespace GraphElement",N={unversionedId:"rimbu_graph/custom/GraphElement/index",id:"rimbu_graph/custom/GraphElement/index",title:"GraphElement (namespace)",description:"A graph element is either an isolated node as a 1-tuple, or a link between nodes represented as a Link instance.",source:"@site/api/rimbu_graph/custom/GraphElement/index.mdx",sourceDirName:"rimbu_graph/custom/GraphElement",slug:"/rimbu/graph/custom/GraphElement/namespace",permalink:"/api/rimbu/graph/custom/GraphElement/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"GraphElement (namespace)",slug:"/rimbu/graph/custom/GraphElement/namespace"},sidebar:"defaultSidebar",previous:{title:"GraphContext<UN,TT,Dir,Tp>",permalink:"/api/rimbu/graph/custom/GraphContext/class"},next:{title:"GraphElement",permalink:"/api/rimbu/graph/custom/GraphElement/type"}},c={},f=[{value:"Functions",id:"functions",level:2},{value:"<code>getLink</code>",id:"getlink",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:5},{value:"Parameters",id:"parameters",level:4},{value:"<code>getLinkElement</code>",id:"getlinkelement",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:5},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>getSingleNode</code>",id:"getsinglenode",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-2",level:5},{value:"Parameters",id:"parameters-2",level:4},{value:"<code>isLink</code>",id:"islink",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"<code>isSingleNode</code>",id:"issinglenode",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Parameters",id:"parameters-4",level:4}],b={toc:f},v="wrapper";function C(e){var n=e,{components:t}=n,r=u(n,["components"]);return(0,a.yg)(v,d(o(o({},b),r),{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",o({},{id:"namespace-graphelement"}),(0,a.yg)("inlineCode",{parentName:"h1"},"namespace GraphElement")),(0,a.yg)("p",null,"A graph element is either an isolated node as a 1-tuple, or a link between nodes represented as a ",(0,a.yg)("inlineCode",{parentName:"p"},"Link")," instance."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Companion type:")," ",(0,a.yg)("a",o({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphElement/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"GraphElement<N>"))),(0,a.yg)("h2",o({},{id:"functions"}),"Functions"),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",o({},{id:"getlink"}),(0,a.yg)("inlineCode",{parentName:"h3"},"getLink")),(0,a.yg)("p",null,"Returns the values of the link graph element if the given element ",(0,a.yg)("inlineCode",{parentName:"p"},"e")," is a Link element, or undefined otherwise.")),(0,a.yg)("h4",o({},{id:"definition"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"function getLink<N>(e: "),(0,a.yg)("a",o({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphElement/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"GraphElement")),(0,a.yg)("inlineCode",{parentName:"p"},"<N>): "),(0,a.yg)("a",o({parentName:"p"},{href:"/api/rimbu/graph/custom/Link/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"Link")),(0,a.yg)("inlineCode",{parentName:"p"},"<N> "),(0,a.yg)("code",null,"|"),(0,a.yg)("inlineCode",{parentName:"p"}," undefined;"))),(0,a.yg)("h5",o({},{id:"type-parameters"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",o({parentName:"tr"},{align:null}),"N"),(0,a.yg)("td",o({parentName:"tr"},{align:null}))))),(0,a.yg)("h4",o({},{id:"parameters"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",o({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"e")),(0,a.yg)("td",o({parentName:"tr"},{align:null}),(0,a.yg)("a",o({parentName:"td"},{href:"/api/rimbu/graph/custom/GraphElement/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"GraphElement")),(0,a.yg)("inlineCode",{parentName:"td"},"<N>")),(0,a.yg)("td",o({parentName:"tr"},{align:null}),"the graph element"))))),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",o({},{id:"getlinkelement"}),(0,a.yg)("inlineCode",{parentName:"h3"},"getLinkElement")),(0,a.yg)("p",null,"Returns the element at the given ",(0,a.yg)("inlineCode",{parentName:"p"},"key")," in the graph element ",(0,a.yg)("inlineCode",{parentName:"p"},"e"),", if the element is a Link element, or returns the given ",(0,a.yg)("inlineCode",{parentName:"p"},"otherwise")," value otherwise.")),(0,a.yg)("h4",o({},{id:"definition-1"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"function getLinkElement<N>(e: "),(0,a.yg)("a",o({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphElement/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"GraphElement")),(0,a.yg)("inlineCode",{parentName:"p"},"<N>, key: 0 "),(0,a.yg)("code",null,"|"),(0,a.yg)("inlineCode",{parentName:"p"},"1): N"),(0,a.yg)("code",null,"|"),(0,a.yg)("inlineCode",{parentName:"p"}," undefined;"))),(0,a.yg)("h5",o({},{id:"type-parameters-1"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",o({parentName:"tr"},{align:null}),"N"),(0,a.yg)("td",o({parentName:"tr"},{align:null}))))),(0,a.yg)("h4",o({},{id:"parameters-1"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",o({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"e")),(0,a.yg)("td",o({parentName:"tr"},{align:null}),(0,a.yg)("a",o({parentName:"td"},{href:"/api/rimbu/graph/custom/GraphElement/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"GraphElement")),(0,a.yg)("inlineCode",{parentName:"td"},"<N>")),(0,a.yg)("td",o({parentName:"tr"},{align:null}),"the graph element")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",o({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"key")),(0,a.yg)("td",o({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"0 "),(0,a.yg)("code",null,"|"),(0,a.yg)("inlineCode",{parentName:"td"}," 1")),(0,a.yg)("td",o({parentName:"tr"},{align:null}),"the link key"))))),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",o({},{id:"getsinglenode"}),(0,a.yg)("inlineCode",{parentName:"h3"},"getSingleNode")),(0,a.yg)("p",null,"Returns the value of a single node graph element if the given element ",(0,a.yg)("inlineCode",{parentName:"p"},"e")," is a single node, or the given ",(0,a.yg)("inlineCode",{parentName:"p"},"otherwise")," fallback value otherwise.")),(0,a.yg)("h4",o({},{id:"definition-2"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"function getSingleNode<N>(e: "),(0,a.yg)("a",o({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphElement/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"GraphElement")),(0,a.yg)("inlineCode",{parentName:"p"},"<N>): N "),(0,a.yg)("code",null,"|"),(0,a.yg)("inlineCode",{parentName:"p"}," undefined;"))),(0,a.yg)("h5",o({},{id:"type-parameters-2"}),"Type parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",o({parentName:"tr"},{align:null}),"N"),(0,a.yg)("td",o({parentName:"tr"},{align:null}))))),(0,a.yg)("h4",o({},{id:"parameters-2"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",o({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"e")),(0,a.yg)("td",o({parentName:"tr"},{align:null}),(0,a.yg)("a",o({parentName:"td"},{href:"/api/rimbu/graph/custom/GraphElement/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"GraphElement")),(0,a.yg)("inlineCode",{parentName:"td"},"<N>")),(0,a.yg)("td",o({parentName:"tr"},{align:null}),"the graph element"))))),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",o({},{id:"islink"}),(0,a.yg)("inlineCode",{parentName:"h3"},"isLink")),(0,a.yg)("p",null,"Returns true if the given graph element ",(0,a.yg)("inlineCode",{parentName:"p"},"e")," is a 2-tuple. Instructs the compiler that the type is a 2-tuple.")),(0,a.yg)("h4",o({},{id:"definition-3"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"function isLink(e: "),(0,a.yg)("a",o({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphElement/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"GraphElement")),(0,a.yg)("inlineCode",{parentName:"p"},"<any>): e is [unknown, unknown];"))),(0,a.yg)("h4",o({},{id:"parameters-3"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",o({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"e")),(0,a.yg)("td",o({parentName:"tr"},{align:null}),(0,a.yg)("a",o({parentName:"td"},{href:"/api/rimbu/graph/custom/GraphElement/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"GraphElement")),(0,a.yg)("inlineCode",{parentName:"td"},"<any>")),(0,a.yg)("td",o({parentName:"tr"},{align:null}),"the graph element"))))),(0,a.yg)("details",null,(0,a.yg)("summary",null,(0,a.yg)("h3",o({},{id:"issinglenode"}),(0,a.yg)("inlineCode",{parentName:"h3"},"isSingleNode")),(0,a.yg)("p",null,"Returns true if the given graph element ",(0,a.yg)("inlineCode",{parentName:"p"},"e")," is a single node. Instructs the compiler that the type is a 1-tuple.")),(0,a.yg)("h4",o({},{id:"definition-4"}),"Definition"),(0,a.yg)("code",null,(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"function isSingleNode(e: "),(0,a.yg)("a",o({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphElement/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"GraphElement")),(0,a.yg)("inlineCode",{parentName:"p"},"<any>): e is [unknown];"))),(0,a.yg)("h4",o({},{id:"parameters-4"}),"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Name"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Type"),(0,a.yg)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",o({parentName:"tr"},{align:null}),(0,a.yg)("inlineCode",{parentName:"td"},"e")),(0,a.yg)("td",o({parentName:"tr"},{align:null}),(0,a.yg)("a",o({parentName:"td"},{href:"/api/rimbu/graph/custom/GraphElement/type"}),(0,a.yg)("inlineCode",{parentName:"a"},"GraphElement")),(0,a.yg)("inlineCode",{parentName:"td"},"<any>")),(0,a.yg)("td",o({parentName:"tr"},{align:null}),"the graph element"))))))}C.isMDXComponent=!0}}]);