"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[42242],{15680:(e,n,a)=>{a.d(n,{xA:()=>g,yg:()=>c});var t=a(96540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=t.createContext({}),p=function(e){var n=t.useContext(m),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},g=function(e){var n=p(e.components);return t.createElement(m.Provider,{value:n},e.children)},y="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},s=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),y=p(a),s=r,c=y["".concat(m,".").concat(s)]||y[s]||d[s]||l;return a?t.createElement(c,i(i({ref:n},g),{},{components:a})):t.createElement(c,i({ref:n},g))}));function c(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=s;var o={};for(var m in n)hasOwnProperty.call(n,m)&&(o[m]=n[m]);o.originalType=e,o[y]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}s.displayName="MDXCreateElement"},81555:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>N,contentTitle:()=>u,default:()=>v,frontMatter:()=>c,metadata:()=>h,toc:()=>f});var t=a(15680),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,g=(e,n,a)=>n in e?r(e,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[n]=a,y=(e,n)=>{for(var a in n||(n={}))m.call(n,a)&&g(e,a,n[a]);if(o)for(var a of o(n))p.call(n,a)&&g(e,a,n[a]);return e},d=(e,n)=>l(e,i(n)),s=(e,n)=>{var a={};for(var t in e)m.call(e,t)&&n.indexOf(t)<0&&(a[t]=e[t]);if(null!=e&&o)for(var t of o(e))n.indexOf(t)<0&&p.call(e,t)&&(a[t]=e[t]);return a};const c={title:"RemoteChannel (namespace)",slug:"/rimbu/channel/RemoteChannel/namespace"},u="namespace RemoteChannel",h={unversionedId:"rimbu_channel/RemoteChannel/index",id:"rimbu_channel/RemoteChannel/index",title:"RemoteChannel (namespace)",description:"A RemoteChannel is a channel that communicates through a message port of the RemoteChannel.SimpleMessagePort type. This makes it usable for cross-environment channel communication, e.g. cross threads or even cross network. Like CrossChannel, RemoteChannel does not receive its own sent messages, but requires another end to communicate.",source:"@site/api/rimbu_channel/RemoteChannel/index.mdx",sourceDirName:"rimbu_channel/RemoteChannel",slug:"/rimbu/channel/RemoteChannel/namespace",permalink:"/api/rimbu/channel/RemoteChannel/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"RemoteChannel (namespace)",slug:"/rimbu/channel/RemoteChannel/namespace"},sidebar:"defaultSidebar",previous:{title:"Mutex",permalink:"/api/rimbu/channel/Mutex/interface"},next:{title:"RemoteChannel.Constructors",permalink:"/api/rimbu/channel/RemoteChannel/Constructors/interface"}},N={},f=[{value:"Interfaces",id:"interfaces",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>createCross</code>",id:"createcross",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>createRead</code>",id:"createread",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>createWrite</code>",id:"createwrite",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-2",level:4}],C={toc:f},b="wrapper";function v(e){var n=e,{components:a}=n,r=s(n,["components"]);return(0,t.yg)(b,d(y(y({},C),r),{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h1",y({},{id:"namespace-remotechannel"}),(0,t.yg)("inlineCode",{parentName:"h1"},"namespace RemoteChannel")),(0,t.yg)("p",null,"A RemoteChannel is a channel that communicates through a message port of the ",(0,t.yg)("inlineCode",{parentName:"p"},"RemoteChannel.SimpleMessagePort")," type. This makes it usable for cross-environment channel communication, e.g. cross threads or even cross network. Like ",(0,t.yg)("inlineCode",{parentName:"p"},"CrossChannel"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"RemoteChannel")," does not receive its own sent messages, but requires another end to communicate."),(0,t.yg)("h2",y({},{id:"interfaces"}),"Interfaces"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/Constructors/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.Constructors"))),(0,t.yg)("td",y({parentName:"tr"},{align:null}),"Defines the static ",(0,t.yg)("inlineCode",{parentName:"td"},"RemoteChannel")," API.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/CrossConfig/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.CrossConfig"))),(0,t.yg)("td",y({parentName:"tr"},{align:null}),"Interface defining the cross-channel configuration for a RemoteChannel.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/ReadConfig/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.ReadConfig"))),(0,t.yg)("td",y({parentName:"tr"},{align:null}),"Interface defining the read configuration for a RemoteChannel.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort"))),(0,t.yg)("td",y({parentName:"tr"},{align:null}),"Interface used to perform low-level message communication between processes. Compatible with browser, Node, and Worker contexts.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/WriteConfig/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.WriteConfig"))),(0,t.yg)("td",y({parentName:"tr"},{align:null}),"Interface defining the write configuration for a RemoteChannel.")))),(0,t.yg)("h2",y({},{id:"static-methods"}),"Static Methods"),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",y({},{id:"createcross"}),(0,t.yg)("inlineCode",{parentName:"h3"},"createCross")),(0,t.yg)("p",null,"Resolves to a new cross-channel RemoteChannel using the given configuration.")),(0,t.yg)("h4",y({},{id:"definition"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"createCross<TSend = void, TReceive = TSend>(port: "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort")),(0,t.yg)("inlineCode",{parentName:"p"},", config: "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/CrossConfig/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.CrossConfig")),(0,t.yg)("inlineCode",{parentName:"p"},"): Promise<"),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/CrossChannel/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"CrossChannel")),(0,t.yg)("inlineCode",{parentName:"p"},"<TSend, TReceive>>;"))),(0,t.yg)("h4",y({},{id:"type-parameters"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),"TSend"),(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"void")),(0,t.yg)("td",y({parentName:"tr"},{align:null}),"the send message type")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),"TReceive"),(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"TSend")),(0,t.yg)("td",y({parentName:"tr"},{align:null}),"the receive message type")))),(0,t.yg)("h4",y({},{id:"parameters"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"port")),(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort"))),(0,t.yg)("td",y({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"config")),(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/CrossConfig/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.CrossConfig"))),(0,t.yg)("td",y({parentName:"tr"},{align:null}),"the channel configuration"))))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",y({},{id:"createread"}),(0,t.yg)("inlineCode",{parentName:"h3"},"createRead")),(0,t.yg)("p",null,"Resolves to a new read-only RemoteChannel using the given configuration.")),(0,t.yg)("h4",y({},{id:"definition-1"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"createRead<T = void>(port: "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort")),(0,t.yg)("inlineCode",{parentName:"p"},", config: "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/ReadConfig/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.ReadConfig")),(0,t.yg)("inlineCode",{parentName:"p"},"): Promise<"),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/Channel/Read/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"Channel.Read")),(0,t.yg)("inlineCode",{parentName:"p"},"<T>>;"))),(0,t.yg)("h4",y({},{id:"type-parameters-1"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),"T"),(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"void")),(0,t.yg)("td",y({parentName:"tr"},{align:null}),"the message type")))),(0,t.yg)("h4",y({},{id:"parameters-1"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"port")),(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort"))),(0,t.yg)("td",y({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"config")),(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/ReadConfig/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.ReadConfig"))),(0,t.yg)("td",y({parentName:"tr"},{align:null}),"the channel configuration"))))),(0,t.yg)("details",null,(0,t.yg)("summary",null,(0,t.yg)("h3",y({},{id:"createwrite"}),(0,t.yg)("inlineCode",{parentName:"h3"},"createWrite")),(0,t.yg)("p",null,"Resolves to a new write-only RemoteChannel using the given configuration.")),(0,t.yg)("h4",y({},{id:"definition-2"}),"Definition"),(0,t.yg)("code",null,(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"createWrite<T = void>(port: "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort")),(0,t.yg)("inlineCode",{parentName:"p"},", config: "),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/WriteConfig/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.WriteConfig")),(0,t.yg)("inlineCode",{parentName:"p"},"): Promise<"),(0,t.yg)("a",y({parentName:"p"},{href:"/api/rimbu/channel/Channel/Write/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"Channel.Write")),(0,t.yg)("inlineCode",{parentName:"p"},"<T>>;"))),(0,t.yg)("h4",y({},{id:"type-parameters-2"}),"Type parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Default"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),"T"),(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"void")),(0,t.yg)("td",y({parentName:"tr"},{align:null}),"the message type")))),(0,t.yg)("h4",y({},{id:"parameters-2"}),"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Type"),(0,t.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"port")),(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort"))),(0,t.yg)("td",y({parentName:"tr"},{align:null}))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("inlineCode",{parentName:"td"},"config")),(0,t.yg)("td",y({parentName:"tr"},{align:null}),(0,t.yg)("a",y({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/WriteConfig/interface"}),(0,t.yg)("inlineCode",{parentName:"a"},"RemoteChannel.WriteConfig"))),(0,t.yg)("td",y({parentName:"tr"},{align:null}),"the channel configuration"))))))}v.isMDXComponent=!0}}]);