"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[52861],{15680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>s});var n=t(96540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),m=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=m(e.components);return n.createElement(l.Provider,{value:r},e.children)},y="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),y=m(t),u=a,s=y["".concat(l,".").concat(u)]||y[u]||d[u]||o;return t?n.createElement(s,i(i({ref:r},c),{},{components:t})):n.createElement(s,i({ref:r},c))}));function s(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p[y]="string"==typeof e?e:a,i[1]=p;for(var m=2;m<o;m++)i[m]=t[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},24022:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>h,contentTitle:()=>g,default:()=>w,frontMatter:()=>s,metadata:()=>f,toc:()=>b});var n=t(15680),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,c=(e,r,t)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,y=(e,r)=>{for(var t in r||(r={}))l.call(r,t)&&c(e,t,r[t]);if(p)for(var t of p(r))m.call(r,t)&&c(e,t,r[t]);return e},d=(e,r)=>o(e,i(r)),u=(e,r)=>{var t={};for(var n in e)l.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&p)for(var n of p(e))r.indexOf(n)<0&&m.call(e,n)&&(t[n]=e[n]);return t};const s={title:"ArrowGraphSorted.NonEmpty<N>",slug:"/rimbu/graph/ArrowGraphSorted/NonEmpty/interface"},g="interface ArrowGraphSorted.NonEmpty<N>",f={unversionedId:"rimbu_graph/ArrowGraphSorted/NonEmpty.interface",id:"rimbu_graph/ArrowGraphSorted/NonEmpty.interface",title:"ArrowGraphSorted.NonEmpty<N>",description:"A non-empty type-invariant immutable valued arrow (directed) graph. The connections are internally maintained using sorted collections See the Graph documentation and the ArrowGraphSorted API documentation",source:"@site/api/rimbu_graph/ArrowGraphSorted/NonEmpty.interface.mdx",sourceDirName:"rimbu_graph/ArrowGraphSorted",slug:"/rimbu/graph/ArrowGraphSorted/NonEmpty/interface",permalink:"/api/rimbu/graph/ArrowGraphSorted/NonEmpty/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"ArrowGraphSorted.NonEmpty<N>",slug:"/rimbu/graph/ArrowGraphSorted/NonEmpty/interface"},sidebar:"defaultSidebar",previous:{title:"ArrowGraphSorted.Context<UN>",permalink:"/api/rimbu/graph/ArrowGraphSorted/Context/interface"},next:{title:"ArrowGraphSorted.Types",permalink:"/api/rimbu/graph/ArrowGraphSorted/Types/interface"}},h={},b=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4}],N={toc:b},v="wrapper";function w(e){var r=e,{components:t}=r,a=u(r,["components"]);return(0,n.yg)(v,d(y(y({},N),a),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",y({},{id:"interface-arrowgraphsortednonemptyn"}),(0,n.yg)("inlineCode",{parentName:"h1"},"interface ArrowGraphSorted.NonEmpty<N>")),(0,n.yg)("p",null,"A non-empty type-invariant immutable valued arrow (directed) graph. The connections are internally maintained using sorted collections See the ",(0,n.yg)("a",y({parentName:"p"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,n.yg)("a",y({parentName:"p"},{href:"https://rimbu.org/api/rimbu/graph/ArrowGraphSorted/interface"}),"ArrowGraphSorted API documentation")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Extends:")," ",(0,n.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"Streamable.NonEmpty<T>")),", ",(0,n.yg)("a",y({parentName:"p"},{href:"/api/rimbu/graph/ArrowGraphSorted/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"ArrowGraphSorted<N>"))),(0,n.yg)("h2",y({},{id:"type-parameters"}),"Type parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),"N"),(0,n.yg)("td",y({parentName:"tr"},{align:null}),"the node type")))),(0,n.yg)("h2",y({},{id:"methods"}),"Methods"),(0,n.yg)("details",null,(0,n.yg)("summary",null,(0,n.yg)("h3",y({},{id:"stream"}),(0,n.yg)("inlineCode",{parentName:"h3"},"stream")),(0,n.yg)("p",null,"Returns a non-empty Stream containing all entries of this collection as tuples of key and value.")),(0,n.yg)("h4",y({},{id:"definition"}),"Definition"),(0,n.yg)("code",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"stream(): "),(0,n.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,n.yg)("inlineCode",{parentName:"p"},"<GraphElement<N>>;"))),(0,n.yg)("admonition",y({},{title:"example",type:"note"}),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",y({parentName:"pre"},{className:"language-ts"}),"ArrowValuedGraphSorted.of([1, 2, 'a'], [2, 3, 'b']).stream().toArray()\n// => [[1, 2, 'a'], [2, 3, 'b']]\n"))),(0,n.yg)("h4",y({},{id:"overrides"}),"Overrides"),(0,n.yg)("p",null,(0,n.yg)("a",y({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface#stream"}),"NonEmpty.stream"))))}w.isMDXComponent=!0}}]);