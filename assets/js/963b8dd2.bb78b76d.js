"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[70183],{15680:(e,a,t)=>{t.d(a,{xA:()=>b,yg:()=>s});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=n.createContext({}),c=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},b=function(e){var a=c(e.components);return n.createElement(p.Provider,{value:a},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},y=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),m=c(t),y=r,s=m["".concat(p,".").concat(y)]||m[y]||u[y]||i;return t?n.createElement(s,l(l({ref:a},b),{},{components:t})):n.createElement(s,l({ref:a},b))}));function s(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=y;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},61858:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>g,contentTitle:()=>f,default:()=>O,frontMatter:()=>s,metadata:()=>d,toc:()=>h});var n=t(15680),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,b=(e,a,t)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,m=(e,a)=>{for(var t in a||(a={}))p.call(a,t)&&b(e,t,a[t]);if(o)for(var t of o(a))c.call(a,t)&&b(e,t,a[t]);return e},u=(e,a)=>i(e,l(a)),y=(e,a)=>{var t={};for(var n in e)p.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&o)for(var n of o(e))a.indexOf(n)<0&&c.call(e,n)&&(t[n]=e[n]);return t};const s={title:"VariantTable (namespace)",slug:"/rimbu/table/VariantTable/namespace"},f="namespace VariantTable",d={unversionedId:"rimbu_table/VariantTable/index",id:"rimbu_table/VariantTable/index",title:"VariantTable (namespace)",description:"A type-variant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the VariantTable API documentation",source:"@site/api/rimbu_table/VariantTable/index.mdx",sourceDirName:"rimbu_table/VariantTable",slug:"/rimbu/table/VariantTable/namespace",permalink:"/api/rimbu/table/VariantTable/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"VariantTable (namespace)",slug:"/rimbu/table/VariantTable/namespace"},sidebar:"defaultSidebar",previous:{title:"Table<R,C,V>",permalink:"/api/rimbu/table/Table/interface"},next:{title:"VariantTable.NonEmpty<R,C,V>",permalink:"/api/rimbu/table/VariantTable/NonEmpty/interface"}},g={},h=[{value:"Interfaces",id:"interfaces",level:2}],T={toc:h},v="wrapper";function O(e){var a=e,{components:t}=a,r=y(a,["components"]);return(0,n.yg)(v,u(m(m({},T),r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",m({},{id:"namespace-varianttable"}),(0,n.yg)("inlineCode",{parentName:"h1"},"namespace VariantTable")),(0,n.yg)("p",null,"A type-variant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",m({parentName:"p"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",m({parentName:"p"},{href:"https://rimbu.org/api/rimbu/table/VariantTable/interface"}),"VariantTable API documentation")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Companion interface:")," ",(0,n.yg)("a",m({parentName:"p"},{href:"/api/rimbu/table/VariantTable/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"VariantTable<R,C,V>"))),(0,n.yg)("h2",m({},{id:"interfaces"}),"Interfaces"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.yg)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/table/VariantTable/NonEmpty/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"VariantTable.NonEmpty<R,C,V>"))),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"A non-empty type-variant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.yg)("a",m({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.yg)("a",m({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/VariantTable/interface"}),"VariantTable API documentation"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",m({parentName:"tr"},{align:null}),(0,n.yg)("a",m({parentName:"td"},{href:"/api/rimbu/table/VariantTable/Types/interface"}),(0,n.yg)("inlineCode",{parentName:"a"},"VariantTable.Types"))),(0,n.yg)("td",m({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))))}O.isMDXComponent=!0}}]);