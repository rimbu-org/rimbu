"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[60606],{15680:(e,t,r)=>{r.d(t,{xA:()=>y,yg:()=>f});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},y=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,y=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,f=u["".concat(p,".").concat(m)]||u[m]||s[m]||i;return r?n.createElement(f,o(o({ref:t},y),{},{components:r})):n.createElement(f,o({ref:t},y))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},22555:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>g,contentTitle:()=>b,default:()=>N,frontMatter:()=>f,metadata:()=>d,toc:()=>h});var n=r(15680),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,y=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&y(e,r,t[r]);if(l)for(var r of l(t))c.call(t,r)&&y(e,r,t[r]);return e},s=(e,t)=>i(e,o(t)),m=(e,t)=>{var r={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&l)for(var n of l(e))t.indexOf(n)<0&&c.call(e,n)&&(r[n]=e[n]);return r};const f={title:"NearestKeyMatch",slug:"/rimbu/proximity/NearestKeyMatch/type"},b="type NearestKeyMatch<K,V>",d={unversionedId:"rimbu_proximity/NearestKeyMatch.type",id:"rimbu_proximity/NearestKeyMatch.type",title:"NearestKeyMatch",description:"Match between a reference key and the closest key in a [key, value] collection:",source:"@site/api/rimbu_proximity/NearestKeyMatch.type.mdx",sourceDirName:"rimbu_proximity",slug:"/rimbu/proximity/NearestKeyMatch/type",permalink:"/api/rimbu/proximity/NearestKeyMatch/type",draft:!1,tags:[],version:"current",frontMatter:{title:"NearestKeyMatch",slug:"/rimbu/proximity/NearestKeyMatch/type"},sidebar:"defaultSidebar",previous:{title:"DistanceFunction",permalink:"/api/rimbu/proximity/DistanceFunction/type"},next:{title:"ProximityMap (namespace)",permalink:"/api/rimbu/proximity/ProximityMap/namespace"}},g={},h=[{value:"Definition",id:"definition",level:2}],v={toc:h},O="wrapper";function N(e){var t=e,{components:r}=t,a=m(t,["components"]);return(0,n.yg)(O,s(u(u({},v),a),{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h1",u({},{id:"type-nearestkeymatchkv"}),(0,n.yg)("inlineCode",{parentName:"h1"},"type NearestKeyMatch<K,V>")),(0,n.yg)("p",null,"Match between a reference key and the closest key in a ","[key, value]"," collection:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"key")," is the key closest to the reference key"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"value")," is the value associated with the closest key"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"distance")," is the distance between the closest key and the reference key; it is always a finite value")),(0,n.yg)("h2",u({},{id:"definition"}),"Definition"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"export type NearestKeyMatch<K, V> = Readonly<{"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"key: K;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"value: V;"),(0,n.yg)("br",null),"\xa0","\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"distance: "),(0,n.yg)("a",u({parentName:"p"},{href:"/api/rimbu/proximity/Distance/type"}),(0,n.yg)("inlineCode",{parentName:"a"},"Distance")),(0,n.yg)("inlineCode",{parentName:"p"},";"),(0,n.yg)("br",null),(0,n.yg)("inlineCode",{parentName:"p"},"}>;")))}N.isMDXComponent=!0}}]);