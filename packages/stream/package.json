{
  "name": "@rimbu/stream",
  "version": "2.2.1",
  "description": "Efficient structure representing a sequence of elements, with powerful operations for TypeScript",
  "keywords": [
    "stream",
    "lazy",
    "iterable",
    "sequence",
    "elements",
    "operations",
    "immutable",
    "collection",
    "rimbu",
    "typescript"
  ],
  "homepage": "https://rimbu.org",
  "author": {
    "name": "Arvid Nicolaas",
    "email": "arvid@rimbu.org",
    "url": "https://github.com/vitoke"
  },
  "license": "MIT",
  "funding": [
    {
      "type": "individual",
      "url": "https://github.com/sponsors/vitoke"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/rimbu-org/rimbu.git",
    "directory": "packages/stream"
  },
  "type": "module",
  "main": "./dist/cjs/main/index.cjs",
  "module": "./dist/esm/main/index.mjs",
  "types": "./dist/cjs/main/index.d.cts",
  "exports": {
    ".": {
      "bun": "./dist/bun/main/index.mts",
      "import": {
        "types": "./dist/esm/main/index.d.mts",
        "default": "./dist/esm/main/index.mjs"
      },
      "require": {
        "types": "./dist/cjs/main/index.d.cts",
        "default": "./dist/cjs/main/index.cjs"
      }
    },
    "./async": {
      "bun": "./dist/bun/async/index.mts",
      "import": {
        "types": "./dist/esm/async/index.d.mts",
        "default": "./dist/esm/async/index.mjs"
      },
      "require": {
        "types": "./dist/cjs/async/index.d.cts",
        "default": "./dist/cjs/async/index.cjs"
      }
    },
    "./async-custom": {
      "bun": "./dist/bun/async-custom/index.mts",
      "import": {
        "types": "./dist/esm/async-custom/index.d.mts",
        "default": "./dist/esm/async-custom/index.mjs"
      },
      "require": {
        "types": "./dist/cjs/async-custom/index.d.cts",
        "default": "./dist/cjs/async-custom/index.cjs"
      }
    },
    "./custom": {
      "bun": "./dist/bun/custom/index.mts",
      "import": {
        "types": "./dist/esm/custom/index.d.mts",
        "default": "./dist/esm/custom/index.mjs"
      },
      "require": {
        "types": "./dist/cjs/custom/index.d.cts",
        "default": "./dist/cjs/custom/index.cjs"
      }
    }
  },
  "files": [
    "dist",
    "src",
    "custom",
    "async",
    "async-custom"
  ],
  "scripts": {
    "build": "yarn clean && yarn bundle",
    "build:deno": "yarn bundle:deno-prepare && yarn bundle:deno-convert && yarn bundle:deno-move && yarn bundle:deno-clean",
    "bundle": "yarn bundle:cjs && yarn bundle:esm && yarn bundle:bun",
    "bundle:bun": "node ../../config/bunnify.mjs -mode bun",
    "bundle:cjs": "yarn bundle:cjs-prepare && yarn bundle:cjs-build && yarn bundle:cjs-clean",
    "bundle:cjs-prepare": "node ../../config/bunnify.mjs -mode cjs",
    "bundle:cjs-build": "tsc -p tsconfig.cjs.json",
    "bundle:cjs-clean": "rimraf _cjs_prepare",
    "bundle:deno-prepare": "node ../../config/prepare-denoify.mjs",
    "bundle:deno-convert": "denoify --src _deno_prepare/src",
    "bundle:deno-move": "rimraf ../../deno_dist/stream && mv deno_dist ../../deno_dist/stream",
    "bundle:deno-clean": "rimraf _deno_prepare",
    "bundle:esm": "tsc --p tsconfig.esm.json",
    "clean": "rimraf dist",
    "circular": "npx -y madge --ts-config tsconfig.json --circular --extensions mts src/main/index.mts",
    "extract-api": "yarn extract-api:main && yarn extract-api:custom && yarn extract-api:async && yarn extract-api:async-custom",
    "extract-api:main": "tsx ../../config/api-extractor.ts config/api-extractor.main.json",
    "extract-api:custom": "tsx ../../config/api-extractor.ts config/api-extractor.custom.json",
    "extract-api:async": "tsx ../../config/api-extractor.ts config/api-extractor.async.json",
    "extract-api:async-custom": "tsx ../../config/api-extractor.ts config/api-extractor.async-custom.json",
    "format": "yarn format:base --write",
    "format:base": "prettier \"{!CHANGELOG.md}|**/**/*.{ts,tsx,js,mts,mjs,json,md}\"",
    "format:check": "yarn format:base --check",
    "lint": "eslint src",
    "test": "vitest run",
    "test:cov": "vitest run --coverage",
    "test:watch": "vitest",
    "test:types": "tsd --files test-d",
    "typecheck": "tsc"
  },
  "dependencies": {
    "@rimbu/base": "^2.0.2",
    "@rimbu/common": "^2.0.2",
    "tslib": "^2.6.2"
  },
  "publishConfig": {
    "access": "public"
  },
  "madge": {
    "detectiveOptions": {
      "ts": {
        "skipTypeImports": true
      }
    }
  }
}
